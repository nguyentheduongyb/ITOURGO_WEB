@{

    var langID = APP_B2B_PUB.Controllers.HomeController.GetLangID(Request.QueryString["lang"]);


    @functions {
        public static string GetUrl(string strTxt)
        {
            return APP_B2B_PUB.Controllers.HomeController.GetUrl(strTxt);
        }
        public static string GetFormatDateTime(string strTxt)
        {
            return APP_B2B_PUB.Controllers.HomeController.GetFormatDateTime(strTxt);
        }
    }


    var strTitle = "Thông tin cá nhân";

    string storageItem = Request.QueryString["lang"];
    string strUserName = ViewContext.RouteData.Values["strUserName"].ToString();

    //HttpCookieCollection cook = Request.Cookies;  
    //var value = Request.Cookies["lang"].Value;

    ViewBag.Lang = Request.QueryString["lang"];
    ViewBag.Title = strTitle;
    ViewBag.Keywords = "B2B Du lịch, kết nối đại lý, đại lý bán, đại lý mua, khách du lịch";
    ViewBag.Description = "Một nền tảng giúp các công ty và các nhà cung cấp dịch vụ du lịch kết nối đến các đại lý của họ.Hệ thống giúp mở rộng kênh bán hàng, tăng doanh số, giảm chi phí.    Tạo mối liên kết mở rộng B2B giữa các doanh nghiệp, giúp các công ty phát triển bền vững";
}
<app-content-display>

    <div id="Content" style="background: #F5F7F8;min-height: 100vh">
    </div>
    <script type="text/javascript">

        $('#pnRow2').remove()
        $('#pnRow1').css('border-bottom', '5px solid #e4e3e3')


        $.ModulePage_UserDetail = function (options) {
            var defaults = {
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strPassengerGUID,
                strCompanyGUID: null,
            }
            options = $.extend(defaults, options);
            var IdOrClass_Main = '#Content'

            var ObjList_Api = {
                GetListOrderBooking: {
                    strApiLink: 'api/booking/GetListOrderBooking'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strCompanyPartnerGUID: options.strCompanyPartnerGUID
                        , strCompanyOwnerGUID: options.strCompanyOwnerGUID
                        , strOrderBookingGUID: null
                        , strFilterOrderBookingCode: null
                        , strFilterGroupName: null
                        , strFilterDateFrom: null
                        , strFilterDateTo: null
                        , intCurPage: 1
                        , intPageSize: 10
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                },
            }



            //---------
            var Obj_Filter = {}         // Biến lọc
            // var Obj_FormInput = {}
            var Arr_ListTbl = []

            var Obj_FN_Main = {}
            //---------

            if (JSON.parse(png.ArrLS.UserDetail.get()).strUserName == '@Html.Raw(@strUserName)')
                GetMainPanel()
            else
                $(IdOrClass_Main).html(`
                    <div class="container pn-padding-t-b-30">
                        <h1>Không có nội dung</h1>
                    </div>
                `)

            function GetMainPanel() {

                var objPanel = {
                    pnMain: {
                        tag: 'div', attr: 'style="padding-top:50px"', childTags: [{ div: 'class="container"' }, { div: 'class="row"' }]
                        // ,pnTitle:{tag:'div',attr:'class="col-md-12 pn-margin-t-b-30" style="display:flow-root"'}
                        , pnList: { tag: 'div', attr: 'class="col-md-3"' }
                        , pnContent: { tag: 'div', attr: 'class="col-md-9"' }
                    }
                }

                var objEvtPanel = {}

                objEvtPanel.pnList = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn


                    var Arr = []
                    Arr.push({
                        strKey: 'Profile',
                        strTitle: 'Thông tin cá nhân',
                        OnClick: function () {
                            $.ModulePage_UserDetail_Profile({
                                idOrClass: IdOrClass_Main + ' #pnContent'
                            })
                        }
                    })
                    //Arr.push({
                    //    strKey: 'ChangePass',
                    //    strTitle: 'Đôi mật khẩu',
                    //    OnClick: function () {
                    //        $.ModulePage_UserDetail_ChangePass({
                    //            strUserGUID: options.strUserGUID,
                    //            idOrClass: IdOrClass_Main + ' #pnContent',
                    //        })
                    //    }
                    //})
                    Arr.push({
                        strKey: 'Request',
                        strTitle: 'Danh sách yêu cầu',
                        OnClick: function () {
                            $.ModulePage_UserDetail_Request({
                                strUserGUID: options.strUserGUID,
                                strCompanyGUID: options.strCompanyPartnerGUID,
                                idOrClass: IdOrClass_Main + ' #pnContent',
                            })
                        }
                    })
                    Arr.push({
                        strKey: 'ListBooking',
                        strTitle: 'Danh sách Booking',
                        OnClick: function () {

                            if ($.pngGetQSVal('BKID')) {

                                $.fn.loadJS(coreSystem.getLinkVer('Lib_Custom/UserDetail/bookingdetail.js'))

                                $.ModulePage_BookingDetailMain({
                                    idOrClass: IdOrClass_Main + ' #pnContent'
                                })
                            } else {
                                $(IdOrClass_Main + ' #pnContent').html(`

                                <div class="row" style="margin-top:-15px">
                                    <div id="pnFormFilter" class="col-md-12"></div>

                                    <div class="col-md-12">
                                        <div id="pnTable" class="bg-white pn-padding-15 pn-round-1em"></div>
                                    </div>
                                </div>
                            `)

                                $.ModulePage_UserDetail_Booking({
                                })
                            }
                        }
                    })
                    Arr.push({
                        strKey: 'Feedback',
                        strTitle: 'Danh sách Phản hồi',
                        OnClick: function () {
                            $.ModulePage_UserDetail_Feedback({
                                strUserGUID: options.strUserGUID,
                                strCompanyGUID: options.strCompanyPartnerGUID,
                                idOrClass: IdOrClass_Main + ' #pnContent',
                            })
                        }
                    })
                    //Arr.push({
                    //    strKey: 'Channel',
                    //    strTitle: 'Kênh giá',
                    //    OnClick: function () {
                    //        $.ModulePage_UserDetail_ChangePass({
                    //            strUserGUID: options.strUserGUID,
                    //            idOrClass: IdOrClass_Main + ' #pnContent',
                    //        })
                    //    }
                    //})
                    //Arr.push({
                    //    strKey: 'BankInfo',
                    //    strTitle: 'Tái khoản ngân hàng',
                    //    OnClick: function () {
                    //        $.ModulePage_UserDetail_BankInfor({
                    //            idOrClass: IdOrClass_Main + ' #pnContent',
                    //        })
                    //    }
                    //})
                    //Arr.push({
                    //    strKey: 'Report',
                    //    strTitle: 'Báo cáo khoản thu chi',
                    //    OnClick: function () {
                    //        $.ModulePage_UserDetail_Report({
                    //            idOrClass: IdOrClass_Main + ' #pnContent',
                    //        })
                    //    }
                    //})
                    //Arr.push({
                    //    strKey: 'Report2',
                    //    strTitle: 'Báo cáo khoản đã duyệt',
                    //    OnClick: function () {
                    //        $.ModulePage_UserDetail_Report2({
                    //            idOrClass: IdOrClass_Main + ' #pnContent',
                    //        })
                    //    }
                    //})
                    Arr.push({
                        strKey: 'Survey',
                        strTitle: 'Đánh giá chất lượng',
                        OnClick: function () {

                            if ($.pngGetQSVal('BKID')) {

                                $.fn.loadJS(coreSystem.getLinkVer('Lib_Custom/UserDetail/surveydetail.js'))

                                $.ModulePage_SurveyDetailMain({
                                    idOrClass: IdOrClass_Main + ' #pnContent'
                                })
                            } else {
                                $(IdOrClass_Main + ' #pnContent').html(`

                                <div class="row" style="margin-top:-15px">
                                    <div id="pnFormFilter" class="col-md-12"></div>

                                    <div class="col-md-12">
                                        <div id="pnTable" class="bg-white pn-padding-15 pn-round-1em"></div>
                                    </div>
                                </div>
                            `)

                                $.ModulePage_UserDetail_Survey({
                                })
                            }

                        }
                    })

                    var strHtml = ''
                    strHtml += '<div class="bg-white">'
                    Arr.forEach(function (value) {
                        strHtml += `<div class="item ${value.strKey}"  style="padding: 10px 20px; cursor:pointer" strKey="${value.strKey}">${value.strTitle}</div>`
                    })
                    strHtml += '</div>'


                    $(IdOrClass_Pn).html(strHtml)

                    $('.item', IdOrClass_Pn).click(function (e) {
                        var strKey = $(this).attr('strKey')

                        var obj = Arr.filter(function (item) { return item.strKey == strKey })[0]

                        $('.item', IdOrClass_Pn).removeClass('bg-primary')
                        $(this).addClass('bg-primary')

                        if (typeof e.originalEvent != 'undefined') {
                            var url = $.pngGetQSVal('strKey', strKey)
                            url = $.pngGetQSVal('BKID', '', url)
                            window.history.pushState("", "", url);
                        } else {
                            window.history.pushState("", "", $.pngGetQSVal('strKey', strKey));
                        }

                        obj.OnClick()
                    })
                    setTimeout(function () {

                        if ($.pngGetQSVal('strKey')) {
                            $('.item.' + $.pngGetQSVal('strKey'), IdOrClass_Pn).click()
                        } else {
                            $('.item.' + Arr[0].strKey, IdOrClass_Pn).click()
                        }
                    }, 100)


                }

                objEvtPanel.pnContent = function (_idOrClassPn) {
                    var IdOrClassPn = _idOrClassPn

                }


                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })

            }



        }


        $.ModulePage_UserDetail_Profile = function (options) {
            var defaults = {
                // roottab: "",
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strPassengerGUID,
                idOrClass: '',
                OnSuccess: function () {
                }
            }

            options = $.extend(defaults, options);

            var IdOrClass_Main = options.idOrClass


            var Obj_CompanyInfo = JSON.parse(png.ArrLS.UserDetail.get())
            //---------Obj_XXX
            //---------Arr_XXX
            //---------Is_XXX
            //---------Int_XXX
            //---------Str_XXX

            var ObjList_Api = {
                UpdMemberDetail: {
                    strApiLink: 'api/traveller/UpdMemberDetail'
                    , objParams: {
                        strPassengerGUID: options.strUserGUID,
                        strFirstName: null,
                        strLastName: null,
                        strMobileNumber: null,
                        // strEmail : null,
                        dtmDateOfBirth: null,
                        strPassengerAddress: null,
                        strPassengerAvatar: null,
                        strRemark: null,
                        intSaluteID: null,
                    }
                }
            }

            var ObjList_ComboValue = {
                Arr_SaluteID: {
                    strTableName: "MC16"
                    , strFeildSelect: "MC16_SaluteID AS intID,MC16_SaluteName AS strName"
                    , strWhere: 'WHERE IsActive = 1'      // Điều kiện
                },
            }



            //---------
            var Obj_Filter = {}
            var Arr_ListTbl = []
            var Obj_FormInputLogo = {}
            var Obj_FormInput = {}
            var Obj_FormInput_2 = {}

            var Obj_FN_Main = {}
            //---------

            // png.postListApiGetValue({
            //     objList_Api: ObjList_Api
            //     //,objList_ComboValue: ObjList_ComboValue
            //     ,objListApi_RtnVal: {
            //         'SSSSSSSSS':{
            //             objParams_Cus:{
            //             }
            //             ,OnSuccess: function(data){
            //                 // return JSON.parse(data)[0]
            //             }
            //         }
            //     }
            //     //,objListComboValue_RtnVal: ObjListComboValue_RtnVal
            //     ,OnSuccessList:function(data){
            //         GetPopUp()
            //     }
            // })

            png.postListApiGetValue({
                objList_ComboValue: ObjList_ComboValue
                , objListComboValue_RtnVal: {
                    'Arr_SaluteID': {
                        objParams_Cus: {},
                        OnSuccess: function (data) {
                            Arr_SaluteID = data
                        }
                    },
                }
                , OnSuccessList: function (data) {
                    GetMainPanel()
                }
            })


            function GetMainPanel() {


                // Obj_FN_Main.OnClosePp(true)----------- chạy câu lệnh trong OnClosePopUp: function (){} khi tắt PopUp
                // Obj_FN_Main.OnClosePp(true,true)-----------Đóng Pop Up + chạy câu lệnh trong OnClosePopUp: function (){}


                var objPanel = {                 // Khai báo các thành phần của panel
                    pnMain: {
                        tag: 'div', attr: 'class=""'
                        , childTags: [{ div: 'class="row"' }]

                        , pnCnt: {
                            tag: 'div', attr: 'class="col-md-12 pn-margin-b-30"'
                                , childTags: [{ div: 'class="bg-white pn-round-1em pn-padding-15"' }, { div: 'class="row"' }]
                            , pnLogo: { tag: 'div', attr: 'class="col-md-3"' }
                            , pnForm: { tag: 'div', attr: 'class="col-md-9"' }
                            , pnForm_2: { tag: 'div', attr: 'class="col-md-12"' }
                            , pnBtn: { tag: 'div', attr: 'class="col-md-12"' }
                        }
                    }
                }

                var objEvtPanel = {}
                objEvtPanel.pnLogo = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''
                    strHtml += '<div id="pnImgLogo"></div>'
                    // strHtml+= '<div id="pnBtnSaveImg"><button class="btn btn-primary"  id="btnBtnSaveImg"><i class="fa fa-floppy-o"></i>'+pngElm.getLangKey({langkey:'sys_Btn_Save'})+' Images</button></div>'
                    $(IdOrClass_Pn).html(strHtml)


                    Obj_FormInputLogo = {
                        strPassengerAvatar: {
                            title: pngElm.getLangKey({ langkey: 'sys_Txt_Avatar' }), attr: "class='col-md-12'", isRequire: false, IsRtn: true
                            , inputImage: { attr: 'style="width: 113px;height: 113px;;cursor:pointer"', urlImgDft: coreSystem.getLib_CommonURL('assets/images/png_NoAvatar.png') }
                        }
                    }

                    pngPn.getForm({
                        action: 1,
                        objInput: Obj_FormInputLogo,
                        idOrClass: IdOrClass_Pn + ' #pnImgLogo',
                        objDetail: Obj_CompanyInfo,
                        // OnChkSuccess: function(){}
                    })
                }


                objEvtPanel.pnForm = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''
                    strHtml += '<div id="pnFormInput"></div>'
                    $(IdOrClass_Pn).html(strHtml)


                    Obj_FormInput = {
                        // strUserName:{title:'User Name',isRequire:true,attr:"class='col-md-4'",IsRtn:true
                        //     ,input:{type:'text',classEx:'form-control',attr:'disabled'}
                        // }

                        PnUserName: {
                            title: 'Tên đăng nhập', attr: "class='col-md-12'"
                            , input: { IsNoInput: true }
                        },
                        intSaluteID: {
                            title: pngElm.getLangKey({ langkey: 'sys_Txt_Salute' }), attr: "class='col-md-4'", isRequire: false
                            , input: { type: 'select', classEx: 'form-control', attr: '' }
                            , dropDown: { IsSelect2: false, arrList: $.pngGetArrComboValue(Arr_SaluteID, 'intID', 'strName') }
                        },
                        strFirstName: {
                            title: pngElm.getLangKey({ langkey: 'sys_Txt_FirstName' }), isRequire: true, attr: "class='col-md-4'", IsRtn: true
                            , input: { type: 'text', classEx: 'form-control', attr: '' }
                        }
                        , strLastName: {
                            title: pngElm.getLangKey({ langkey: 'sys_Txt_LastName' }), isRequire: true, attr: "class='col-md-4'", IsRtn: true
                            , input: { type: 'text', classEx: 'form-control', attr: '' }
                        }
                        , strMobileNumber: {
                            title: pngElm.getLangKey({ langkey: 'sys_Txt_Mobile' }), attr: "class='col-md-4'", isRequire: true
                            , validate: { format: /^([+]\d{2})?\d{9,11}$/ }
                            , input: { type: 'text', classEx: 'form-control', attr: '' }
                        }
                        , dtmDateOfBirth: {
                            title: 'Ngày sinh', attr: "class='col-md-8'", isRequire: false
                            , input: { type: 'text', classEx: 'form-control', attr: '' }
                            , datePicker: { todayHighlight: true, format: 'dd/mm/yyyy', weekStart: 1, startDate: null, endDate: null }
                        }
                        , strPassengerAddress: {
                            title: pngElm.getLangKey({ langkey: 'sys_Txt_Addr' }), isRequire: false, attr: "class='col-md-12'", IsRtn: true
                            , input: { type: 'text', classEx: 'form-control', attr: '' }
                        }
                        //,strRemark:{title: pngElm.getLangKey({langkey:'sys_Txt_Remark'}),isRequire:false,attr:"class='col-md-12'",IsRtn:true
                        //    ,input:{type:'textarea',classEx:'form-control',attr:'rows="5" ckeditor="true"'}
                        //}
                    }
                    pngPn.getForm({
                        action: 1,
                        objInput: Obj_FormInput,
                        idOrClass: IdOrClass_Pn + ' #pnFormInput',
                        objDetail: Obj_CompanyInfo,
                        OnChkSuccess: function () { }
                    })

                    $('.pnElm-PnUserName', IdOrClass_Pn).html(Obj_CompanyInfo.strUserName + ' (<a action="ChangeUN">Thay đổi</a> <i style="font-size: 12px;">(chỉ có thể thay đổi một lần)</i> - <a action="ChangePass">Đổi mật khẩu</a>)')

                    $('a', IdOrClass_Pn).click(function () {
                        var action = $(this).attr('action')

                        if (action == 'ChangeUN') {
                            GetPopUp_AddOrUpd({
                                objDetail: Obj_CompanyInfo,
                                OnSuccess: function () {

                                }
                            })
                        }

                        if (action == 'ChangePass') {
                            $.ModuleSystemHeaderAdmin_chgPW({
                                strUserGUID: options.strUserGUID
                            })
                        }
                    })
                }

                objEvtPanel.pnForm_2 = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''
                    $(IdOrClass_Pn).html(strHtml)


                    Obj_FormInput_2 = {
                        // strUserName:{title:'User Name',isRequire:true,attr:"class='col-md-4'",IsRtn:true
                        //     ,input:{type:'text',classEx:'form-control',attr:'disabled'}
                        // }
                        strRemark: {
                            title: 'Giới thiệu bản thân', isRequire: false, attr: "class='col-md-12'", IsRtn: true
                            , input: { type: 'textarea', classEx: 'form-control', attr: 'rows="5" ' }
                        }
                    }
                    pngPn.getForm({
                        action: 1,
                        objInput: Obj_FormInput_2,
                        idOrClass: IdOrClass_Pn,
                        objDetail: Obj_CompanyInfo,
                        OnChkSuccess: function () { }
                    })

                }

                objEvtPanel.pnBtn = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''
                    strHtml += '<div id="pnBtnSave"><button class="btn btn-texticon bg-primary txt-white"  id="btnBtnSaveProfile"><i class="fa fa-floppy-o"></i><span langkey="sys_Btn_Save"></span></button></div>'
                    $(IdOrClass_Pn).html(strHtml)


                    $('#btnBtnSaveProfile').click(function () {

                        var objReturn_1 = pngPn.getForm({
                            action: 2,
                            objInput: Obj_FormInput_2,
                            idOrClass: IdOrClass_Main
                        })

                        var objReturn = pngPn.getForm({
                            action: 2,
                            objInput: Obj_FormInput,
                            idOrClass: IdOrClass_Main
                        })
                        var objReturn2 = pngPn.getForm({
                            action: 2,
                            objInput: Obj_FormInputLogo,
                            idOrClass: IdOrClass_Main
                        })

                        objReturn = $.pngExtendObj(objReturn, objReturn2)
                        objReturn = $.pngExtendObj(objReturn, objReturn_1)

                        objReturn = $.pngExtendObj(Obj_CompanyInfo, objReturn)


                        // console.log(ObjReturnLogo);
                        if (objReturn) {

                            png.postListApiGetValue({           // Post list các Api phía trên và lấy về dữ liệu
                                objList_Api: ObjList_Api            // Tên các Object api đã khai báo phía trên
                                , objListApi_RtnVal: {           // Giá trị nhận về từ API
                                    'UpdMemberDetail': {               // Tên api tương ứng với giá trị trả về
                                        objParams_Cus: objReturn
                                        , OnSuccess: function (data) {
                                            png.ArrLS.UserDetail.set(JSON.stringify($.pngReplaceObj(Obj_CompanyInfo, objReturn)))
                                            //coreLoadPage.init()
                                            $.Confirm({ strContent: '<span langkey="sys_Cfm_UpdSuccess"></span>' });
                                        }
                                    }
                                }
                            })


                        }
                    })
                }


                // ===================================

                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })



            }

            function GetPopUp_AddOrUpd(_Opt) {
                var Dft = {
                    objDetail: {},
                    IsDuplicate: null,
                    OnSuccess: function () {

                    }
                }
                _Opt = $.extend(Dft, _Opt);

                console.log('Function', _Opt)

                var IdOrClass_Main = ''

                var Is_Create = false
                var Is_Edit = false
                var Is_Duplicate = false

                var Obj_Detail = _Opt.objDetail
                // var Obj_Detail = options.objDetail

                //---------Obj_XXX      // Khai báo các biến dùng chung cho cả hàm
                //---------Arr_XXX
                //---------Is_XXX
                //---------Int_XXX
                //---------Str_XXX


                // if(Object.keys(Obj_Detail).length){
                //     Is_Edit = true
                // }else{
                //     Is_Create = true
                // }
                // if(_Opt.IsDuplicate){
                //     Is_Edit = false
                //     Is_Duplicate = true
                // }

                //------------------- Khái báo biển chính của giao diện
                var Obj_Filter_Dtl = {}
                var Obj_Filter = {}
                var Arr_ListTbl = []

                var Obj_FormInput = {}

                var Obj_FN_Main = {}
                //-------------------

                GetPopUp()
                function GetPopUp() {
                    var strTitle = 'Change User Name'
                    // if(Is_Create){
                    //     strTitle = pngElm.getLangKey({langkey:'sys_Btn_Create'})
                    // }

                    // if(Is_Edit){
                    //     strTitle = pngElm.getLangKey({langkey:'sys_Btn_Edit'})
                    // }
                    // if(Is_Duplicate){
                    //     strTitle = pngElm.getLangKey({langkey:'sys_Btn_Duplicate'})
                    // }
                    pngPn.getPopUp({
                        strTitle: strTitle
                        , intTypeSize: 1//------------1 small ---2 medium ---3 large
                        , OnPanel: GetMainPanel
                        , OnClosePopUp: function () {
                            //------Chọn sự kiện khi Đóng PopUP
                            // options.OnSuccess.call()
                            // _Opt.OnSuccess.call()
                        }
                    })
                }

                function GetMainPanel(_IdOrClassPp, _OnClosePp) {

                    IdOrClass_Main = _IdOrClassPp
                    Obj_FN_Main.OnClosePp = _OnClosePp

                    //Obj_FN_Main.OnClosePp(true)----------- chạy câu lệnh trong OnClosePopUp: function (){} khi tắt PopUp
                    //Obj_FN_Main.OnClosePp(true,true)-----------Đóng Pop Up + chạy câu lệnh trong OnClosePopUp: function (){}


                    var objPanel = {
                        pnMain: {
                            tag: 'div', attr: 'class=""'
                            , childTags: [{ div: 'class="row"' }]
                            // ,pnListBtn:{tag:'div',attr:'class="col-md-12"'}
                            // ,pnFormFilter:{tag:'div',attr:'class="col-md-12"'}
                            // ,pnTable:{tag:'div',attr:'class="col-md-12"'}

                            , pnForm: { tag: 'div', attr: 'class="col-md-12"' }
                            , pnBtn: { tag: 'div', attr: 'class="col-md-12"' }
                        }
                    }
                    var objEvtPanel = {}

                    objEvtPanel.pnForm = function (_idOrClassPn) {
                        var IdOrClass_Pn = _idOrClassPn
                        Obj_FormInput = {
                            ///-----------INSERT INPUT

                            strUserName: {
                                title: 'Tên đăng nhập', isRequire: true, attr: "class='col-md-12'", IsRtn: true
                                , validate: { format: /^[a-zA-Z0-9]+$/, confirmFormat: "This field is incorrect" }
                                , input: { type: 'text', classEx: 'form-control', attr: '' }
                            },
                        }

                        pngPn.getForm({
                            action: 1,
                            objInput: Obj_FormInput,
                            idOrClass: IdOrClass_Pn,
                            objDetail: Obj_Detail,
                        })

                    }
                    objEvtPanel.pnBtn = function (_idOrClassPn) {
                        var IdOrClass_Pn = _idOrClassPn

                        var strHtml = ''
                        strHtml += '<button id="btnSave" class="btn btn-texticon bg-primary txt-white"><i class="fa fa-floppy-o"></i><span>' + pngElm.getLangKey({ langkey: 'sys_Btn_Save' }) + '</span></button>'
                        $(IdOrClass_Pn).html(strHtml)

                        $(IdOrClass_Pn + ' #btnSave').click(function () {
                            pngPn.getForm({
                                action: 2,
                                objInput: Obj_FormInput,
                                idOrClass: IdOrClass_Main + ' #pnForm',
                                OnChkSuccess: function (objRtn) {
                                    if (objRtn) {

                                        objRtn = $.pngExtendObj(Obj_Detail, objRtn)

                                        if (Is_Create || Is_Duplicate) {
                                            png.postListApiGetValue({
                                                objList_Api: ObjList_Api
                                                , objListApi_RtnVal: {
                                                    'AddXXXX': {
                                                        objParams_Cus: objRtn
                                                        , OnSuccess: function (data) {
                                                            Obj_FN_Main.OnClosePp(false, true)
                                                            _Opt.OnSuccess.call()
                                                            // options.OnSuccess.call()
                                                        }
                                                    }
                                                }
                                            })
                                        }
                                        if (Is_Edit) {
                                            png.postListApiGetValue({
                                                objList_Api: ObjList_Api
                                                , objListApi_RtnVal: {
                                                    'UpdXXXX': {
                                                        objParams_Cus: objRtn
                                                        , OnSuccess: function (data) {
                                                            Obj_FN_Main.OnClosePp(false, true)
                                                            _Opt.OnSuccess.call()
                                                            // options.OnSuccess.call()
                                                        }
                                                    }
                                                }
                                            })
                                        }

                                    }


                                }
                            })
                        })
                    }
                    // ===================================

                    pngPn.getPanelHtml({            // Get ra panel dạng html
                        objPanel: objPanel
                        , objEvtPanel: objEvtPanel
                        , idOrClass: IdOrClass_Main  // Id or class chính
                        , OnChangeIdPn: function (_Fn) {
                            Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                        }
                    })



                }
            }

        }
        $.ModuleSystemHeaderAdmin_chgPW = function (options) {
            var defaults = {
                strUserGUID: '',
                OnSuccess: function () { }
            }
            options = $.extend(defaults, options);

            var IdOrClass_Main = ''


            //---------Obj_XXX
            //---------Arr_XXX
            //---------Is_XXX
            //---------Int_XXX
            //---------Str_XXX

            var ObjList_Api = {
                CheckMemberPassword: {
                    strApiLink: 'api/traveller/CheckMemberPassword'
                    , objParams: {
                        strTLUserGUID: options.strUserGUID
                        , strPassword: null
                    }
                },
                UpdMemberPassword: {
                    strApiLink: 'api/traveller/UpdMemberPassword'
                    , objParams: {
                        strTLUserGUID: options.strUserGUID
                        , strNewPassword: null
                        , strOldPassword: null
                    }
                },
            }

            var ObjList_ComboValue = {
                Arr_ValCode: {
                    strCombocode: ''
                }
                , Arr_SQL: {
                    strTableName: ''
                    , strFeildSelect: ' AS intID, AS strName'
                    , strWhere: 'WHERE IsActive = 1'
                }
            }



            //---------
            var Obj_Filter = {}
            var Arr_ListTbl = []
            var Obj_FormInput = {}

            var Obj_FN_Main = {}
            //---------

            // png.postListApiGetValue({
            //     objList_Api: ObjList_Api
            //     //,objList_ComboValue: ObjList_ComboValue
            //     ,objListApi_RtnVal: {
            //         'SSSSSSSSS':{
            //             objParams_Cus:{
            //             }
            //             ,OnSuccess: function(data){
            //                 // return JSON.parse(data)[0]
            //             }
            //         }
            //     }
            //     //,objListComboValue_RtnVal: ObjListComboValue_RtnVal
            //     ,OnSuccessList:function(data){
            //         GetPopUp()
            //     }
            // })

            GetPopUp()
            function GetPopUp() {
                pngPn.getPopUp({
                    strTitle: '<span langkey="sys_Txt_ppChgPW_ChangePassword"></span>'
                    , intTypeSize: 1//------------1 small ---2 medium ---3 large
                    , OnPanel: GetMainPanel
                    , OnClosePopUp: function () {
                        //------Chọn sự kiện khi Đóng PopUP
                        options.OnSuccess.call()
                    }
                })
            }

            function GetMainPanel(_IdOrClassPp, _OnClosePp) {

                IdOrClass_Main = _IdOrClassPp
                Obj_FN_Main.OnClosePp = _OnClosePp

                // Obj_FN_Main.OnClosePp(true)----------- chạy câu lệnh trong OnClosePopUp: function (){} khi tắt PopUp
                // Obj_FN_Main.OnClosePp(true,true)-----------Đóng Pop Up + chạy câu lệnh trong OnClosePopUp: function (){}


                var objPanel = {                 // Khai báo các thành phần của panel
                    pnMain: {
                        tag: 'div', attr: 'class=""'
                        , childTags: [{ div: 'class="row"' }]
                        , pnForm: { tag: 'div', attr: 'class="col-md-12"' }
                        , pnBtn: { tag: 'div', attr: 'class="col-md-12"' }
                    }
                }

                var objEvtPanel = {}
                objEvtPanel.pnForm = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn
                    Obj_FormInput = {
                        strCurPassword: {
                            title: '<span langkey="sys_Txt_ppChgPW_CurrentPassword"></span>', attr: "class='col-md-12'", isRequire: true
                            , input: { type: 'password', classEx: 'form-control', attr: '' }
                            , arrValidateEx: [{
                                strConfirm: '<span langkey="sys_Txt_ppChgPW_cfm-curr-pw-incorrect"></span>', IsCheckSSAjax: function (strVal, fct) {

                                    png.postListApiGetValue({
                                        objList_Api: ObjList_Api
                                        , objListApi_RtnVal: {
                                            'CheckMemberPassword': {
                                                objParams_Cus: {
                                                    strPassword: strVal
                                                }
                                                , OnSuccess: function (data) {
                                                    fct((JSON.parse(data)[0][0].strResult == 1))
                                                }
                                            }
                                        }
                                    })

                                }
                            }]
                        },
                        strNewPassword: {
                            title: '<span langkey="sys_Txt_ppChgPW_NewPassword"></span>', attr: "class='col-md-12' id='newPassWord'", isRequire: true
                            , input: { type: 'password', classEx: 'form-control', attr: '' }
                            , validate: { format: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@@#$%^&*?])[A-Za-z\d!@@#$%^&*?]{8,30}$/, confirmFormat: '' }
                            , arrValidateEx: [{
                                strConfirm: '<span langkey="sys_Txt_ppChgPW_cfm-not-same-curr-pw"></span>', IsCheckSS: function (strVal) {
                                    return (strVal != $(IdOrClass_Pn + " .strCurPassword").val())
                                }
                            }]
                        },
                        strCfmNewPassword: {
                            title: '<span langkey="sys_Txt_ppChgPW_ConfirmNewPassword"></span>', attr: "class='col-md-12'", isRequire: true
                            , input: { type: 'password', classEx: 'form-control', attr: '' }
                            , arrValidateEx: [{
                                strConfirm: '<span langkey="sys_Txt_ppChgPW_cfm-same-npw"></span>', IsCheckSS: function (strVal) {
                                    return (strVal == $(IdOrClass_Pn + " .strNewPassword").val())
                                }
                            }]
                        }
                    }

                    pngPn.getForm({
                        action: 1,
                        //objDetail:{},
                        objInput: Obj_FormInput,
                        idOrClass: IdOrClass_Pn
                    })
                    $("#newPassWord").append("<span langkey='sys_Txt_Confirm_required-PW'></span>");

                }

                objEvtPanel.pnBtn = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn


                    var strHtml = ''
                    strHtml += '<div>'
                    strHtml += '  <div style="margin-top: -10px;margin-bottom: 10px">  <input class=" " type="checkbox" id="hideShowPassword"></input> <i><span langkey="sys_Traveller_hideShowPw" style="margin-left: 10px"></span></i></div>'
                    strHtml += '</div>'
                    strHtml += '<div class="pn-margin-t-15">'
                    strHtml += '    <button id="btnChangePW" class="btn btn-texticon bg-primary txt-white"><span langkey="sys_Txt_ppChgPW_btn-ChangePassword"></span></button>'
                    strHtml += '</div>'
                    $(IdOrClass_Pn).html(strHtml)


                    $(IdOrClass_Pn + " #hideShowPassword").click(function () {
                        if ($(this).is(":checked") == true) {
                            $(IdOrClass_Main + " #pnForm").find("input").attr("type", "text");
                        } else {
                            $(IdOrClass_Main + " #pnForm").find("input").attr("type", "password");
                        }
                    });

                    $('#btnChangePW').click(function () {
                        pngPn.getForm({
                            action: 2,
                            //objDetail:{},
                            objInput: Obj_FormInput,
                            idOrClass: IdOrClass_Main + " #pnForm",
                            OnChkSuccess: chkAjax
                        })
                        // chkAjax()
                        function chkAjax(objRtn) {
                            if (objRtn) {
                                png.postListApiGetValue({
                                    objList_Api: ObjList_Api
                                    , objListApi_RtnVal: {
                                        'UpdMemberPassword': {
                                            objParams_Cus: {
                                                strNewPassword: objRtn.strNewPassword
                                                , strOldPassword: objRtn.strCurPassword
                                            }
                                            , OnSuccess: function (data) {
                                                if (JSON.parse(data)[0][0].strResult == 1) {
                                                    Obj_FN_Main.OnClosePp(true, true)
                                                    $.Confirm({ strContent: '<span langkey="sys_Cfm_ChgPwSuccess"></span>' })
                                                } else {
                                                    $.Confirm({ strContent: 'Changed Password Error!' })
                                                }
                                            }
                                        }
                                    }
                                })

                            }

                        }

                    })
                }

                // ===================================

                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })



            }

        }



        $.ModulePage_UserDetail_ChangePass = function (options) {
            var defaults = {
                strUserGUID: '',
                idOrClass: '',
                OnSuccess: function () { }
            }
            options = $.extend(defaults, options);


            var IdOrClass_Main = options.idOrClass


            //---------Obj_XXX
            //---------Arr_XXX
            //---------Is_XXX
            //---------Int_XXX
            //---------Str_XXX

            var ObjList_Api = {

                CheckMemberPassword: {
                    strApiLink: 'api/traveller/CheckMemberPassword'
                    , objParams: {
                        strTLUserGUID: options.strUserGUID
                        , strPassword: null
                    }
                },
                UpdMemberPassword: {
                    strApiLink: 'api/traveller/UpdMemberPassword'
                    , objParams: {
                        strTLUserGUID: options.strUserGUID
                        , strNewPassword: null
                        , strOldPassword: null
                    }
                },
            }

            var ObjList_ComboValue = {
                Arr_ValCode: {
                    strCombocode: ''
                }
                , Arr_SQL: {
                    strTableName: ''
                    , strFeildSelect: ' AS intID, AS strName'
                    , strWhere: 'WHERE IsActive = 1'
                }
            }



            //---------
            var Obj_Filter = {}
            var Arr_ListTbl = []
            var Obj_FormInput = {}

            var Obj_FN_Main = {}
            //---------

            // png.postListApiGetValue({
            //     objList_Api: ObjList_Api
            //     //,objList_ComboValue: ObjList_ComboValue
            //     ,objListApi_RtnVal: {
            //         'SSSSSSSSS':{
            //             objParams_Cus:{
            //             }
            //             ,OnSuccess: function(data){
            //                 // return JSON.parse(data)[0]
            //             }
            //         }
            //     }
            //     //,objListComboValue_RtnVal: ObjListComboValue_RtnVal
            //     ,OnSuccessList:function(data){
            //         GetPopUp()
            //     }
            // })

            // GetPopUp()
            // function GetPopUp(){
            //     pngPn.getPopUp({
            //         strTitle: '<span langkey="sys_Txt_ppChgPW_ChangePassword"></span>'
            //         , intTypeSize:1//------------1 small ---2 medium ---3 large
            //         , OnPanel: GetMainPanel
            //         , OnClosePopUp: function () {
            //             //------Chọn sự kiện khi Đóng PopUP
            //             options.OnSuccess.call()
            //         }
            //     })
            // }
            GetMainPanel()
            function GetMainPanel() {

                // Obj_FN_Main.OnClosePp(true)----------- chạy câu lệnh trong OnClosePopUp: function (){} khi tắt PopUp
                // Obj_FN_Main.OnClosePp(true,true)-----------Đóng Pop Up + chạy câu lệnh trong OnClosePopUp: function (){}


                var objPanel = {                 // Khai báo các thành phần của panel
                    pnMain: {
                        tag: 'div', attr: 'class=""'
                        , childTags: [{ div: 'class="bg-white pn-round-1em pn-padding-15"' }, { div: 'class="row"' }]

                        , pnForm: { tag: 'div', attr: 'class="col-md-12"' }
                        , pnBtn: { tag: 'div', attr: 'class="col-md-12"' }
                    }
                }

                var objEvtPanel = {}
                objEvtPanel.pnForm = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn
                    Obj_FormInput = {
                        strCurPassword: {
                            title: '<span langkey="sys_Txt_ppChgPW_CurrentPassword"></span>', attr: "class='col-md-12'", isRequire: true
                            , input: { type: 'password', classEx: 'form-control', attr: '' }
                            , arrValidateEx: [{
                                strConfirm: '<span langkey="sys_Txt_ppChgPW_cfm-curr-pw-incorrect"></span>', IsCheckSSAjax: function (strVal, fct) {

                                    png.postListApiGetValue({
                                        objList_Api: ObjList_Api
                                        , objListApi_RtnVal: {
                                            'CheckMemberPassword': {
                                                objParams_Cus: {
                                                    strPassword: strVal
                                                }
                                                , OnSuccess: function (data) {
                                                    fct((JSON.parse(data)[0][0].strResult == 1))
                                                }
                                            }
                                        }
                                    })

                                }
                            }]
                        },
                        strNewPassword: {
                            title: '<span langkey="sys_Txt_ppChgPW_NewPassword"></span>', attr: "class='col-md-12' id='newPassWord'", isRequire: true
                            , input: { type: 'password', classEx: 'form-control', attr: '' }
                            , validate: { format: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@@#$%^&*?])[A-Za-z\d!@@#$%^&*?]{8,30}$/, confirmFormat: '' }
                            , arrValidateEx: [{
                                strConfirm: '<span langkey="sys_Txt_ppChgPW_cfm-not-same-curr-pw"></span>', IsCheckSS: function (strVal) {
                                    return (strVal != $(IdOrClass_Pn + " .strCurPassword").val())
                                }
                            }]
                        },
                        strCfmNewPassword: {
                            title: '<span langkey="sys_Txt_ppChgPW_ConfirmNewPassword"></span>', attr: "class='col-md-12'", isRequire: true
                            , input: { type: 'password', classEx: 'form-control', attr: '' }
                            , arrValidateEx: [{
                                strConfirm: '<span langkey="sys_Txt_ppChgPW_cfm-same-npw"></span>', IsCheckSS: function (strVal) {
                                    return (strVal == $(IdOrClass_Pn + " .strNewPassword").val())
                                }
                            }]
                        }
                    }

                    pngPn.getForm({
                        action: 1,
                        //objDetail:{},
                        objInput: Obj_FormInput,
                        idOrClass: IdOrClass_Pn
                    })
                    $("#newPassWord").append("<span langkey='sys_Txt_Confirm_required-PW'></span>");

                }

                objEvtPanel.pnBtn = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn


                    var strHtml = ''
                    strHtml += '<div>'
                    strHtml += '  <div style="margin-top: -10px;margin-bottom: 10px">  <input class=" " type="checkbox" id="hideShowPassword"></input> <i><span langkey="sys_Traveller_hideShowPw" style="margin-left: 10px"></span></i></div>'
                    strHtml += '</div>'
                    strHtml += '<div class="pn-margin-t-15">'
                    strHtml += '    <button id="btnChangePW" class="btn btn-texticon bg-primary txt-white"><span langkey="sys_Txt_ppChgPW_btn-ChangePassword"></span></button>'
                    strHtml += '</div>'
                    $(IdOrClass_Pn).html(strHtml)


                    $(IdOrClass_Pn + " #hideShowPassword").click(function () {
                        if ($(this).is(":checked") == true) {
                            $(IdOrClass_Main + " #pnForm").find("input").attr("type", "text");
                        } else {
                            $(IdOrClass_Main + " #pnForm").find("input").attr("type", "password");
                        }
                    });

                    $('#btnChangePW').click(function () {
                        pngPn.getForm({
                            action: 2,
                            //objDetail:{},
                            objInput: Obj_FormInput,
                            idOrClass: IdOrClass_Main + " #pnForm",
                            OnChkSuccess: chkAjax
                        })
                        // chkAjax()
                        function chkAjax(objRtn) {
                            if (objRtn) {
                                png.postListApiGetValue({
                                    objList_Api: ObjList_Api
                                    , objListApi_RtnVal: {
                                        'UpdMemberPassword': {
                                            objParams_Cus: {
                                                strNewPassword: objRtn.strNewPassword
                                                , strOldPassword: objRtn.strCurPassword
                                            }
                                            , OnSuccess: function (data) {
                                                if (JSON.parse(data)[0][0].strResult == 1) {
                                                    // Obj_FN_Main.OnClosePp(true,true)
                                                    $.Confirm({ strContent: '<span langkey="sys_Cfm_ChgPwSuccess"></span>' })
                                                } else {
                                                    $.Confirm({ strContent: 'Changed Password Error!' })
                                                }
                                            }
                                        }
                                    }
                                })

                            }

                        }

                    })
                }

                // ===================================

                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })



            }


        }


        $.ModulePage_UserDetail_Request = function (options) {
            var defaults = {
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strUserGUID
                , strCompanyGUID: JSON.parse(png.ArrLS.UserDetail.get()).strCompanyGUID
                , idOrClass: null
                , OnSuccess: function () {

                }
            }
            options = $.extend(defaults, options);


            var IdOrClass_Main = options.idOrClass // Khai báo Id hoặc Class chính của form  $.pngGetQSVal('menuid'): lay ra menu ID cua

            //---------Obj_XXX      // Khai báo các biến dùng chung cho cả hàm
            //---------Arr_XXX
            //---------Is_XXX
            //---------Int_XXX
            //---------Str_XXX

            var ObjList_Api = {
                GetListRequestService: {         // Tên api
                    strApiLink: 'api/request/GetListRequestService' // api/eeeeeeee: route Prefix
                    , objParams: {                // Tham số cần cung cấp cho api
                        strUserGUID: options.strUserGUID
                        , strRequestServiceGUID: null
                        , strCompanyGUID: null
                        , strMemberGUID: null
                        , strCompanyPartnerGUID: null
                        , strPassengerGUID: options.strUserGUID
                        , intRequestStatusID: null
                        , dtmFilterDateFrom: null
                        , dtmFilterDateTo: null
                        , strOrder: null
                        , intCurPage: 1
                        , intPageSize: 10
                        , tblsReturn: '[0]'
                    }
                },
            }

            var ObjList_ComboValue = {          // Khai báo combocode (dropdownlist) muốn sử dụng
                Arr_ValCode: {
                    strCombocode: ''             // Mã code
                }
                , Arr_RequestStatus: {
                    strTableName: 'BR34'             // Bảng sử dụng để get dữ liệu
                    , strFeildSelect: 'BR34_RequestStatusID AS intID,BR34_RequestStatusName AS strName' // Trường cần lựa chọn
                    , strWhere: 'WHERE IsActive = 1'      // Điều kiện
                }
            }

            var Arr_RequestStatus = []

            var Obj_Filter_Dtl = {}
            var Obj_Filter = {}        // Biến lọc


            var Obj_FN_Main = {}

            png.postListApiGetValue({           // Post list các Api phía trên và lấy về dữ liệu
                objList_ComboValue: ObjList_ComboValue // Tên các Object api dropdownlist đã khai báo phía trên
                , objListComboValue_RtnVal: {    // Giá trị nhận về từ dropdownlist
                    'Arr_RequestStatus': {
                        objParams_Cus: {

                        },
                        OnSuccess: function (data) {
                            Arr_RequestStatus = data   // Dữ liệu trả về từ dropdownlist trên
                            Arr_RequestStatus.unshift({ intID: '', strName: pngElm.getLangKey({ langkey: 'sys_Txt_DdlSelectVal' }) })
                        }
                    }
                }
                , OnSuccessList: function (data) {      // Hàm thực hiện khi thành công tất cả các api trên
                    GetMainPanel()
                }
            })


            // GetMainPanel()
            function GetMainPanel() {

                var objPanel = {
                    pnMain: {
                        tag: 'div', attr: '', childTags: [{ div: 'class="row"' }]
                        // ,pnTit:{tag:'div',attr:'class="col-md-12 pn-margin-t-b-30" style="display: flow-root;"'}
                        , pnCnt: {
                            tag: 'div', attr: 'class="col-md-12 pn-margin-b-30"'
                            , childTags: [{ div: 'class="bg-white pn-round-1em pn-padding-15"' }, { div: 'class="row pn-margin-t-15"' }]

                            , pnFormFilter: { tag: 'div', attr: 'class="col-md-12"' }
                            , pnTable: { tag: 'div', attr: 'class="col-md-12"' }
                        }

                    }
                }
                var objEvtPanel = {}
                objEvtPanel.pnTit = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''
                    strHtml += '<h1 style="display:inline-block;float: left;"><b>Danh sách Yêu cầu</b></h1>'
                    strHtml += '<button class="btn btn-texticon btn-default" id="btnVideoHelper" style="float: left;margin-left:15px"><i class="fa fa-question-circle"></i><span><i class="fa fa-film"></i></span></button>'

                    $(IdOrClass_Pn).html(strHtml)

                    coreLoadPage.viewVideoHelper({
                        strUserGUID: options.strUserGUID
                        , strTravelHelperSubModuleCode: 'DB8A6'
                        , intLangID: $.pngGetLangID()
                        , idOrClassBtn: '#btnVideoHelper'
                    })
                }
                objEvtPanel.pnFormFilter = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''
                    strHtml += '<a id="btnViewFilter" class="btn btn-link" data-toggle="collapse" href="#pnFilterForm">'
                    strHtml += '    <i class="fa fa-chevron-down"></i>'
                    strHtml += '    <span langkey="sys_Btn_ViewSrc"></span>'
                    strHtml += '</a>'
                    strHtml += '<div id="pnFilterForm" class="panel-collapse collapse panel panel-default panel-itl">'
                    strHtml += '    <div class="pn-padding-l-r-15">'
                    strHtml += '     <div class="content"></div>'
                    strHtml += '      <div class="row">'
                    strHtml += '        <div class="col-md-12">'
                    strHtml += '            <button class="btn btn-texticon bg-primary" id="btnFilter"><i class="fa fa-filter"></i><span langkey="sys_Btn_Filter"></span></button>'
                    strHtml += '            <button class="btn btn-default btn-texticon" id="btnReset"><i class="fa fa-refresh"></i><span langkey="sys_Btn_Reset"></span></button>'
                    strHtml += '        </div>'
                    strHtml += '      </div>'
                    strHtml += '    </div>'
                    strHtml += '</div>'
                    $(IdOrClass_Pn).html(strHtml)


                    var ObjFormInput = {
                        dtmFilterDateFrom_dtmFilterDateTo: {
                            title: 'Khoảng ngày gửi yêu cầu', attr: "class='col-md-3'", isRequire: false
                            , datePickerRange: { todayHighlight: true, format: 'dd/mm/yyyy', weekStart: 1, startDate: null, endDate: null, diffmin: 0, diffmax: null }
                        },
                        intRequestStatusID: {
                            title: 'Trạng thái', attr: "class='col-md-3'", isRequire: false, IsRtn: true
                            , input: { type: 'select', classEx: 'form-control', attr: '' }
                            , dropDown: { arrList: $.pngGetArrComboValue(Arr_RequestStatus, 'intID', 'strName') }//-------------------$.pngGetArrComboValue(Arr_RequestStatus,'intID','strName')
                        },

                    }
                    //----------------------------
                    pnFormFlt()
                    function pnFormFlt() {
                        pngPn.getForm({
                            action: 1,
                            objInput: ObjFormInput,
                            idOrClass: IdOrClass_Pn + ' #pnFilterForm .content',
                            objDetail: Obj_Filter_Dtl
                        })
                    }

                    $(IdOrClass_Pn).DefaultButton(IdOrClass_Pn + ' #btnFilter')

                    $(IdOrClass_Pn + ' #btnFilter').click(function () {
                        pngPn.getForm({
                            action: 2,
                            objInput: ObjFormInput,
                            idOrClass: IdOrClass_Pn + ' #pnFilterForm .content',
                            OnChkSuccess: chkSuccess
                        })
                        function chkSuccess(objRtn) {
                            Obj_Filter = objRtn
                            Obj_FN_Main.pnMain('pnTable')
                        }
                    })
                    $(IdOrClass_Pn + ' #btnReset').click(function () {
                        pnFormFlt()
                    })
                }
                objEvtPanel.pnTable = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    pngPn.getTable2({
                        objApi: ObjList_Api.GetListRequestService
                        , objParams_Cus: Obj_Filter
                        , editRlt: function (value, key) {
                            value['strRequestBookingContentView'] = "";
                            value['strServiceName_View'] = "";
                            value['strServiceName_View'] = value['strServiceName'];
                            value['strServiceName_View'] += `
                                        <div>- ${$.pngFormatDateTime(value['dtmDateFrom'])} - ${$.pngFormatDateTime(value['dtmDateTo'])}</div>
                                        <div>- <b><span langkey="pg_ListReq_Txt_NumberAdult"></span>:</b> ${value.intAdult}</div>
                                        <div>- <b><span langkey="pg_ListReq_Txt_NumberChildren"></span>:</b> ${value.intChildren}</div>

                                    `

                            // value['strHtmlAction']= '<button class="btnDelete btn btn-danger" data="' + key + '"><i class="fa fa-trash"></i></button>'
                            value['dtmDateFromView'] = $.pngFormatDateTime(value['dtmDateFrom'], "DD MMM YYYY")
                            value['dtmDateToView'] = $.pngFormatDateTime(value['dtmDateTo'], "DD MMM YYYY")
                            value['dtmCreatedDate_View'] = $.pngFormatDateTime(value['dtmCreatedDate']) + '<br>' + $.pngFormatDateTime(value['dtmCreatedDate'], 'HH:mm:ss')

                            value['strRequestServiceDescription_View'] = '<a class="detailContent" data="' + key + '">' + $.pngLimitText(value['strRequestServiceDescription'], 150) + '</a>'




                            value['strHtmlAction'] = ''
                            value['strHtmlAction'] += '<button class="btn btn-texticon" intRowID="' + key + '" action="ViewDetail"><i class="fa fa-comment-o"></i><span>Reply</span></button>'
                        }
                        , objCols: {

                            No: { name: '<span langkey="sys_Txt_No"></span>' }
                            , strCompanyName: { name: 'Tên nhà cung cấp' }
                            // , strServiceName_View: { name: 'Service Name' }

                            // , strRequestBookingCode: { name: '<span langkey="pg_ListBooking_Txt_BookingCode"></span>' }
                            , strRequestServiceTitle: { name: 'Tiêu đề' }
                            , strRequestServiceDescription_View: { name: pngElm.getLangKey({ langkey: 'sys_Txt_Content' }) }
                            // , strContactFullName: { name: '<span langkey="pg_Main_GD_FullName"></span>'}
                            // , intAdult: {name: '<span langkey="pg_ListReq_Txt_NumberAdult"></span>'}
                            // , intChildren: {name: '<span langkey="pg_ListReq_Txt_NumberChildren"></span>' }
                            // , strRequestBookingSolution: {name: '<span langkey="pg_ListReq_Txt_BookingSolution"></span>'}
                            // , strRequestBookingResultView: { name: '<span langkey="pg_ListReq_Txt_BookingResult"></span>' }
                            // , strResolveBy: { name: '<span langkey=""> Resolve by</span>' }
                            //, IsShowMenu: { name: "IsShowMenu", input: { type: 'checkbox', classEx: '', attr: '' } }
                            , strRequestStatusName: { name: 'Trạng thái' }
                            , dtmCreatedDate_View: { name: 'Ngày gửi yêu cầu' }
                            , strHtmlAction: { name: '<span langkey="sys_Txt_Action"></span>' }

                        }
                        // ,editTableInput:function(){}
                        , changeCkbMaster: function (IsChecked, intRowID, arrList) {
                            if (IsChecked)
                                $(IdOrClass_Pn + ' tr[row=' + intRowID + '] td').css('background', '#e7eefb')
                            else
                                $(IdOrClass_Pn + ' tr[row=' + intRowID + '] td').removeAttr('style')


                            if ($(IdOrClass_Pn + ' input[chkboxMaster="true"]:checked').length == 0) {
                                $(IdOrClass_Main + " #pnListBtn .viewedit>span.intITs").text('')
                                $(IdOrClass_Main + " #pnListBtn .viewedit").hide()
                            } else {
                                $(IdOrClass_Main + " #pnListBtn .viewedit>span.intITs").text(' (' + $(IdOrClass_Pn + ' input[chkboxMaster="true"]:checked').length + ' item(s))')
                                $(IdOrClass_Main + " #pnListBtn .viewedit").show()
                            }

                            ArrListTbl = arrList
                        }
                        , customEvent: function (_iOrClass_Pn, _objDtl) {

                            $(_iOrClass_Pn + ' button').click(function () {
                                var intRowID = $(this).attr('intRowID')
                                var action = $(this).attr('action')
                                if (action == "ViewDetail") {
                                    window.open('?page=requestdetail&guid=' + ArrListTbl[intRowID].strRequestServiceGUID)
                                }
                            })


                            $(IdOrClass_Main + ' .btnDelete').click(function () {
                                var data = $(this).attr('data')

                                $.Confirm({
                                    strContent: '<span langkey="sys_Cfm_AYS"></span>'
                                    , OnSuccess: function () {




                                    }
                                })

                            })

                            $(IdOrClass_Pn + " .isEnableStatus").unbind('click')
                            $(IdOrClass_Pn + " .isEnableStatus").click(function () {
                                var data = $(this).attr('data');
                                var temp = $(this).is(":checked")
                                var self = this
                                ArrListTbl[data].strRequestBookingResult = temp
                                $.ModuleAdmin_MainListRequest_Popup_Resolve({
                                    strUserGUID: options.strUserGUID
                                    , strCompanyGUID: options.strCompanyGUID
                                    , objDetail: ArrListTbl[data]
                                    , OnSuccess: function () {
                                        Obj_FN_Main.pnMain('pnTable')
                                    }
                                })

                            })


                            $(IdOrClass_Pn + ' .detailContent').click(function () {
                                var data = $(this).attr('data');
                                pngPn.getPopUp({
                                    strTitle: 'Detail Content'
                                    , intTypeSize: 2
                                    , OnPanel: GetMainPanelDetailContent
                                    , OnClosePopUp: function () {

                                    }
                                })
                                function GetMainPanelDetailContent(_IdOrClassPp, _OnClosePp) {
                                    $(_IdOrClassPp).html(ArrListTbl[data].strRequestServiceDescription)
                                }

                            })
                        }
                        // ,changeInput:function(){}
                        , IsViewCheckBoxMain: false
                        , idOrClass: IdOrClass_Pn
                    })

                }


                //==============================
                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })



            }

            //--------------GETLIST     // Các hàm get list dữ liệu tương ứng phía tren



            //--------------END - GETLIST


        }
        $.ModuleAdmin_MainListRequest_Popup_Resolve = function (options) {
            var defaults = {
                strUserGUID: null
                , objDetail: null
                , strCompanyGUID: null
                , OnSuccess: function () {

                }
            }
            options = $.extend(defaults, options);

            var IdOrClass_Main = ''

            var ObjList_Api = {
                UpdStatusRequestBooking: {
                    strApiLink: 'api/user/UpdStatusRequestBooking'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strRequestBookingGUID: options.objDetail.strRequestBookingGUID
                        , strResolveBy: null
                        , strRequestBookingSolution: null
                    }
                },
            }


            pngPn.getPopUp({
                strTitle: 'Detail Contact'
                , intTypeSize: 3
                , OnPanel: GetMainPanel
                , OnClosePopUp: function () {
                    options.OnSuccess.call()
                }
            })

            //---------Obj_ModfigLang
            //---------Arr_ModfigLang
            //---------Is_ModuigLang
            //---------Int_ModfigLang
            //---------Str_ModfigLang
            var Arr_LangDdl = []


            var Fn_Main = function () { }

            function GetMainPanel(_idOrClassPp, _OnClosePp) {

                _OnClosePp(true)

                IdOrClass_Main = _idOrClassPp
                var objInput = {

                    strResolveBy: {
                        title: "Resolved By", attr: "class='col-md-3'", isRequire: true, IsRtn: true,
                        input: { type: 'text', classEx: 'form-control', attr: '' }
                    }
                    , strRequestBookingSolution: {
                        title: 'Solution Content', isRequire: true, attr: "class='col-md-12'", IsRtn: true
                        , input: { type: 'textarea', classEx: 'form-control', attr: 'rows="5" ' }
                    }


                }


                pngPn.getPanelHtml({
                    objPanel: {
                        pnMain: {
                            tag: 'div', attr: 'class="panel-itl"', childTags: [{ div: 'class="container"' }, { div: 'class="row"' }]
                            , pnForm: { tag: 'div', attr: 'class="col-md-12"' }
                            , pnBtn: { tag: 'div', attr: 'class="col-md-12"' }
                        }
                    }
                    , objEvtPanel: {
                        pnForm: function (_IdOrClassPn, _objAll, _OnRtn) {

                            // // console.log(_IdOrClassPn,_objAll)
                            // // if (options.objDetail != null) {

                            // // }
                            // if (!options.objDetail) {
                            //     //----------------------------

                            //     ObjDetail = {
                            //         intOrder: 0,
                            //         IsActive: 1
                            //     }
                            //     //----------------------------
                            // } else {
                            //     ObjDetail = options.objDetail
                            //     ObjDetail.strNewsTypeGUID = (ObjDetail.strNewsTypeGUID || '').toUpperCase()
                            // }

                            pngPn.getForm({
                                action: 1,
                                objInput: objInput, //,options.objDetail
                                idOrClass: _IdOrClassPn,
                                objDetail: options.objDetail
                            })


                            _OnRtn('')
                        }
                        , pnBtn: function (_IdOrClassPn, _objAll, _OnRtn) {
                            // console.log(_IdOrClassPn,_objAll)
                            // _objAll.pnForm
                            var strHtml = '<button id="btnSave" class="btn btn-primary"><i class="fa fa-floppy-o"></i>Save</button>'
                            $(_IdOrClassPn).html(strHtml)

                            $(_IdOrClassPn + ' #btnSave').click(function () {
                                pngPn.getForm({
                                    action: 2,
                                    objInput: objInput,
                                    idOrClass: IdOrClass_Main + ' #pnForm',
                                    OnChkSuccess: function (objRtn) {
                                        console.log(objRtn);
                                        png.postListApiGetValue({
                                            objList_Api: ObjList_Api
                                            , objListApi_RtnVal: {
                                                'UpdStatusRequestBooking': {
                                                    objParams_Cus: objRtn
                                                    , OnSuccess: function (data) {
                                                        _OnClosePp(false, true)
                                                        options.OnSuccess.call()
                                                    }
                                                }
                                            }
                                        })

                                    }
                                })
                            })

                            _OnRtn('')
                        }
                    }
                    , idOrClass: IdOrClass_Main
                    , OnChangeIdPn: function (_Fn) {
                        Fn_Main = _Fn
                    }
                })

            }

        }


        $.ModulePage_UserDetail_BankInfor = function (options) {
            var defaults = {
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strUserGUID,
                strCompanyGUID: JSON.parse(png.ArrLS.UserDetail.get()).strCompanyGUID,
                idOrClass: '',
            }
            options = $.extend(defaults, options);
            var IdOrClass_Main = options.idOrClass

            console.log(JSON.parse(png.ArrLS.UserDetail.get()))
            var ObjList_Api = {
                GetFilterCompanyBankAccount: {
                    strApiLink: 'api/user/GetFilterCompanyBankAccount'
                    , objParams: {
                        strAgentCode: JSON.parse(png.ArrLS.UserDetail.get()).strAgentCode
                        , strOrder: null
                        , strCompanyGUID: null
                        , intCurPage: 1
                        , intPageSize: 10
                        , strWhere: null
                        , tblsReturn: '[0]'
                    }
                }
                , DelCompanyBankAccount: {
                    strApiLink: 'api/user/DelCompanyBankAccount'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strCompanyBankAccountGUID: null
                    }
                }
            }

            // var ObjList_ComboValue = {
            //     Arr_ValCode:{
            //         strCombocode:''
            //     }
            //     ,Arr_SQL:{
            //         strTableName:''
            //         ,strFeildSelect:' AS intID, AS strName'
            //         ,strWhere:'WHERE IsActive = 1'
            //     }
            // }

            //---------Obj_ConfigLang
            //---------Arr_ConfigLang
            //---------Is_ConfigLang
            //---------Int_ConfigLang
            //---------Str_ConfigLang

            var Arr_ListTbl = []
            var Obj_Filter = {}
            var Obj_FN_Main = {}




            GetMainPanel()
            function GetMainPanel() {
                var objPanel = {
                    pnMain: {
                        tag: 'div', attr: '', childTags: [{ div: 'class="row"' }]
                        // ,pnTit:{tag:'div',attr:'class="col-md-12 pn-margin-t-b-30"'}
                        , pnCnt: {
                            tag: 'div', attr: 'class="col-md-12 pn-margin-b-30"'
                            , childTags: [{ div: 'class="bg-white pn-round-1em pn-padding-15"' }, { div: 'class="row"' }]
                            , pnListBtn: { tag: 'div', attr: 'class="col-md-12"' }
                            , pnFormFilter: { tag: 'div', attr: 'class="col-md-12"' }
                            , pnTable: { tag: 'div', attr: 'class="col-md-12"' }
                        }

                    }
                }
                var objEvtPanel = {}
                objEvtPanel.pnTit = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''
                    strHtml += '<h1><b>Thông tin ngân hàng</b></h1>'
                    $(IdOrClass_Pn).html(strHtml)

                }

                objEvtPanel.pnListBtn = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtmlBtn = ''
                    strHtmlBtn += '<button class="btn btn-texticon bg-success txt-white" id="btnAdd"><i class="fa fa-plus"></i><span langkey="sys_Btn_Create"></span></button> '
                    // strHtmlBtn += '<button class="btn btn-primary viewedit" id="btnSaveAll"><i class="fa fa-floppy-o"></i><span langkey="sys_Btn_Save"></span><span class="intITs"></span></button> '
                    // strHtmlBtn += '<button class="btn btn-danger viewedit" id="btnDelAll"><i class="fa fa-trash"></i>Delete All<span class="intITs"></span></button> '
                    $(IdOrClass_Pn).html(strHtmlBtn)

                    // $(IdOrClass_Pn).find('.viewedit').hide()


                    $(IdOrClass_Pn + ' #btnAdd').click(function () {
                        $.Module_ConfigBankInforPopUp_Add({
                            strUserGUID: options.strUserGUID
                            , strCompanyGUID: options.strCompanyGUID
                            , OnSuccess: function () {
                                Obj_FN_Main.pnMain('pnTable')
                                $.Confirm({ strContent: '<span langkey="sys_Cfm_AddSuccess"></span>' });
                            }
                        })
                    })

                }


                objEvtPanel.pnFormFilter = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtmlFlt = ''
                    strHtmlFlt += '<a id="btnViewFilter" class="btn btn-link" data-toggle="collapse" href="#pnFilterForm">'
                    strHtmlFlt += '    <i class="fa fa-chevron-down"></i>'
                    strHtmlFlt += '    View Search'
                    strHtmlFlt += '</a>'
                    strHtmlFlt += '<div id="pnFilterForm" class="panel-collapse collapse panel panel-default panel-itl pn-padding-l-r-15">'
                    strHtmlFlt += '    <div class="row">'
                    strHtmlFlt += '        <div class="content col-md-12"></div>'
                    strHtmlFlt += '        <div class="col-md-12">'
                    strHtmlFlt += '            <button class="btn btn-texticon bg-primary" id="btnFilter"><i class="fa fa-filter"></i><span langkey="sys_Btn_Filter"></span></button>'
                    strHtmlFlt += '            <button class="btn btn-default btn-texticon" id="btnReset"><i class="fa fa-refresh"></i><span langkey="sys_Btn_Reset"></span></button>'
                    strHtmlFlt += '        </div>'
                    strHtmlFlt += '    </div>'
                    strHtmlFlt += '</div>'
                    $(IdOrClass_Pn).html(strHtmlFlt)


                    var objInput = {
                        strCompanyBankAccountName: {
                            title: 'Account Name', attr: 'class="col-md-3" style=" margin-bottom: 15px"', isRequire: false, IsRtn: true
                            , input: { type: 'text', classEx: 'form-control', attr: 'maxlength="30"' }
                        },
                        strCompanyBankAccountCode: {
                            title: 'Account Code', attr: 'class="col-md-3" style=" margin-bottom: 15px"', isRequire: false, IsRtn: true
                            , input: { type: 'text', classEx: 'form-control', attr: 'maxlength="30"' },
                        },
                        strSwiftCode: {
                            title: 'Swith Code', attr: 'class="col-md-3" style=" margin-bottom: 15px"', isRequire: false, IsRtn: true
                            , input: { type: 'text', classEx: 'form-control', attr: 'maxlength="30"' },
                        },
                        strBankAddress: {
                            title: 'Address', attr: 'class="col-md-9" style=" margin-bottom: 15px"', isRequire: false, IsRtn: true
                            , input: { type: 'text', classEx: 'form-control', attr: 'maxlength="30"' },
                        }
                    }
                    //----------------------------
                    pnFormFlt()
                    function pnFormFlt() {
                        var objDetail = {}
                        pngPn.getForm({
                            action: 1,
                            objInput: objInput,
                            idOrClass: IdOrClass_Pn + ' #pnFilterForm .content',
                            objDetail: objDetail
                        })
                    }

                    $("#pnFilterForm").DefaultButton(IdOrClass_Pn + ' #btnFilter')

                    $(IdOrClass_Pn + ' #btnFilter').click(function () {
                        pngPn.getForm({
                            action: 2,
                            objInput: objInput,
                            idOrClass: IdOrClass_Pn + ' #pnFilterForm .content',
                            OnChkSuccess: chkSuccess
                        })
                        function chkSuccess(objRtn) {
                            if (objRtn) {
                                var strWhere = ''
                                if (objRtn.strCompanyBankAccountName)
                                    strWhere += " AND MB28.MB28_CompanyBankAccountName LIKE N'%" + objRtn.strCompanyBankAccountName + "%'";

                                if (objRtn.strCompanyBankAccountCode)
                                    strWhere += " AND MB28.MB28_CompanyBankAccountCode LIKE N'%" + objRtn.strCompanyBankAccountCode + "%'";

                                if (objRtn.strSwiftCode)
                                    strWhere += " AND MB28.MB28_SwiftCode LIKE N'%" + objRtn.strSwiftCode + "%'";

                                if (objRtn.strBankAddress)
                                    strWhere += " AND MB28.MB28_BankAddress LIKE N'%" + objRtn.strBankAddress + "%'";

                                Obj_Filter.strWhere = strWhere
                            } else {
                                Obj_Filter = {}
                            }
                            Obj_FN_Main.pnMain('pnTable')
                            // GetMain(objRtn)
                        }



                    })
                    $(IdOrClass_Pn + ' #btnReset').click(function () {
                        pnFormFlt()
                    })

                }

                objEvtPanel.pnTable = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    pngPn.getTable2({
                        objApi: ObjList_Api.GetFilterCompanyBankAccount
                        , objParams_Cus: Obj_Filter
                        , editRlt: function (valTbl, keyTbl) {


                            valTbl['dtmCreatedDateView'] = $.pngFormatDateTime(valTbl['dtmCreatedDate'])
                            valTbl['dtmLastUpdatedDateView'] = $.pngFormatDateTime(valTbl['dtmLastUpdatedDate'])
                            valTbl['strHtmlAction'] = ''
                            valTbl['strHtmlAction'] += '<button class="editAccount btn" data="' + keyTbl + '"><i class="fa fa-pencil"></i></button>'
                            valTbl['strHtmlAction'] += '<button class="btnDelete btn" data="' + keyTbl + '"><i class="fa fa-trash"></i></button>'
                        }
                        , objCols: {

                            No: { name: '<span langkey="sys_Txt_No"></span>' }
                            , strNameDisplay: { name: 'Name Display' }
                            , strCompanyBankAccountInfo: { name: 'Account Info' }
                            , strCompanyBankAccountName: { name: 'Account Name' }
                            , strCompanyBankAccountCode: { name: 'Account Code' }
                            , strBankAddress: { name: 'Bank Address' }
                            , strSwiftCode: { name: 'Swift Code' }
                            , dtmCreatedDateView: { name: 'Date Create' }
                            , dtmLastUpdatedDateView: { name: 'Date Update' }
                            , strHtmlAction: { name: '<span langkey="sys_Txt_Action"></span>' }

                        }
                        , editTableInput: function () { }
                        , changeCkbMaster: function (IsChecked, intRowID, arrList) {
                            // if (IsChecked)
                            //     $(IdOrClass_Pn + ' tr[row=' + intRowID + '] td').css('background', '#e7eefb')
                            // else
                            //     $(IdOrClass_Pn + ' tr[row=' + intRowID + '] td').removeAttr('style')


                            // if($(IdOrClass_Pn+' input[chkboxMaster="true"]:checked').length == 0){
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit>span.intITs").text('')
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit").hide()
                            // }else{
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit>span.intITs").text(' (' + $(IdOrClass_Pn+' input[chkboxMaster="true"]:checked').length + ' item(s))')
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit").show()
                            // }

                            Arr_ListTbl = arrList
                        }
                        , customEvent: function () {
                            $(IdOrClass_Main + ' .btnDelete').click(function () {
                                var data = $(this).attr('data');
                                $.Confirm({
                                    strContent: '<span langkey="sys_Cfm_AYS"></span>'
                                    , OnSuccess: function () {
                                        png.postListApiGetValue({
                                            objList_Api: ObjList_Api
                                            , objListApi_RtnVal: {
                                                'DelCompanyBankAccount': {
                                                    objParams_Cus: { strCompanyBankAccountGUID: Arr_ListTbl[data].strCompanyBankAccountGUID }
                                                    , OnSuccess: function (data) {
                                                        Obj_FN_Main.pnMain('pnTable');
                                                        $.Confirm({ strContent: '<span langkey="sys_Cfm_DelSuccess"></span>' });
                                                    }
                                                }
                                            }
                                        })



                                    }
                                })

                            })


                            $(IdOrClass_Main + ' .editAccount').click(function () {
                                var data = $(this).attr('data')
                                $.Module_ConfigBankInforPopUp_Add({
                                    strUserGUID: options.strUserGUID
                                    , strCompanyGUID: options.strCompanyGUID
                                    , objDetail: Arr_ListTbl[data]
                                    , OnSuccess: function () {
                                        $.Confirm({ strContent: '<span langkey="sys_Cfm_UpdSuccess"></span>' });
                                        Obj_FN_Main.pnMain('pnTable')
                                    }
                                })
                                // PopUpAddOrUpd({
                                //     objDetail: Arr_ListTbl[data],
                                //     IsDuplicate:false,
                                //     strUserGUID: options.strUserGUID,
                                //     // intMemberTypeID: 1,
                                //     strCompanyGUID: options.strCompanyGUID,
                                //     OnSuccess:function(){
                                //         $.Confirm({ strContent: '<span langkey="sys_Cfm_UpdSuccess"></span>' });
                                //         GetMain()
                                //     }
                                // })
                            })

                        }
                        // ,changeInput:function(){}
                        , IsViewCheckBoxMain: false
                        , idOrClass: IdOrClass_Pn
                    })

                }
                //==============================
                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })

            }



        }
        $.Module_ConfigBankInforPopUp_Add = function (options) {
            var defaults = {
                strUserGUID: null
                , strCompanyGUID: null
                , objDetail: {}
                , OnSuccess: function () {

                }
            }
            options = $.extend(defaults, options);
            var IdOrClass_Main = ''

            var Is_Edit = null

            if (options.objDetail && Object.keys(options.objDetail).length) {
                Is_Edit = true
            } else {
                Is_Edit = false
            }

            var ObjList_Api = {
                AddCompanyBankAccount: {
                    strApiLink: 'api/user/AddCompanyBankAccount'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strCompanyGUID: options.strCompanyGUID
                        , strCompanyBankAccountInfo: null
                        , strCompanyBankAccountName: null
                        , strCompanyBankAccountCode: null
                        , strBankAddress: null
                        , strSwiftCode: null
                        , strNameDisplay: null
                    }
                }
                , UpdCompanyBankAccount: {
                    strApiLink: 'api/user/UpdCompanyBankAccount'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strCompanyBankAccountGUID: null
                        // ,strCompanyGUID : options.strCompanyGUID
                        , strCompanyBankAccountInfo: null
                        , strCompanyBankAccountName: null
                        , strCompanyBankAccountCode: null
                        , strBankAddress: null
                        , strSwiftCode: null
                        , strNameDisplay: null
                    }
                }
            }

            // SELECT MC77_ComboCode,MC77_FieldIDName,MC77_FieldName,MC77_WhereClause FROM MC77 WHERE MC77_TableName = 'MC36'
            // SELECT * FROM MC77 ORDER BY MC77_ComboCode-- WHERE MC77_ComboCode = '077'
            var ObjList_ComboValue = {
                Arr_LangDdl: {
                    strCombocode: "015"
                }
            }

            //---------Obj_ModfigLang
            //---------Arr_ModfigLang
            //---------Is_ModuigLang
            //---------Int_ModfigLang
            //---------Str_ModfigLang
            var Obj_Detail = {}

            if (Is_Edit) {
                Obj_Detail = options.objDetail
            } else {

            }


            var Fn_Main = function () { }

            // png.postListApiGetValue({
            //     // objList_Api: ObjList_Api
            //     objList_ComboValue: ObjList_ComboValue
            //     ,objListComboValue_RtnVal: {
            //         'Arr_LangDdl':{
            //             objParams_Cus:{}, OnSuccess: function(data){
            //                 Arr_LangDdl = data
            //             }
            //         }
            //     }
            //     ,OnSuccessList:function(data){
            //         pngPn.getPopUp({
            //             strTitle: 'Create New Alliance Own'
            //             , intTypeSize:2
            //             , OnPanel: GetMainPanel
            //             , OnClosePopUp: function () {

            //             }
            //         })

            //     }
            // })

            pngPn.getPopUp({
                strTitle: Is_Edit ? 'Edit Bank Account' : 'Create New Bank Account'
                , intTypeSize: 1
                , OnPanel: GetMainPanel
                , OnClosePopUp: function () {

                }
            })

            function GetMainPanel(_idOrClassPp, _OnClosePp) {

                IdOrClass_Main = _idOrClassPp

                var objInput = {
                    strNameDisplay: {
                        title: "Name display", attr: "class='col-md-12'", isRequire: true, IsRtn: true,
                        input: { type: 'text', classEx: 'form-control', attr: '' }
                    },
                    strCompanyBankAccountInfo: {
                        title: "Bank Account Info", attr: "class='col-md-12'", isRequire: true, IsRtn: true,
                        input: { type: 'text', classEx: 'form-control', attr: '' }
                    }
                    , strCompanyBankAccountName: {
                        title: "Bank Account Name", attr: "class='col-md-12'", isRequire: true, IsRtn: true,
                        input: { type: 'text', classEx: 'form-control', attr: '' }
                    }
                    , strCompanyBankAccountCode: {
                        title: 'Bank Account Code', isRequire: true, attr: "class='col-md-6'", IsRtn: true
                        , input: { type: 'text', classEx: 'form-control', attr: '' }
                    }
                    , strSwiftCode: {
                        title: 'Swift Code', isRequire: true, attr: "class='col-md-6'", IsRtn: true
                        , input: { type: 'text', classEx: 'form-control', attr: '' }
                    }
                    , strBankAddress: {
                        title: 'Bank Address', isRequire: true, attr: "class='col-md-12'", IsRtn: true
                        , input: { type: 'text', classEx: 'form-control', attr: ' ' }
                    }

                }

                pngPn.getPanelHtml({
                    objPanel: {
                        pnMain: {
                            tag: 'div', attr: 'class=""', childTags: [{ div: 'class="row"' }]
                            , pnForm: { tag: 'div', attr: 'class="col-md-12"' }
                            , pnBtn: { tag: 'div', attr: 'class="col-md-12"' }
                        }
                    }
                    , objEvtPanel: {
                        pnForm: function (_IdOrClassPn, _objAll, _OnRtn) {
                            pngPn.getForm({
                                action: 1,
                                objInput: objInput,
                                idOrClass: _IdOrClassPn,
                                objDetail: Obj_Detail,
                            })

                            _OnRtn('')
                        }
                        , pnBtn: function (_IdOrClassPn, _objAll, _OnRtn) {
                            // console.log(_IdOrClassPn,_objAll)
                            // _objAll.pnForm
                            var strHtml = '<button id="btnSave" class="btn btn-primary"><i class="fa fa-floppy-o"></i>Save</button>'
                            $(_IdOrClassPn).html(strHtml)

                            $(_IdOrClassPn + ' #btnSave').click(function () {
                                pngPn.getForm({
                                    action: 2,
                                    objInput: objInput,
                                    idOrClass: IdOrClass_Main + ' #pnForm',
                                    OnChkSuccess: function (objRtn) {
                                        if (objRtn) {
                                            if (Is_Edit) {
                                                objRtn.strCompanyBankAccountGUID = options.objDetail.strCompanyBankAccountGUID;
                                                png.postListApiGetValue({
                                                    objList_Api: ObjList_Api
                                                    , objListApi_RtnVal: {
                                                        'UpdCompanyBankAccount': {
                                                            objParams_Cus: objRtn
                                                            , OnSuccess: function (data) {
                                                                _OnClosePp(false, true)
                                                                options.OnSuccess.call()
                                                            }
                                                        }
                                                    }
                                                })
                                            } else {
                                                png.postListApiGetValue({
                                                    objList_Api: ObjList_Api
                                                    , objListApi_RtnVal: {
                                                        'AddCompanyBankAccount': {
                                                            objParams_Cus: objRtn
                                                            , OnSuccess: function (data) {
                                                                _OnClosePp(false, true)
                                                                options.OnSuccess.call()
                                                            }
                                                        }
                                                    }
                                                })
                                            }

                                        }
                                    }
                                })
                            })

                            _OnRtn('')
                        }
                    }
                    , idOrClass: IdOrClass_Main
                    , OnChangeIdPn: function (_Fn) {
                        Fn_Main = _Fn
                    }
                })

            }

        }

        $.ModulePage_UserDetail_Report = function (options) {
            var defaults = {
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strUserGUID,
                strCompanyPartnerGUID: JSON.parse(png.ArrLS.UserDetail.get()).strCompanyGUID,
                strCompanyOwnerGUID: JSON.parse(png.ArrLS.CompanyFriend.get()).strCompanyGUID,
                idOrClass: '',
                OnSuccess: function () {
                }
            }
            options = $.extend(defaults, options);

            var IdOrClass_Main = options.idOrClass
            var Obj_FN_Main = {}

            GetMainPanel()
            function GetMainPanel() {

                var objPanel = {
                    pnMain: {
                        tag: 'div', attr: ''
                        // ,pnTit:{tag:'div',attr:'class="container pn-margin-t-b-30"'}
                        , pnContent: { tag: 'div', attr: '' }

                    }
                }
                var objEvtPanel = {}
                objEvtPanel.pnTit = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''
                    strHtml += '<h1><b>Báo cáo Khoản thu chi</b></h1>'
                    $(IdOrClass_Pn).html(strHtml)
                }


                objEvtPanel.pnContent = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''
                    // strHtml+= '<div class="container">'
                    strHtml += '<div id="pnTabList"></div>'
                    strHtml += '<div id="pnTabCnt" class="bg-white pn-round-1em pn-round-t-l-0 pn-round-t-r-0 pn-padding-15 pn-margin-b-30"></div>'
                    // strHtmxl+= '</div>'
                    $(IdOrClass_Pn).html(strHtml)


                    var ObjListTab = {
                        'rp-com': {
                            name: 'Báo cáo Hoa hồng', isDefault: true,
                            OnClick: function () {
                                $.ModulePage_Report_Commission({
                                    strUserGUID: options.strUserGUID
                                    , strCompanyPartnerGUID: options.strCompanyPartnerGUID
                                    // ,strCompanyOwnerGUID:options.strCompanyOwnerGUID
                                    , idOrClass: IdOrClass_Pn + ' #pnTabCnt'
                                    , OnSuccess: function () {

                                    }
                                })
                            }
                        },
                        'rp-payable': {
                            name: 'Báo cáo khoản dự kiến chi', isDefault: false,
                            OnClick: function () {

                                $.ModulePage_Report_Payable({
                                    strUserGUID: options.strUserGUID
                                    , strCompanyPartnerGUID: options.strCompanyPartnerGUID
                                    , idOrClass: IdOrClass_Pn + ' #pnTabCnt'
                                    , OnSuccess: function () {

                                    }
                                })
                            }
                        },
                        'rp-receivable': {
                            name: 'Báo cáo khoản dự kiến thu', isDefault: false,
                            OnClick: function () {
                                $.ModulePage_Report_Receivable({
                                    strUserGUID: options.strUserGUID
                                    , strCompanyPartnerGUID: options.strCompanyPartnerGUID
                                    , idOrClass: IdOrClass_Pn + ' #pnTabCnt'
                                    , OnSuccess: function () {

                                    }
                                })
                            }
                        },
                    }


                    pngElm.getTabs({
                        idOrClassPnTab: IdOrClass_Pn + ' #pnTabList'
                        , arrTab: ObjListTab
                        , IsPushUrl: true
                        // ,strQueryName:'tab'
                    })


                }

                //==============================
                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })



            }

        }

        $.ModulePage_Report_Commission = function (options) {
            var defaults = {
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strUserGUID,
                strCompanyPartnerGUID: JSON.parse(png.ArrLS.UserDetail.get()).strCompanyGUID,
                idOrClass: '',
                OnSuccess: function () {
                }
            }
            options = $.extend(defaults, options);


            var IdOrClass_Main = options.idOrClass

            var ObjList_Api = {
                GetReportCommissionByAgent: {
                    strApiLink: 'api/booking/GetReportCommissionByAgent'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strCompanyGUID: options.strCompanyPartnerGUID
                        , strPayableBookingItemGUID: null
                        , strFilterAgentHostName: null
                        , strFilterBookingCode: null
                        , strFilterGroupName: null
                        , dtmFilterDateFrom: null
                        , dtmFilterDateTo: null
                        , intCurPage: 1
                        , intPageSize: 10
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                }
            }

            //---------Obj_ConfigLang
            //---------Arr_ConfigLang
            //---------Is_ConfigLang
            //---------Int_ConfigLang
            //---------Str_ConfigLang

            //---------
            var Obj_Filter = {}       // Biến lọc
            var Arr_ListTbl = []
            // var Obj_FormInput = {}

            var Obj_FN_Main = {}
            //---------


            GetMainPanel()
            function GetMainPanel() {

                var objPanel = {                 // Khai báo các thành phần của panel
                    pnMain: {
                        tag: 'div', attr: 'class=""'
                        , childTags: [{ div: 'class="row"' }]
                        //--------------GETLIST     // Khai báo các tên thẻ con và thuôc tính của chúng
                        , pnFormFilter: { tag: 'div', attr: 'class="col-md-12 pn-padding-b-15"' }
                        , pnTable: { tag: 'div', attr: 'class="col-md-12"' }
                        //--------------END - GETLIST
                    }
                }

                var objEvtPanel = {}

                objEvtPanel.pnFormFilter = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn


                    var strHtml = ''

                    strHtml += '<div class="pnForm" style="float: left;"></div>'
                    strHtml += '<div class="pnTotalPrice" style="float: right; padding: 15px; border: 1px solid #848484; border-radius: 1em;">'
                    strHtml += '<table style="display: inline-table;">'
                    strHtml += '<tr>'
                    strHtml += '<td><b>Tổng tiền hoa hồng: </b> </td><td><b class="txt-primary txtTotalCom" style="font-size: 16px;"></b></td>'
                    strHtml += '</tr>'
                    strHtml += '</table>'
                    strHtml += '</div>'
                    $(IdOrClass_Pn).html(strHtml)

                    var objInput = {
                        strFilterAgentHostName: {
                            title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                            , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Tên Nhà cung cấp" style="padding-left:15px"' }
                        },
                        strFilterBookingCode: {
                            title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                            , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Mã Booking" style="padding-left:15px"' }
                        },
                        strFilterGroupName: {
                            title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                            , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Group Name" style="padding-left:15px"' }
                        },
                        dtmFilterDateFrom_dtmFilterDateTo: {
                            title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                            , datePickerRange: { todayHighlight: true, format: 'dd/mm/yyyy', weekStart: 1, startDate: null, endDate: null, diffmin: 1 }
                        },
                    }

                    pngPn.getFormHorizontal({
                        objInput: objInput
                        , idOrClass: IdOrClass_Pn + ' .pnForm'
                        , objDetail: {}
                        , classEx: 'bg-white pn-round-1em'
                        , attr: 'style="border: 1px solid #D6D6D6;display:inline-flex"'
                        , strHtmlBtn: '<button id="btnFilter" class="btn bg-primary txt-white pn-round-1em pn-round-t-l-0 pn-round-b-l-0"><i class="fa fa-search"></i></button>'
                    })
                    $('.input-daterange input', IdOrClass_Pn).css('border', 'none').css('width', '100px')
                    $('.input-group-addon', IdOrClass_Pn).css('border', 'none')
                    $(IdOrClass_Pn).DefaultButton(IdOrClass_Pn + ' #btnFilter')
                    $(IdOrClass_Pn + ' #btnFilter').click(function () {
                        pngPn.getForm({
                            action: 2,
                            objInput: objInput,
                            idOrClass: IdOrClass_Pn,
                            OnChkSuccess: chkSuccess
                        })
                        function chkSuccess(objRtn) {
                            Obj_Filter = $.pngExtendObj(Obj_Filter, objRtn)
                            Obj_FN_Main.pnMain('pnTable')


                        }
                    })
                }

                objEvtPanel.pnTable = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn
                    //---------ObjConfigLang
                    //---------ArrConfigLang
                    //---------IsConfigLang
                    //---------IntConfigLang
                    //---------StrConfigLang

                    pngPn.getTable2({
                        objApi: ObjList_Api.GetReportCommissionByAgent
                        , objParams_Cus: Obj_Filter
                        , editRlt: function (value, key) {

                            value['dtmDateFrom_View'] = $.pngFormatDateTime(value['dtmDateFrom'])
                            value['dtmDateTo_View'] = $.pngFormatDateTime(value['dtmDateTo'])

                            value['dtmDateFromTo_View'] = $.pngFormatDateTime(value['dtmDateFrom']) + ' - ' + $.pngFormatDateTime(value['dtmDateTo'])

                            value['dblPriceTotal_View'] = $.pngFormatPrice(value['dblPriceTotal'])
                            value['dblPayableAmount_View'] = $.pngFormatPrice(value['dblPayableAmount'])

                            var strUrl = coreLoadPage.getUrlHost()
                            strUrl = $.pngGetQSVal('cname', $.pngGetQSVal('cname'), strUrl)
                            strUrl = $.pngGetQSVal('page', 'bookingdetail', strUrl)
                            strUrl = $.pngGetQSVal('BKID', value.strBookingGUID, strUrl)
                            value['strOrderBookingCode_View'] = '<a href="' + strUrl + '" target="_BookingDetail">' + value['strOrderAgentHostCode'] + '/' + (value['strGroupName'] || '') + '</a>'
                        }
                        , objCols: {

                            No: { name: 'STT' }
                            , strCompanyName: { name: 'Tên Nhà cung cấp' }
                            , strOrderBookingCode_View: { name: 'Mã Booking/Group Name' }
                            , dtmDateFromTo_View: { name: 'Ngày bắt đầu - Ngày kết thúc' }
                            , intTotalPax: { name: 'Total Pax' }
                            // , dblPriceTotal_View: { name: 'Tổng giá'}
                            , dblPayableAmount_View: { name: 'Số tiền Hoa hồng', strAttrTD: ' style="text-align: right"' }
                            // , strPayableStatusName: { name: 'Trang thái trả tiền'}
                            , strPaymentStatusName: { name: 'Trang thái hoa hồng' }

                        }
                        // ,editRltArr:function(){}
                        , changeCkbMaster: function (_IsChecked, _intRowID, _arrList) {
                            // if (_IsChecked)
                            //     $(IdOrClass_Pn + ' tr[row=' + _intRowID + '] td').css('background', '#E7EEFB')
                            // else
                            //     $(IdOrClass_Pn + ' tr[row=' + _intRowID + '] td').removeAttr('style')


                            // if($(IdOrClass_Pn+' input[chkboxMaster="true"]:checked').length == 0){
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit>span.intITs").text('')
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit").hide()
                            // }else{
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit>span.intITs").text(' (' + $(IdOrClass_Pn+' input[chkboxMaster="true"]:checked').length + ')')
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit").show()
                            // }

                            Arr_ListTbl = _arrList
                        }
                        , customEvent: function (_iOrClass_Pn) {
                            var dblSumPayableAmount = 0
                            if (Arr_ListTbl.length)
                                dblSumPayableAmount = Arr_ListTbl[0].dblSumPayableAmount

                            $('.txtTotalCom').html($.pngFormatPrice(dblSumPayableAmount))

                        }
                        // ,changeInput:function(){}
                        , IsViewCheckBoxMain: false
                        , idOrClass: IdOrClass_Pn
                    })

                }

                // ===================================

                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })


            }



        }

        $.ModulePage_Report_Payable = function (options) {
            var defaults = {
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strUserGUID,
                strCompanyPartnerGUID: JSON.parse(png.ArrLS.UserDetail.get()).strCompanyGUID,
                idOrClass: '',
                OnSuccess: function () {
                }
            }
            options = $.extend(defaults, options);


            var IdOrClass_Main = options.idOrClass


            var ObjList_Api = {
                GetReportPayableBookingItemByAgent: {
                    strApiLink: 'api/payrcvbooking/GetReportPayableBookingItemByAgent'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strCompanyGUID: options.strCompanyPartnerGUID
                        , strPayableBookingItemGUID: null
                        , strFilterAgentHostName: null
                        , strFilterOrderBookingCode: null
                        , strFilterGroupName: null
                        , dtmFilterDateFrom: null
                        , dtmFilterDateTo: null

                        , intCurPage: 1
                        , intPageSize: 10
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                }

            }

            //---------Obj_ConfigLang
            //---------Arr_ConfigLang
            //---------Is_ConfigLang
            //---------Int_ConfigLang
            //---------Str_ConfigLang

            var Arr_ListTbl = []
            var Obj_Filter = {}
            var Obj_FN_Main = {}

            GetMainPanel()
            function GetMainPanel() {

                pngPn.getPanelHtml({
                    objPanel: {
                        pnMain: {
                            tag: 'div', attr: 'class=""', childTags: [{ div: 'class="row"' }]
                            , pnFormFilter: { tag: 'div', attr: 'class="col-md-12 pn-padding-b-15"' }
                            , pnTable: { tag: 'div', attr: 'class="col-md-12"' }
                        }
                    }
                    , objEvtPanel: {
                        pnFormFilter: function (_idOrClassPn) {
                            var IdOrClass_Pn = _idOrClassPn
                            var strHtml = ''
                            strHtml += '<div class="pnForm" style="float: left;"></div>'
                            strHtml += '<div class="pnTotalPrice" style="float: right; padding: 15px; border: 1px solid #848484; border-radius: 1em;">'
                            strHtml += '<table style="display: inline-table;">'
                            strHtml += '<tr>'
                            strHtml += '<td><b>Tổng tiền phải chi: </b> </td><td><b class="txt-primary txtTotalPrice" style="font-size: 16px;"></b></td>'
                            strHtml += '</tr>'
                            strHtml += '</table>'
                            strHtml += '</div>'
                            $(IdOrClass_Pn).html(strHtml)

                            var objInput = {
                                strFilterAgentHostName: {
                                    title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                                    , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Tên Nhà cung cấp" style="padding-left:15px"' }
                                },
                                strFilterOrderBookingCode: {
                                    title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                                    , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Mã Booking" style="padding-left:15px"' }
                                },
                                strFilterGroupName: {
                                    title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                                    , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Group Name" style="padding-left:15px"' }
                                },
                                dtmFilterDateFrom_dtmFilterDateTo: {
                                    title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                                    , datePickerRange: { todayHighlight: true, format: 'dd/mm/yyyy', weekStart: 1, startDate: null, endDate: null, diffmin: 1 }
                                },
                            }

                            pngPn.getFormHorizontal({
                                objInput: objInput
                                , idOrClass: IdOrClass_Pn + ' .pnForm'
                                , objDetail: {}
                                , classEx: 'bg-white pn-round-1em'
                                , attr: 'style="border: 1px solid #D6D6D6;display:inline-flex"'
                                , strHtmlBtn: '<button id="btnFilter" class="btn bg-primary txt-white pn-round-1em pn-round-t-l-0 pn-round-b-l-0"><i class="fa fa-search"></i></button>'
                            })
                            $('.input-daterange input', IdOrClass_Pn).css('border', 'none').css('width', '100px')
                            $('.input-group-addon', IdOrClass_Pn).css('border', 'none')
                            $(IdOrClass_Pn).DefaultButton(IdOrClass_Pn + ' #btnFilter')
                            $(IdOrClass_Pn + ' #btnFilter').click(function () {
                                pngPn.getForm({
                                    action: 2,
                                    objInput: objInput,
                                    idOrClass: IdOrClass_Pn,
                                    OnChkSuccess: chkSuccess
                                })
                                function chkSuccess(objRtn) {
                                    Obj_Filter = $.pngExtendObj(Obj_Filter, objRtn)
                                    Obj_FN_Main.pnMain('pnTable')


                                }
                            })
                        },
                        pnTable: function (_IdOrClassPn, _objAll, _OnRtn) {

                            pnTable_GetPanel({
                                idOrClass: _IdOrClassPn
                            })

                            _OnRtn('')
                        }
                    }
                    , idOrClass: IdOrClass_Main
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn
                    }
                })

            }




            function pnTable_GetPanel(_Opt) {
                var Dft = {
                    idOrClass: ''
                    , OnSuccess: function () {

                    }
                }
                _Opt = $.extend(Dft, _Opt);

                var IdOrClass_Pn = _Opt.idOrClass

                //---------ObjConfigLang
                //---------ArrConfigL)ang
                //---------IsConfigLang
                //---------IntConfigLang
                //---------StrConfigLang




                pngPn.getTable2({
                    objApi: ObjList_Api.GetReportPayableBookingItemByAgent
                    , objParams_Cus: Obj_Filter
                    , editRlt: function (valTbl, keyTbl) {

                        valTbl['dtmDateFrom_DateTo_View'] = $.pngFormatDateTime(valTbl['dtmDateFrom']) + ' - ' + $.pngFormatDateTime(valTbl['dtmDateTo'])

                        valTbl['dblPayableAmount_View'] = $.pngFormatPrice(valTbl['dblPayableAmount'])


                        var strUrl = coreLoadPage.getUrlHost()
                        strUrl = $.pngGetQSVal('cname', $.pngGetQSVal('cname'), strUrl)
                        strUrl = $.pngGetQSVal('page', 'bookingdetail', strUrl)
                        strUrl = $.pngGetQSVal('BKID', valTbl.strBookingGUID, strUrl)
                        valTbl['strOrderBookingCode_View'] = '<a href="' + strUrl + '" target="_BookingDetail">' + valTbl['strOrderBookingCode'] + '/' + (valTbl['strGroupName'] || '') + '</a>'
                        // valTbl['dblPriceTotal_View']= $.pngFormatPrice(valTbl['dblPriceTotal'])
                        // valTbl['dblDepositAmount_View']= $.pngFormatPrice(valTbl['dblDepositAmount'])
                        // valTbl['dtmDateFromView']= $.pngFormatDateTime(valTbl['dtmDateFrom'],"Do MMMM YYYY")
                        // valTbl['dtmDateToView']= $.pngFormatDateTime(valTbl['dtmDateTo'],"Do MMMM YYYY")
                        // valTbl['intotalPaxUsedView']= '<a style="underline: none; cursor: pointer;" class="viewPaxUsed" data="' + keyTbl + '">'+ valTbl['intotalPaxUsed']+' </a>'
                        // valTbl['intTotalPaxHoldView']= '<a style="underline: none; cursor: pointer;" class="viewPaxHold" data="' + keyTbl + '">'+ valTbl['intTotalPaxHold']+' </a>'
                        // valTbl['strHtmlAction']= '<button class="btnDelete btn btn-danger" data="' + keyTbl + '"><i class="fa fa-trash"></i></button><button class="btnAddMember btn btn-primary" data="' + keyTbl + '"><i class="fa fa-plus"></i></button>'
                    }
                    , objCols: {

                        No: { name: '<span langkey="sys_Txt_Tbl-No"></span>' }
                        , strAgentHostName: { name: 'Agent Host Name' }
                        , strOrderBookingCode_View: { name: 'Booking Code/Group Name' }
                        , strPaymentBookingPeriodCode: { name: 'Deposit Code' }
                        , dtmDateFrom_DateTo_View: { name: 'Date From - Date To' }
                        , dblPayableAmount_View: { name: 'Price Payable' }
                        // , intTotalPax: { name: 'Total Pax'}
                        // , dblPriceTotal_View: { name: 'Price Total'}
                        // , dblDepositAmount_View: { name: 'Price Receivable' }

                    }
                    // ,editTableInput:function(){}
                    , changeCkbMaster: function (IsChecked, intRowID, arrList) {

                        Arr_ListTbl = arrList
                    }
                    , customEvent: function () {
                        var dblSumPayableAmount = 0
                        if (Arr_ListTbl.length)
                            dblSumPayableAmount = Arr_ListTbl[0].dblSumPayableAmount

                        $('.txtTotalPrice').html($.pngFormatPrice(dblSumPayableAmount))


                    }
                    // ,changeInput:function(){}
                    , IsViewCheckBoxMain: false
                    , idOrClass: IdOrClass_Pn
                })

            }


        }


        $.ModulePage_Report_Receivable = function (options) {
            var defaults = {
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strUserGUID,
                strCompanyPartnerGUID: JSON.parse(png.ArrLS.UserDetail.get()).strCompanyGUID,
                idOrClass: '',
                OnSuccess: function () {
                }
            }
            options = $.extend(defaults, options);


            var IdOrClass_Main = options.idOrClass

            var ObjList_Api = {
                GetReportReceivableByAgent: {
                    strApiLink: 'api/booking/GetReportReceivableByAgent'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strCompanyGUID: options.strCompanyPartnerGUID
                        , strPayableBookingItemGUID: null
                        , strFilterAgentHostName: null
                        , strFilterBookingCode: null
                        , strFilterGroupName: null
                        , dtmFilterDateFrom: null
                        , dtmFilterDateTo: null
                        , intCurPage: 1
                        , intPageSize: 10
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                }
            }

            //---------Obj_ConfigLang
            //---------Arr_ConfigLang
            //---------Is_ConfigLang
            //---------Int_ConfigLang
            //---------Str_ConfigLang

            //---------
            var Obj_Filter = {}       // Biến lọc
            var Arr_ListTbl = []
            // var Obj_FormInput = {}

            var Obj_FN_Main = {}
            //---------


            GetMainPanel()
            function GetMainPanel() {

                var objPanel = {                 // Khai báo các thành phần của panel
                    pnMain: {
                        tag: 'div', attr: 'class=""'
                        , childTags: [{ div: 'class="row"' }]
                        //--------------GETLIST     // Khai báo các tên thẻ con và thuôc tính của chúng
                        , pnFormFilter: { tag: 'div', attr: 'class="col-md-12 pn-padding-b-15"' }
                        , pnTable: { tag: 'div', attr: 'class="col-md-12"' }
                        //--------------END - GETLIST
                    }
                }

                var objEvtPanel = {}

                objEvtPanel.pnFormFilter = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn


                    var strHtml = ''

                    strHtml += '<div class="pnForm" style="float: left;"></div>'
                    strHtml += '<div class="pnTotalPrice" style="float: right; padding: 15px; border: 1px solid #848484; border-radius: 1em;">'
                    strHtml += '<table style="display: inline-table;">'
                    strHtml += '<tr>'
                    strHtml += '<td><b>Tổng tiền nhận được: </b> </td><td><b class="txt-primary txtTotalPrice" style="font-size: 16px;"></b></td>'
                    strHtml += '</tr>'
                    strHtml += '</table>'
                    strHtml += '</div>'
                    $(IdOrClass_Pn).html(strHtml)


                    var objInput = {
                        strFilterAgentHostName: {
                            title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                            , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Tên Nhà cung cấp" style="padding-left:15px"' }
                        },
                        strFilterBookingCode: {
                            title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                            , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Mã Booking" style="padding-left:15px"' }
                        },
                        strFilterGroupName: {
                            title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                            , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Group Name" style="padding-left:15px"' }
                        },
                        dtmFilterDateFrom_dtmFilterDateTo: {
                            title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                            , datePickerRange: { todayHighlight: true, format: 'dd/mm/yyyy', weekStart: 1, startDate: null, endDate: null, diffmin: 1 }
                        },
                    }

                    pngPn.getFormHorizontal({
                        objInput: objInput
                        , idOrClass: IdOrClass_Pn + ' .pnForm'
                        , objDetail: {}
                        , classEx: 'bg-white pn-round-1em'
                        , attr: 'style="border: 1px solid #D6D6D6;display:inline-flex"'
                        , strHtmlBtn: '<button id="btnFilter" class="btn bg-primary txt-white pn-round-1em pn-round-t-l-0 pn-round-b-l-0"><i class="fa fa-search"></i></button>'
                    })
                    $('.input-daterange input', IdOrClass_Pn).css('border', 'none').css('width', '100px')
                    $('.input-group-addon', IdOrClass_Pn).css('border', 'none')
                    $(IdOrClass_Pn).DefaultButton(IdOrClass_Pn + ' #btnFilter')
                    $(IdOrClass_Pn + ' #btnFilter').click(function () {
                        pngPn.getForm({
                            action: 2,
                            objInput: objInput,
                            idOrClass: IdOrClass_Pn,
                            OnChkSuccess: chkSuccess
                        })
                        function chkSuccess(objRtn) {
                            Obj_Filter = $.pngExtendObj(Obj_Filter, objRtn)
                            Obj_FN_Main.pnMain('pnTable')


                        }
                    })
                }

                objEvtPanel.pnTable = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn
                    //---------ObjConfigLang
                    //---------ArrConfigLang
                    //---------IsConfigLang
                    //---------IntConfigLang
                    //---------StrConfigLang

                    pngPn.getTable2({
                        objApi: ObjList_Api.GetReportReceivableByAgent
                        , objParams_Cus: Obj_Filter
                        , editRlt: function (value, key) {

                            value['dtmDateFrom_View'] = $.pngFormatDateTime(value['dtmDateFrom'])
                            value['dtmDateTo_View'] = $.pngFormatDateTime(value['dtmDateTo'])
                            value['dblPriceTotal_View'] = $.pngFormatPrice(value['dblPriceTotal'])
                            value['dblPayableAmount_View'] = $.pngFormatPrice(value['dblPayableAmount'])


                            var strUrl = coreLoadPage.getUrlHost()
                            strUrl = $.pngGetQSVal('cname', $.pngGetQSVal('cname'), strUrl)
                            strUrl = $.pngGetQSVal('page', 'bookingdetail', strUrl)
                            strUrl = $.pngGetQSVal('BKID', value.strBookingGUID, strUrl)
                            value['strOrderBookingCode_View'] = '<a href="' + strUrl + '" target="_BookingDetail">' + value['strOrderAgentHostCode'] + '/' + (value['strGroupName'] || '') + '</a>'
                        }
                        , objCols: {

                            No: { name: '<span langkey="sys_Txt_No"></span>' }
                            , strCompanyName: { name: 'Tên Nhà cung cấp' }
                            , strOrderBookingCode_View: { name: 'Mã Booking/Group Name' }
                            , dtmDateFrom_View: { name: 'Ngày bắt đầu' }
                            , dtmDateTo_View: { name: 'Ngày kết thúc' }
                            , intTotalPax: { name: 'Total Pax' }
                            , dblPriceTotal_View: { name: 'Tổng giá' }
                            , dblPayableAmount_View: { name: 'Số tiền nhận được' }
                            , strPayableStatusName: { name: 'Trang thái trả tiền' }

                        }
                        // ,editRltArr:function(){}
                        , changeCkbMaster: function (_IsChecked, _intRowID, _arrList) {
                            // if (_IsChecked)
                            //     $(IdOrClass_Pn + ' tr[row=' + _intRowID + '] td').css('background', '#E7EEFB')
                            // else
                            //     $(IdOrClass_Pn + ' tr[row=' + _intRowID + '] td').removeAttr('style')


                            // if($(IdOrClass_Pn+' input[chkboxMaster="true"]:checked').length == 0){
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit>span.intITs").text('')
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit").hide()
                            // }else{
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit>span.intITs").text(' (' + $(IdOrClass_Pn+' input[chkboxMaster="true"]:checked').length + ')')
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit").show()
                            // }

                            Arr_ListTbl = _arrList
                        }
                        , customEvent: function (_iOrClass_Pn) {
                            var dblSumPayableAmount = 0
                            if (Arr_ListTbl.length)
                                dblSumPayableAmount = Arr_ListTbl[0].dblSumPayableAmount

                            $('.txtTotalPrice').html($.pngFormatPrice(dblSumPayableAmount))


                        }
                        // ,changeInput:function(){}
                        , IsViewCheckBoxMain: false
                        , idOrClass: IdOrClass_Pn
                    })

                }

                // ===================================

                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })


            }



        }


        $.ModulePage_UserDetail_Report2 = function (options) {
            var defaults = {
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strUserGUID,
                strCompanyGUID: JSON.parse(png.ArrLS.UserDetail.get()).strCompanyGUID,
                idOrClass: '',
            }
            options = $.extend(defaults, options);

            var IdOrClass_Main = options.idOrClass

            var ObjList_Api = {
                GetReportCommissionByAgentHost: {
                    strApiLink: 'api/booking/GetReportCommissionByAgentHost'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strCompanyGUID: null
                        , strPayableBookingItemGUID: null
                        , strFilterAgentName: null
                        , strFilterBookingCode: null
                        , strFilterGroupName: null
                        , dtmFilterDateFrom: null
                        , dtmFilterDateTo: null
                        , intPaymentStatusID: '2,3'
                        , intAgentHostPaymentTypeID: 2
                        , strPartnerCompanyGUID: options.strCompanyGUID
                        , strPartnerMemberGUID: (options.strCompanyGUID ? null : options.strUserGUID)
                        , strPaidBookingItemGUID: null
                        , intCurPage: 1
                        , intPageSize: 10
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                },


                GetListPaidBookingItem: {
                    strApiLink: 'api/payrcvbooking/GetListPaidBookingItem'
                    , objParams: {
                        strUserGUID: options.strUserGUID,
                        strPaidBookingItemGUID: null,
                        strCompanyGUID: null,
                        strAgentCode: JSON.parse(png.ArrLS.UserDetail.get()).strAgentCode,
                        IsPaid: 1,
                        IsAgentConfirmed: 0,
                        intCurPage: 1,
                        intPageSize: 10,
                        strOrder: null,
                        tblsReturn: '[0]',
                    }
                },


                UpdPaidBookingItem: {
                    strApiLink: 'api/payrcvbooking/UpdPaidBookingItem'
                    , objParams: {
                        strUserGUID: options.strUserGUID,
                        strPaidBookingItemGUID: null,
                        strPaidTitle: null,
                        strPaidDescription: null,
                        intPaymentMethodID: null,
                        strCompanyBankAccountGUID: null,
                        IsAgentConfirmed: 1,
                        IsPaid: null,
                    }
                },
            }



            var ObjList_ComboValue = {
                Arr_AgentHostPaymentType: {
                    strTableName: 'AB22'             // Bảng sử dụng để get dữ liệu
                    , strFeildSelect: 'AB22_AgentHostPaymentTypeID AS intID,AB22_AgentHostPaymentTypeName AS strName' // Trường cần lựa chọn
                    , strWhere: 'WHERE IsActive = 1'      // Điều kiện
                }
            }

            // var ObjList_ComboValue = {
            //     Arr_ValCode:{
            //         strCombocode:''
            //     }
            //     ,Arr_SQL:{
            //         strTableName:''
            //         ,strFeildSelect:' AS intID, AS strName'
            //         ,strWhere:'WHERE IsActive = 1'
            //     }
            // }

            //---------Obj_ConfigLang
            //---------Arr_ConfigLang
            //---------Is_ConfigLang
            //---------Int_ConfigLang
            //---------Str_ConfigLang

            var Arr_AgentHostPaymentType = []
            var Int_TotalChecked = 0

            var Arr_ListTbl = []
            var Obj_Filter = {}
            var Obj_FN_Main = {}



            png.postListApiGetValue({           // Post list các Api phía trên và lấy về dữ liệu
                objList_ComboValue: ObjList_ComboValue // Tên các Object api dropdownlist đã khai báo phía trên
                , objListComboValue_RtnVal: {    // Giá trị nhận về từ dropdownlist
                    'Arr_AgentHostPaymentType': {
                        objParams_Cus: {

                        },
                        OnSuccess: function (data) {
                            Arr_AgentHostPaymentType = data   // Dữ liệu trả về từ dropdownlist trên
                        }
                    }
                }
                , OnSuccessList: function (data) {      // Hàm thực hiện khi thành công tất cả các api trên
                    GetMainPanel()
                }
            })

            // GetMainPanel()
            function GetMainPanel() {
                var objPanel = {
                    pnMain: {
                        tag: 'div', attr: '', childTags: [{ div: 'class="row"' }]
                        // ,pnTit:{tag:'div',attr:'class="col-md-12 pn-margin-t-b-30"'}
                        , pnContent: { tag: 'div', attr: '' }

                    }
                }
                var objEvtPanel = {}
                objEvtPanel.pnTit = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''
                    strHtml += '<h1 style="display:inline-block;float: left;"><b>Báo cáo khoản đã duyệt</b></h1>'
                    strHtml += '<button class="btn btn-texticon btn-default" id="btnVideoHelper" style="float: left;margin-left:15px"><i class="fa fa-question-circle"></i><span><i class="fa fa-film"></i></span></button>'
                    $(IdOrClass_Pn).html(strHtml)

                    coreLoadPage.viewVideoHelper({
                        strUserGUID: options.strUserGUID
                        , strTravelHelperSubModuleCode: ''
                        , intLangID: $.pngGetLangID()
                        , idOrClassBtn: '#btnVideoHelper'
                    })
                }

                objEvtPanel.pnContent = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn
                    GetTotalPaid()

                    var strHtml = ''
                    strHtml += '<div>'
                    strHtml += '<div id="pnTabList"></div>'
                    strHtml += '<div id="pnTabCnt" class="bg-white pn-round-1em pn-round-t-l-0 pn-round-t-r-0 pn-padding-15 pn-margin-b-30"></div>'
                    strHtml += '</div>'
                    $(IdOrClass_Pn).html(strHtml)


                    var ObjListTab = {
                        'com-checking': {
                            name: 'Chờ duyệt', isDefault: true,
                            OnClick: function () {
                                GetTab_Checking({
                                    idOrClass: IdOrClass_Pn + ' #pnTabCnt',
                                    OnSuccess: function () {

                                    },
                                })
                            }
                        },
                        'com-paid': {
                            name: 'Kiểm tra các khoản thanh toán <span class="txtTotalPaid"></span>', isDefault: false,
                            OnClick: function () {
                                GetTotalPaid()
                                GetTab_Paid({
                                    idOrClass: IdOrClass_Pn + ' #pnTabCnt',
                                    OnSuccess: function () {

                                    },
                                })
                            }
                        },
                    }


                    pngElm.getTabs({
                        idOrClassPnTab: IdOrClass_Pn + ' #pnTabList'
                        , arrTab: ObjListTab
                        , IsPushUrl: true
                        // ,strQueryName:'tab'
                    })



                }
                //==============================
                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })


                function GetTotalPaid() {
                    png.postListApiGetValue({           // Post list các Api phía trên và lấy về dữ liệu
                        objList_Api: ObjList_Api
                        , objListApi_RtnVal: {           // Giá trị nhận về từ API
                            'GetReportCommissionByAgentHost': {               // Tên api tương ứng với giá trị trả về
                                objParams_Cus: {
                                    tblsReturn: '[2]'
                                }
                                , OnSuccess: function (data) {
                                    var obj = JSON.parse(data)[2][0]
                                    Int_TotalChecked = obj.intTotalPaidBookingItem
                                    $('#pnContent .txtTotalPaid').html('(' + Int_TotalChecked + ')')
                                    // return JSON.parse(data)[0]   // Dữ liệu trả về từ api trên
                                }
                            }
                        }
                    })
                }

            }

            function GetTab_Checking(_Opt) {
                var Dft = {
                    idOrClass: '',
                    OnSuccess: function () {

                    }
                }
                _Opt = $.extend(Dft, _Opt);

                var IdOrClass_Main = _Opt.idOrClass


                //---------Obj_XXX      // Khai báo các biến dùng chung cho cả hàm
                //---------Arr_XXX
                //---------Is_XXX
                //---------Int_XXX
                //---------Str_XXX



                //------------------- Khái báo biển chính của giao diện
                var Obj_Filter_Dtl = {}
                var Obj_Filter = {
                    intAgentHostPaymentTypeID: null
                }

                // var Obj_FormInput = {}
                var Arr_ListTbl = []

                var Obj_FN_Main = {}
                //-------------------


                GetMainPanel()
                function GetMainPanel() {

                    var objPanel = {                 // Khai báo các thành phần của panel
                        pnMain: {
                            tag: 'div', attr: 'class=""'
                            , childTags: [{ div: 'class="row"' }]
                            //--------------GETLIST     // Khai báo các tên thẻ con và thuôc tính của chúng
                            , pnFormFilter: { tag: 'div', attr: 'class="col-md-12 pn-padding-b-15"' }
                            , pnTable: { tag: 'div', attr: 'class="col-md-12"' }
                            //--------------END - GETLIST
                        }
                    }

                    var objEvtPanel = {}

                    objEvtPanel.pnFormFilter = function (_idOrClassPn) {
                        var IdOrClass_Pn = _idOrClassPn

                        var arrAgentHostPaymentType_Ddl = $.pngGetArrComboValue(Arr_AgentHostPaymentType, 'intID', 'strName')

                        arrAgentHostPaymentType_Ddl.unshift({ '': 'Chọn loại hoàn trả' })

                        var objInput = {
                            intAgentHostPaymentTypeID: {
                                title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                                , input: { type: 'select', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'style="padding-left:15px"' }
                                , dropDown: { arrList: arrAgentHostPaymentType_Ddl }
                            },
                            strFilterAgentName: {
                                title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                                , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Tên Đại lý mua" style="padding-left:15px"' }
                            },
                            strFilterBookingCode: {
                                title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                                , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Mã Booking/Group Name" style="padding-left:15px"' }
                            },
                            // strFilterGroupName: {
                            //     title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                            //     , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Group Name" style="padding-left:15px"' }
                            // },
                            dtmFilterDateFrom_dtmFilterDateTo: {
                                title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                                , datePickerRange: { todayHighlight: true, format: 'dd/mm/yyyy', weekStart: 1, startDate: null, endDate: null, diffmin: 1 }
                            },
                        }

                        pngPn.getFormHorizontal({
                            objInput: objInput
                            , idOrClass: IdOrClass_Pn
                            , objDetail: {}
                            , classEx: 'bg-white pn-round-1em'
                            , attr: 'style="border: 1px solid #D6D6D6;display:inline-flex"'
                            , strHtmlBtn: '<button id="btnFilter" class="btn bg-primary txt-white pn-round-1em pn-round-t-l-0 pn-round-b-l-0"><i class="fa fa-search"></i></button>'
                        })
                        $('.input-daterange input', IdOrClass_Pn).css('border', 'none').css('width', '140px')
                        $('.input-group-addon', IdOrClass_Pn).css('border', 'none')
                        $(IdOrClass_Pn).DefaultButton(IdOrClass_Pn + ' #btnFilter')
                        $(IdOrClass_Pn + ' #btnFilter').click(function () {
                            pngPn.getForm({
                                action: 2,
                                objInput: objInput,
                                idOrClass: IdOrClass_Pn,
                                OnChkSuccess: chkSuccess
                            })
                            function chkSuccess(objRtn) {
                                Obj_Filter = $.pngExtendObj(Obj_Filter, objRtn)
                                Obj_FN_Main.pnMain('pnTable')


                            }
                        })
                    }


                    objEvtPanel.pnTable = function (_idOrClassPn) {
                        var IdOrClass_Pn = _idOrClassPn
                        //---------ObjConfigLang
                        //---------ArrConfigLang
                        //---------IsConfigLang
                        //---------IntConfigLang
                        //---------StrConfigLang

                        $("#pnListBtn .pnViewBtn").hide();

                        pngPn.getTable2({
                            objApi: ObjList_Api.GetReportCommissionByAgentHost
                            , objParams_Cus: $.pngExtendObj(Obj_Filter, {
                                intPaymentStatusID: '2,3'
                            })
                            , editRlt: function (value, key) {

                                value['strOrderAgentHostCode_View'] = '<a href="/?page=bookingdetail&BKID=' + value['strBookingGUID'] + '" target="_Booking">' + value['strOrderAgentHostCode'] + '/' + value['strGroupName'] + '</a>'


                                // value['dtmDateFromTo_View'] = $.pngFormatDateTime(value['dtmDateFrom'],'DD MMM YYYY') + ' - ' +  $.pngFormatDateTime(value['dtmDateTo'],'DD MMM YYYY')
                                // value['dtmDateTo_View'] = $.pngFormatDateTime(value['dtmDateTo'])
                                value['dblPriceTotal_View'] = $.pngFormatPrice(value['dblPriceTotal'])
                                value['dblPayableAmount_View'] = $.pngFormatPrice(value['dblPayableAmount'])
                                value['dblPayableBalance_View'] = $.pngFormatPrice(value['dblPayableBalance'])

                                if (!value.IsManual) {
                                    value['strServiceName_View'] = `
                                            <p>${value['strServiceName']}</p>
                                            <p>
                                                <div><b>Tên nhà cung cấp</b></div>
                                                <div>${value['strCompanyName']}</div>
                                            </p>
                                            <p>
                                                <div><b>Mã Booking/Group Name</b></div>
                                                <div>${value['strOrderAgentHostCode_View']}</div>
                                            </p>
                                        `

                                    value['dtmDateFromTo_View'] = $.pngFormatDateTime(value['dtmDateFrom'], 'DD MMM YYYY') + ' - ' + $.pngFormatDateTime(value['dtmDateTo'], 'DD MMM YYYY')
                                    value['intTotalPax_View'] = value['intTotalPax']
                                    value['strPaymentStatusName_View'] = value['strPaymentStatusName']
                                    value['dtmDateDeadlineToCheck_View'] = $.pngFormatDateTime(value['dtmDateDeadlineToCheck'], 'DD MMM YYYY')
                                } else {
                                    value['strServiceName_View'] = `
                                                <p>-->HIệu chỉnh (${value['strPayableBookingItemName']})</p>
                                                <p>
                                                    <div>${value['strRemark']}</div>
                                                </p>
                                            `
                                }
                            }
                            , objCols: {

                                No: { name: '<span langkey="sys_Txt_No"></span>' }
                                // , strCompanyName: { name: 'Tên nhà cung cấp' }
                                // , strOrderAgentHostCode_View: { name: 'Mã Booking/Group Name' }
                                , strServiceName_View: { name: 'Tên dịch vụ' }
                                , strAgentHostPaymentTypeName: { name: 'Loại hoàn trả' }
                                // , strGroupName: { name: 'Group Name' }
                                , dtmDateFromTo_View: { name: 'Ngày bắt đầu - Ngày kết thúc' }
                                // , dtmDateTo_View: { name: 'Ngày kết thúc' }
                                , intTotalPax_View: { name: 'Tổng số Pax' }
                                // , dblPriceTotal_View: { name: 'Tổng giá'}
                                , strPaymentStatusName: { name: 'Trạng thái' }
                                , IsHold: { name: 'Is Hold' }
                                , dtmDateDeadlineToCheck_View: { name: 'Deadline' }
                                , dblPayableBalance_View: { name: 'Tổng giá khả dụng' }
                                // , dblPayablePaid_View: { name: 'Số tiền đã trả'}

                            }
                            // ,editRltArr:function(){}
                            , changeCkbMaster: function (_IsChecked, _intRowID, _arrList) {
                                // if (_IsChecked)
                                //     $(IdOrClass_Pn + ' tr[row=' + _intRowID + '] td').css('background', '#E7EEFB')
                                // else
                                //     $(IdOrClass_Pn + ' tr[row=' + _intRowID + '] td').removeAttr('style')


                                // if($(IdOrClass_Pn+' input[chkboxMaster="true"]:checked').length == 0){
                                //     $("#pnListBtn .pnViewBtn span.intITs").text('')
                                //     $("#pnListBtn .pnViewBtn").hide()
                                // }else{
                                //     $("#pnListBtn .pnViewBtn span.intITs").text(' (' + $(IdOrClass_Pn+' input[chkboxMaster="true"]:checked').length + ')')
                                //     $("#pnListBtn .pnViewBtn").show()
                                // }

                                Arr_ListTbl = _arrList
                            }
                            , customEvent: function (_iOrClass_Pn) {

                            }
                            // ,changeInput:function(){}
                            , IsViewCheckBoxMain: false
                            , idOrClass: IdOrClass_Pn
                        })

                    }

                    // ===================================

                    pngPn.getPanelHtml({            // Get ra panel dạng html
                        objPanel: objPanel
                        , objEvtPanel: objEvtPanel
                        , idOrClass: IdOrClass_Main  // Id or class chính
                        , OnChangeIdPn: function (_Fn) {
                            Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                        }
                    })


                }
            }


            function GetTab_Paid(_Opt) {
                var Dft = {
                    idOrClass: '',
                    OnSuccess: function () {

                    }
                }
                _Opt = $.extend(Dft, _Opt);

                var IdOrClass_Main = _Opt.idOrClass


                //---------Obj_XXX      // Khai báo các biến dùng chung cho cả hàm
                //---------Arr_XXX
                //---------Is_XXX
                //---------Int_XXX
                //---------Str_XXX

                var Arr_ListAgent = []

                var Int_TotalPaidBookingItem = 0

                //------------------- Khái báo biển chính của giao diện
                var Obj_Filter_Dtl = {}
                var Obj_Filter = {}

                // var Obj_FormInput = {}
                var Arr_ListTbl = []

                var Obj_FN_Main = {}
                //-------------------


                GetMainPanel()
                function GetMainPanel() {

                    var objPanel = {                 // Khai báo các thành phần của panel
                        pnMain: {
                            tag: 'div', attr: 'class=""'
                            , childTags: [{ div: 'class="row"' }]
                            //--------------GETLIST     // Khai báo các tên thẻ con và thuôc tính của chúng
                            // ,pnFormFilter:{tag:'div',attr:'class="col-md-12 pn-padding-b-15"'}
                            // ,pnForm:{tag:'div',attr:'class="col-md-12 pn-padding-b-15"'}
                            // ,pnListBtn:{tag:'div',attr:'class="col-md-12"'}
                            , pnTable: { tag: 'div', attr: 'class="col-md-12"' }
                            //--------------END - GETLIST
                        }
                    }

                    var objEvtPanel = {}
                    // Module_ReportPayable_PopUpListConfirmPay

                    objEvtPanel.pnFormFilter = function (_idOrClassPn) {
                        var IdOrClass_Pn = _idOrClassPn
                        if (Arr_ListAgent.length) {
                            var objInput = {
                                // strFilterAgentName: {
                                //     title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                                //     , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Tên Đại lý mua" style="padding-left:15px"' }
                                // },
                                strAgentGUID: {
                                    title: '', attr: ' style="border-right:1px solid #D6D6D6;" ', isRequire: false, IsRtn: true
                                    , input: { type: 'select', classEx: 'form-control  pn-border-none pn-shadow-none bg-none', attr: '' }
                                    , dropDown: { arrList: $.pngGetArrComboValue(Arr_ListAgent, 'strAgentGUID', 'strAgentName') }//-------------------$.pngGetArrComboValue(ArrList,'intID','strName')
                                },
                                strFilterBookingCode: {
                                    title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                                    , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Mã Booking" style="padding-left:15px"' }
                                },
                                strFilterGroupName: {
                                    title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                                    , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'maxlength="30" placeholder="Group Name" style="padding-left:15px"' }
                                },
                                dtmFilterDateFrom_dtmFilterDateTo: {
                                    title: '', attr: 'style="border-right:1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                                    , datePickerRange: { todayHighlight: true, format: 'dd/mm/yyyy', weekStart: 1, startDate: null, endDate: null, diffmin: 1 }
                                },
                            }

                            pngPn.getFormHorizontal({
                                objInput: objInput
                                , idOrClass: IdOrClass_Pn
                                , objDetail: {}
                                , classEx: 'bg-white pn-round-1em'
                                , attr: 'style="border: 1px solid #D6D6D6;display:inline-flex"'
                                , strHtmlBtn: '<button id="btnFilter" class="btn bg-primary txt-white pn-round-1em pn-round-t-l-0 pn-round-b-l-0"><i class="fa fa-search"></i></button>'
                            })
                            $('.input-daterange input', IdOrClass_Pn).css('border', 'none').css('width', '140px')
                            $('.input-group-addon', IdOrClass_Pn).css('border', 'none')
                            $(IdOrClass_Pn).DefaultButton(IdOrClass_Pn + ' #btnFilter')
                            $(IdOrClass_Pn + ' #btnFilter').click(function () {
                                pngPn.getForm({
                                    action: 2,
                                    objInput: objInput,
                                    idOrClass: IdOrClass_Pn,
                                    OnChkSuccess: chkSuccess
                                })
                                function chkSuccess(objRtn) {

                                    objRtn = $.pngExtendObj(objRtn, Arr_ListAgent.filter(function (item) { return item.strAgentGUID.toUpperCase() == objRtn.strAgentGUID.toUpperCase() })[0])

                                    Obj_Filter = $.pngExtendObj(Obj_Filter, objRtn)

                                    if (Obj_FN_Main.pnMain)
                                        Obj_FN_Main.pnMain('pnTable')
                                }
                            }).click()
                        }

                    }

                    objEvtPanel.pnForm = function (_idOrClassPn) {
                        var IdOrClass_Pn = _idOrClassPn

                        var strHtml = ''
                        strHtml += `
                                    <div>
                                        <a action="ListConfirmPay">Danh sách xác nhận thanh toán (${Int_TotalPaidBookingItem})</a>
                                    </div>`
                        $(IdOrClass_Pn).html(strHtml)

                        $('a', IdOrClass_Pn).click(function () {
                            var action = $(this).attr('action')
                            if (action == 'ListConfirmPay') {
                                $.Module_ReportPayable_PopUpListConfirmPay({
                                    OnSuccess: function () {
                                        location.reload()
                                    }
                                })
                            }
                        })

                    }

                    objEvtPanel.pnTable = function (_idOrClassPn) {
                        var IdOrClass_Pn = _idOrClassPn
                        //---------ObjConfigLang
                        //---------ArrConfigLang
                        //---------IsConfigLang
                        //---------IntConfigLang
                        //---------StrConfigLang
                        pngPn.getTable2({
                            objApi: ObjList_Api.GetListPaidBookingItem
                            , objParams_Cus: {}
                            , editRltArr: function (_arr) {
                                return _arr
                            }
                            , editRlt: function (value, key) {
                                value['strPaidTitle_View'] = '<a action="Edit">' + value['strPaidTitle'] + '</a>'
                                value['dblPaidAmount_View'] = $.pngFormatPrice(value['dblPaidAmount'])
                                // value['No']=(key+1)
                                value['strHtmlAction'] = ''
                                value['strHtmlAction'] += '<button class="btn bg-primary" action="Confirm" intRowID="' + key + '">Xác nhận</button>'
                            }
                            , objCols: {

                                No: { name: '<span langkey="sys_Txt_No"></span>' }
                                , strCompanyName: { name: 'Tên nhà cung cấp' }
                                , strPaidTitle_View: { name: 'Tiêu đề' }
                                , dblPaidAmount_View: { name: 'Tổng giá' }
                                , strHtmlAction: { name: '<span langkey="sys_Txt_Action"></span>' }

                            }
                            , changeCkbMaster: function (_IsChecked, _intRowID, _arrList) {
                                // if (_IsChecked)
                                //     $(IdOrClass_Pn + ' tr[row=' + _intRowID + '] td').css('background', '#E7EEFB')
                                // else
                                //     $(IdOrClass_Pn + ' tr[row=' + _intRowID + '] td').removeAttr('style')


                                // if(dblTotalPrice == 0){
                                //     $("#pnListBtn .pnViewBtn span.intITs").text('')
                                //     $("#pnListBtn .pnViewBtn").hide()
                                // }else{
                                //     $("#pnListBtn .pnViewBtn span.intITs").html(' (' + $.pngFormatPrice(dblTotalPrice) + ')')
                                //     $("#pnListBtn .pnViewBtn").show()
                                // }

                                Arr_ListTbl = _arrList
                            }
                            , customEvent: function (_iOrClass_Pn) {

                                $('a', _iOrClass_Pn).click(function () {
                                    var action = $(this).attr('action')
                                    var intRowID = $(this).parents('tr').attr('row')

                                    if (action == 'Edit') {
                                        $.Module_reportcomcheck_PopUpConfirmPaid({
                                            objDetail: Arr_ListTbl[intRowID]
                                            , OnSuccess: function () {
                                                location.reload()
                                            }
                                        })
                                    }

                                })

                                $('button', _iOrClass_Pn).click(function () {
                                    var action = $(this).attr('action')
                                    var intRowID = $(this).parents('tr').attr('row')

                                    if (action == 'Confirm') {
                                        $.Confirm({
                                            strContent: 'Bạn chắc muốn xác nhận chứ?'
                                            , OnSuccess: function () {

                                                png.postListApiGetValue({
                                                    objList_Api: ObjList_Api
                                                    , objListApi_RtnVal: {
                                                        'UpdPaidBookingItem': {
                                                            objParams_Cus: $.pngExtendObj(Arr_ListTbl[intRowID], {
                                                                IsAgentConfirmed: 1
                                                            })
                                                            , OnSuccess: function (data) {

                                                                location.reload()
                                                                $.Confirm({
                                                                    strContent: 'Xác nhân thành công!'
                                                                })
                                                            }
                                                        }
                                                    }
                                                })

                                            }
                                        })
                                    }

                                })

                            }
                            // ,changeInput:function(){}
                            , IsViewCheckBoxMain: false
                            , idOrClass: IdOrClass_Pn
                        })

                    }

                    // ===================================

                    pngPn.getPanelHtml({            // Get ra panel dạng html
                        objPanel: objPanel
                        , objEvtPanel: objEvtPanel
                        , idOrClass: IdOrClass_Main  // Id or class chính
                        , OnChangeIdPn: function (_Fn) {
                            Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                        }
                    })


                }
            }


        }

        $.Module_reportcomcheck_PopUpConfirmPaid = function (options) {
            var defaults = {
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strUserGUID
                , strCompanyGUID: JSON.parse(png.ArrLS.UserDetail.get()).strCompanyGUID
                , objDetail: {}
                , OnSuccess: function () {

                }
            }
            options = $.extend(defaults, options);

            var IdOrClass_Main = ''

            var ObjList_Api = {
                GetReportCommissionByAgentHost: {
                    strApiLink: 'api/booking/GetReportCommissionByAgentHost'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strCompanyGUID: null
                        , strPayableBookingItemGUID: null
                        , strFilterAgentName: null
                        , strFilterBookingCode: null
                        , strFilterGroupName: null
                        , dtmFilterDateFrom: null
                        , dtmFilterDateTo: null
                        , intPaymentStatusID: 4
                        , intAgentHostPaymentTypeID: 2
                        , strPartnerCompanyGUID: options.strCompanyGUID
                        , strPartnerMemberGUID: (options.strCompanyGUID ? null : options.strUserGUID)
                        , strPaidBookingItemGUID: null
                        , intCurPage: 1
                        , intPageSize: 10
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                },

                GetFilterCompanyBankAccount: {
                    strApiLink: 'api/user/GetFilterCompanyBankAccount'
                    , objParams: {
                        strAgentCode: null
                        , strOrder: null
                        , strCompanyGUID: null
                        , intCurPage: null
                        , intPageSize: null
                        , strWhere: null
                        , tblsReturn: '[0]'
                    }
                },

                GetListPaidBankSlipUpload: {
                    strApiLink: 'api/payrcvbooking/GetListPaidBankSlipUpload'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strPaidBankSlipUploadGUID: null
                        , strPaidBookingItemGUID: null
                        , intCurPage: null
                        , intPageSize: null
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                },

                UpdPaidBookingItem: {
                    strApiLink: 'api/payrcvbooking/UpdPaidBookingItem'
                    , objParams: {
                        strUserGUID: options.strUserGUID,
                        strPaidBookingItemGUID: null,
                        strPaidTitle: null,
                        strPaidDescription: null,
                        intPaymentMethodID: null,
                        strCompanyBankAccountGUID: null,
                        IsAgentConfirmed: 0,
                        IsPaid: null,
                    }
                },

            }

            var ObjList_ComboValue = {
                Arr_ValCode: {
                    strCombocode: ''
                }
                , Arr_PaymentMethod: {
                    strTableName: 'MC59'
                    , strFeildSelect: 'MC59_PaymentMethodID AS intID,MC59_PaymentMethodName AS strName'
                    , strWhere: 'WHERE IsActive = 1 AND IsForCom=1'
                }
            }

            var Is_Create = false
            var Is_Edit = false
            // var Is_Duplicate = false


            var Obj_Detail = options.objDetail
            var Arr_ListTbl = options.Arr_ListTbl

            if (Arr_ListTbl && Arr_ListTbl.length) {
                Is_Create = true
            } else {
                Is_Edit = true
            }


            //---------Obj_XXX      // Khai báo các biến dùng chung cho cả hàm
            //---------Arr_XXX
            //---------Is_XXX
            //---------Int_XXX
            //---------Str_XXX

            var Arr_PaymentMethod = []

            var Arr_ListAccount = []
            var Arr_ListBankSlip = []

            //------------------- Khái báo biển chính của giao diện
            var Obj_Filter_Dtl = {}
            var Obj_Filter = {}

            var Obj_FormInput = {}

            var Obj_FN_Main = {}
            //-------------------

            if (Arr_ListTbl && Arr_ListTbl.length) {
                GetMain()
            } else {
                png.postListApiGetValue({
                    objList_Api: ObjList_Api
                    , objListApi_RtnVal: {
                        'GetReportCommissionByAgentHost': {
                            objParams_Cus: {
                                strPaidBookingItemGUID: Obj_Detail.strPaidBookingItemGUID
                            }
                            , OnSuccess: function (data) {
                                Arr_ListTbl = JSON.parse(data)[0]

                                GetMain()
                            }
                        }
                    }
                })
            }

            function GetMain() {

                png.postListApiGetValue({
                    objList_Api: ObjList_Api
                    , objListApi_RtnVal: {
                        'GetFilterCompanyBankAccount': {
                            objParams_Cus: {
                                strAgentCode: Arr_ListTbl[0].strAgentCode
                            }
                            , OnSuccess: function (data) {
                                Arr_ListAccount = JSON.parse(data)[0]

                            }
                        }
                    }
                    , OnSuccessList: function (data) {
                        GetPopUp()
                    }
                })
            }
            function GetPopUp() {


                var strTitle = 'Thông tin thanh toán'

                // if(Is_Duplicate){
                //     strTitle = pngElm.getLangKey({langkey:'sys_Btn_Duplicate'})
                // }
                pngPn.getPopUp({
                    strTitle: strTitle
                    , intTypeSize: 2//------------1 small ---2 medium ---3 large
                    , OnPanel: GetMainPanel
                    , OnClosePopUp: function () {
                        //------Chọn sự kiện khi Đóng PopUP
                    }
                })
            }

            function GetMainPanel(_IdOrClassPp, _OnClosePp) {

                IdOrClass_Main = _IdOrClassPp
                Obj_FN_Main.OnClosePp = _OnClosePp


                var objPanel = {                 // Khai báo các thành phần của panel
                    pnMain: {
                        tag: 'div', attr: 'class=""'
                        , childTags: [{ div: 'class="row"' }]
                        //--------------GETLIST     // Khai báo các tên thẻ con và thuôc tính của chúng
                        , pnForm: { tag: 'div', attr: 'class="col-md-12"' }
                        , pnListBtn: { tag: 'div', attr: 'class="col-md-12 pn-padding-t-b-15"' }
                        , pnTable: { tag: 'div', attr: 'class="col-md-12"' }
                        , pnBtn: { tag: 'div', attr: 'class="col-md-12"' }
                        //--------------END - GETLIST
                    }
                }

                var objEvtPanel = {}


                objEvtPanel.pnForm = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn


                    console.log(Obj_Detail)
                    var strTitle = 'Thanh toán Commission cho Đại lý: ' + Arr_ListTbl[0].strAgentName + ''


                    var strHtml = ''
                    // strHtml+='<div class="pn-padding-b-15">'+strTitle+'</div>'
                    strHtml += '<div class="pn-padding-b-15"><b>Tổng giá: ' + $.pngFormatPrice(Obj_Detail['dblPaidAmount']) + '</b></div>'
                    strHtml += '<div class="pnForm"></div>'
                    if (Is_Edit) {
                        strHtml += '<div class="pnBankSlip"></div>'
                    }
                    strHtml += '<div id="pnPrint" style="display:none"></div>'
                    $(IdOrClass_Pn).html(strHtml)



                    strHtml = ''
                    strHtml += '<div class="row">'
                    strHtml += `
                                    <div class="col-md-6 pn-margin-b-30">
                                        <label>Phương thức thanh toán</label>
                                        <div>${Obj_Detail.strPaymentMethodName}</div>
                                    </div>

                                `
                    if (Obj_Detail.intPaymentMethodID == 1 && Obj_Detail.strCompanyBankAccountGUID) {

                        var obj = Arr_ListAccount.filter(function (item) { return item.strCompanyBankAccountGUID.toUpperCase() == Obj_Detail.strCompanyBankAccountGUID.toUpperCase() })[0]

                        strHtml += '<div class="col-md-12  pn-margin-b-30">'
                        strHtml += '<label>Thông tin tài khoản bên nhận:</label>'
                        strHtml += '<div style="padding: 10px;border: 1px solid #ccc;border-radius: 1em;margin-bottom: 15px;">'
                        strHtml += '<b>Account Name:</b> ' + obj.strCompanyBankAccountName
                        strHtml += '<br><b>Account Code:</b> ' + obj.strCompanyBankAccountCode
                        strHtml += '<br><b>Bank Name:</b> ' + obj.strCompanyBankAccountInfo
                        strHtml += '<br><b>Bank Add:</b> ' + obj.strBankAddress
                        strHtml += '<br><b>SwiftCode:</b> ' + obj.strSwiftCode
                        strHtml += '</div>'
                        strHtml += '</div>'
                    }
                    strHtml += `
                                    <div class="col-md-12 pn-margin-b-30">
                                        <label>Tiêu đề</label>
                                        <div>${Obj_Detail.strPaidTitle}</div>
                                    </div>

                                `
                    strHtml += `
                                <div class="col-md-12  pn-margin-b-30">
                                    <label>Ghi chú</label>
                                    <div>${Obj_Detail.strPaidDescription}</div>
                                </div>

                            `

                    strHtml += '</div>'

                    $(IdOrClass_Pn + ' .pnForm').html(strHtml)




                    GetPanel_BankSlip({
                        idOrClassPn: IdOrClass_Pn + ' .pnBankSlip',
                        Obj_Detail: Obj_Detail,
                    })

                    // Arr_ListBankSlip
                }


                objEvtPanel.pnListBtn = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn



                    // $(IdOrClass_Pn+ ' #btnPayment').hide()



                }


                objEvtPanel.pnTable = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn
                    //---------ObjConfigLang
                    //---------ArrConfigLang
                    //---------IsConfigLang
                    //---------IntConfigLang
                    //---------StrConfigLang
                    $("#pnListBtn .pnViewBtn").hide();

                    pngPn.getTable2({
                        objApi: null
                        , objParams_Cus: null
                        , editRltArr: function () {
                            return Arr_ListTbl
                        }
                        , editRlt: function (value, key) {

                            value['No'] = (key + 1)
                            value['strOrderAgentHostCode_View'] = '<a href="/?page=bookingdetail&BKID=' + value['strBookingGUID'] + '" target="_Booking">' + value['strOrderAgentHostCode'] + '/' + value['strGroupName'] + '</a>'



                            value['strServiceName_View'] = `
                                        <p>${value['strServiceName']}</p>
                                        <p>
                                            <div><b>Mã Booking/Group Name</b></div>
                                            <div>${value['strOrderAgentHostCode_View']}</div>
                                        </p>
                                    `

                            value['dtmDateFromTo_View'] = $.pngFormatDateTime(value['dtmDateFrom'], 'DD MMM YYYY') + ' - ' + $.pngFormatDateTime(value['dtmDateTo'], 'DD MMM YYYY')
                            // value['dtmDateTo_View'] = $.pngFormatDateTime(value['dtmDateTo'])
                            value['dblPriceTotal_View'] = $.pngFormatPrice(value['dblPriceTotal'])
                            value['dblPayableBalance_View'] = $.pngFormatPrice(value['dblPayableBalance'])
                            value['dblPaid_View'] = $.pngFormatPrice(value['dblPaid'])
                        }
                        , objCols: {

                            No: { name: '<span langkey="sys_Txt_No"></span>' }
                            // , strAgentName: { name: 'Tên Đại lý' }
                            // , strOrderAgentHostCode_View: { name: 'Mã Booking/Group Name' }
                            , strServiceName_View: { name: 'Tên dịch vụ' }
                            , strAgentHostPaymentTypeName: { name: 'Loại hoàn trả' }
                            // , strGroupName: { name: 'Group Name' }
                            , dtmDateFromTo_View: { name: 'Ngày bắt đầu - Ngày kết thúc' }
                            // , dtmDateTo_View: { name: 'Ngày kết thúc' }
                            , intTotalPax: { name: 'Tổng số Pax' }
                            // , dblPriceTotal_View: { name: 'Tổng giá'}
                            // , dblPayableBalance_View: { name: 'Tổng giá còn lại', strAttrTD:' style="text-align:right" '}
                            // , dblPayableAmount_View: { name: 'Tổng giá Hoa hồng'}
                            , dblPaid_View: { name: 'Số tiền đã trả', strAttrTD: ' style="text-align:right"' }
                            // , strPaymentStatusName: { name: 'Trang thái hoa hồng'}

                        }
                        , changeCkbMaster: function (_IsChecked, _intRowID, _arrList) {
                            // if (_IsChecked)
                            //     $(IdOrClass_Pn + ' tr[row=' + _intRowID + '] td').css('background', '#E7EEFB')
                            // else
                            //     $(IdOrClass_Pn + ' tr[row=' + _intRowID + '] td').removeAttr('style')


                            // if(dblTotalPrice == 0){
                            //     $("#pnListBtn .pnViewBtn span.intITs").text('')
                            //     $("#pnListBtn .pnViewBtn").hide()
                            // }else{
                            //     $("#pnListBtn .pnViewBtn span.intITs").html(' (' + $.pngFormatPrice(dblTotalPrice) + ')')
                            //     $("#pnListBtn .pnViewBtn").show()
                            // }

                            Arr_ListTbl = _arrList
                        }
                        , customEvent: function (_iOrClass_Pn) {

                        }
                        // ,changeInput:function(){}
                        , IsViewCheckBoxMain: false
                        , idOrClass: IdOrClass_Pn
                    })

                }

                objEvtPanel.pnBtn = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''
                    strHtml += '<button id="btnSave" class="btn btn-texticon bg-primary txt-white">Xác nhận</button>'
                    $(IdOrClass_Pn).html(strHtml)

                    $('#btnSave', IdOrClass_Pn).click(function () {
                        $.Confirm({
                            strContent: 'Bạn chắc muốn xác nhận chứ?'
                            , OnSuccess: function () {

                                png.postListApiGetValue({
                                    objList_Api: ObjList_Api
                                    , objListApi_RtnVal: {
                                        'UpdPaidBookingItem': {
                                            objParams_Cus: $.pngExtendObj(Obj_Detail, {
                                                IsAgentConfirmed: 1
                                            })
                                            , OnSuccess: function (data) {

                                                options.OnSuccess.call()
                                                Obj_FN_Main.OnClosePp(false, true)
                                                $.Confirm({
                                                    strContent: 'Xác nhân thành công!'
                                                })
                                            }
                                        }
                                    }
                                })

                            }
                        })

                    })
                }



                // ===================================

                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })


            }


            function GetPanel_BankSlip(_Opt) {
                var Dft = {
                    idOrClassPn: null,
                    Obj_Detail: {},
                    OnSuccess: function () {

                    }
                }
                _Opt = $.extend(Dft, _Opt);


                var IdOrClass_Main = _Opt.idOrClassPn
                var Obj_Detail = _Opt.Obj_Detail

                var Arr_ListTbl = []

                var ArrListUpd = []
                var strHtml = ''

                strHtml += `<div>
                            <b class="btnUpload"><i class="fa fa-link"></i> Các chứng từ gắn kèm</b>
                        </div>`
                strHtml += '<input type="file" id="fileUpload" style="display:none"     multiple/> '
                strHtml += '<div class="pn-padding-t-15 pnListBankSlip pnView"></div>'
                strHtml += `
                            <div class="pn-padding-t-15 pnViewUp">
                                <div class="pn-padding-t-15 pnListBankSlip2"></div
                            </div>
                        `

                $(IdOrClass_Main).html(strHtml)

                $(IdOrClass_Main + ' .pnViewUp').hide()


                GetMainPanel()


                function GetMainPanel() {

                    var IdOrClass_Pn = IdOrClass_Main + ' .pnListBankSlip'


                    pngPn.getTable2({
                        objApi: ObjList_Api.GetListPaidBankSlipUpload
                        , objParams_Cus: Obj_Detail
                        , editRltArr: function (_arr) {
                            return _arr
                        }
                        , editRlt: function (value, key) {

                            value['No'] = (key + 1)


                            value['strPaidBankSlipUploadFileName_View'] = '<a target="_blank" href="' + (value['strPathOpenFile'] || '') + png.getServerImgURL(value['strPaidBankSlipUploadFileLink']) + '">' + value['strPaidBankSlipUploadFileName'] + '</a>'

                            value['strHtmlAction'] = ''
                            value['strHtmlAction'] += '<button class="btn" action="Delete" intRowID="' + key + '"><i class="fa fa-trash"></i></button>'
                        }
                        , objCols: {

                            No: { name: '<span langkey="sys_Txt_No"></span>' }
                            , strPaidBankSlipUploadFileName_View: { name: 'Tên file' }
                            , dblPaidBankSlipUploadFileSize: { name: 'Cỡ file(MB)' }
                            // , strHtmlAction: { name: '<span langkey="sys_Txt_Action"></span>' }
                            // , strPaymentStatusName: { name: 'Trang thái hoa hồng'}

                        }
                        , changeCkbMaster: function (_IsChecked, _intRowID, _arrList) {
                            // if (_IsChecked)
                            //     $(IdOrClass_Pn + ' tr[row=' + _intRowID + '] td').css('background', '#E7EEFB')
                            // else
                            //     $(IdOrClass_Pn + ' tr[row=' + _intRowID + '] td').removeAttr('style')


                            // if(dblTotalPrice == 0){
                            //     $("#pnListBtn .pnViewBtn span.intITs").text('')
                            //     $("#pnListBtn .pnViewBtn").hide()
                            // }else{
                            //     $("#pnListBtn .pnViewBtn span.intITs").html(' (' + $.pngFormatPrice(dblTotalPrice) + ')')
                            //     $("#pnListBtn .pnViewBtn").show()
                            // }

                            Arr_ListTbl = _arrList
                        }
                        , customEvent: function (_iOrClass_Pn) {
                            $(_iOrClass_Pn + ' button').click(function () {
                                var intRowID = $(this).attr('intRowID')
                                var action = $(this).attr('action')

                                if (action == 'Delete') {
                                    $.Confirm({
                                        strContent: '<span langkey="sys_Cfm_AYS"></span>'
                                        , OnSuccess: function () {

                                            png.postListApiGetValue({
                                                objList_Api: ObjList_Api
                                                , objListApi_RtnVal: {
                                                    'DelPaidBankSlipUpload': {
                                                        objParams_Cus: Arr_ListTbl[intRowID]
                                                        , OnSuccess: function (data) {
                                                            GetMainPanel()
                                                            $.Confirm({ strContent: '<span langkey="sys_Cfm_DelSuccess"></span>' });
                                                        }
                                                    }
                                                }
                                            })

                                        }
                                    })
                                }
                            })
                        }
                        // ,changeInput:function(){}
                        , IsViewCheckBoxMain: false
                        , idOrClass: IdOrClass_Pn
                    })



                }



            }

        }


        $.ModulePage_UserDetail_Booking = function (options) {
            var defaults = {
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strPassengerGUID,
                OnSuccess: function () {
                }
            }
            options = $.extend(defaults, options);



            var ObjList_Api = {
                GetListBooking: {
                    strApiLink: 'api/booking/GetListBooking'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingCode: null
                        , strFilterDateFrom: null
                        , strFilterDateTo: null
                        , intOrderStatusID: null
                        , intPaymentStatusID: null
                        , intBookingStatusID: null
                        , intCurPage: 1
                        , intPageSize: 10
                        , strBookingGUID: null
                        , isPartner: 1
                        , tblsReturn: '[0]'
                    }
                }
                , GetListBookingAgentHostByTraveller: {
                    strApiLink: 'api/public/traveller/GetListBookingAgentHostByTraveller'
                    , objParams: {
                        strPassengerGUID: options.strUserGUID
                        , strBookingByAgentHostGUID: null
                        , strOrderAgentHostCode: null
                        , strFilterDateFrom: null
                        , strFilterDateTo: null
                        , intOrderStatusID: null
                        , intPaymentStatusID: null
                        , intBookingStatusID: null
                        , strConfirmedCode: null

                        , intCurPage: 1
                        , intPageSize: 10
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                }
                , GetPaymentBookingAmountAndPeriod: {
                    strApiLink: 'api/booking/GetPaymentBookingAmountAndPeriod'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingGUID: null
                        , dtmDateDay: null
                    }
                }
                , GetListBookingPaymentTermNoPaid: {
                    strApiLink: 'api/booking/GetListBookingPaymentTermNoPaid'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingGUID: null
                    }
                }
                , GetListBookingInvoicePaid: {
                    strApiLink: 'api/booking/GetListBookingInvoicePaid'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingGUID: null
                    }
                }
                , GetListCompanyBankAccount: {
                    strApiLink: 'api/user/GetListCompanyBankAccount'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strCompanyBankAccountGUID: null
                        , tblsReturn: '[0]'
                    }
                }


                , GetListPayableBookingItem: {
                    strApiLink: 'api/payrcvbooking/GetListPayableBookingItem'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strPayableBookingItemGUID: null
                        , strOrderBookingGUID: null
                        , strBookingGUID: null
                        , IsPaid: null
                        , intCurPage: null
                        , intPageSize: null
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                }

                , GetBookingItemForConfirmedCode: {
                    strApiLink: 'api/booking/GetBookingItemForConfirmedCode'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strConfirmedCode: null,
                    }
                }
            }


            var ObjList_ComboValue = {
                Arr_OrderStatus_Ddl: {
                    strTableName: 'OB02'
                    , strFeildSelect: 'OB02_OrderStatusID AS intID,OB02_OrderStatusName AS strName'
                    , strWhere: 'WHERE IsActive = 1 ORDER BY OB02_Order'
                }
                , Arr_PaymentStatus_Ddl: {
                    strTableName: 'OB04'
                    , strFeildSelect: 'OB04_PaymentStatusID AS intID,OB04_PaymentStatusName AS strName'
                    , strWhere: 'WHERE IsActive = 1 ORDER BY OB04_Order'
                }
            }


            var Arr_OrderStatus_Ddl = []
            var Arr_PaymentStatus_Ddl = []

            var Arr_FilterOrderStatus = []
            var Arr_FilterBookingStatus = []

            var Obj_Filter = {
            }


            var Obj_FN_Main = {}

            png.postListApiGetValue({
                // objList_Api: ObjList_Api
                objList_ComboValue: ObjList_ComboValue
                // ,objListApi_RtnVal: {           // Giá trị nhận về từ API
                //     'GetListBooking':{               // Tên api tương ứng với giá trị trả về
                //         objParams_Cus:{
                //             tblsReturn:'[7]'
                //         }
                //         ,OnSuccess: function(data){
                //             Arr_FilterOrderStatus = JSON.parse(data)[7]

                //             var intTotalAll = 0
                //             Arr_FilterOrderStatus.forEach(function(value){
                //                 intTotalAll+= value.intTotal
                //             })

                //             Arr_FilterOrderStatus.unshift({
                //                 intOrderStatusID: null
                //                 ,strOrderStatusName: 'All'
                //                 ,intTotal: intTotalAll
                //             })
                //         }
                //     }
                // }
                , objListComboValue_RtnVal: {
                    'Arr_OrderStatus_Ddl': {
                        objParams_Cus: {}, OnSuccess: function (data) {
                            Arr_OrderStatus_Ddl = $.pngGetArrComboValue(data, 'intID', 'strName')
                            Arr_OrderStatus_Ddl.unshift({ '': pngElm.getLangKey({ langkey: 'sys_Txt_DdlSelectVal' }) })
                        }
                    }
                    , 'Arr_PaymentStatus_Ddl': {
                        objParams_Cus: {}, OnSuccess: function (data) {
                            Arr_PaymentStatus_Ddl = $.pngGetArrComboValue(data, 'intID', 'strName')
                            Arr_PaymentStatus_Ddl.unshift({ '': pngElm.getLangKey({ langkey: 'sys_Txt_DdlSelectVal' }) })
                        }
                    }
                }
                , OnSuccessList: function (data) {

                    GetDataFilter({
                        OnSuccess: function () {
                            GetMainPanel()
                        }
                    })
                }
            })

            function GetDataFilter(_Opt) {
                var _Dft = {
                    OnSuccess: function () { }
                }
                _Opt = $.extend(_Dft, _Opt)
                png.postListApiGetValue({
                    objList_Api: ObjList_Api
                    , objListApi_RtnVal: {
                        'GetListBookingAgentHostByTraveller': {
                            objParams_Cus: $.pngExtendObj(Obj_Filter, {
                                tblsReturn: '[1]'
                            })
                            , OnSuccess: function (data) {
                                Arr_FilterOrderStatus = JSON.parse(data)[1]
                                var intTotalAll = 0
                                Arr_FilterOrderStatus.forEach(function (value) {
                                    intTotalAll += value.intTotal
                                })

                                //Arr_FilterOrderStatus.unshift({
                                //    intOrderStatusID: null
                                //    , strOrderStatusName: 'All'
                                //    , intTotal: intTotalAll
                                //})
                                _Opt.OnSuccess.call()
                            }
                        }
                    }
                })
            }
            function GetPanelFilter() {
                var IdOrClass_Pn = '#pnFormFilter'
                var strHtml = ''

                Arr_FilterOrderStatus.forEach(function (value, key) {
                    strHtml += '<a data="' + key + '" class="txt-black txt-weight-bold pn-margin-r-30" style="display:inline-block">' + value.strOrderStatusName + ' (' + (value.intTotal || 0) + ')</a>'
                })
                $(IdOrClass_Pn + ' #pnSearch-1').html(strHtml)


                $(IdOrClass_Pn + ' #pnSearch-2').html('')


                $('a', IdOrClass_Pn + ' #pnSearch-1').click(function (e) {
                    var data = $(this).attr('data')

                    window.history.pushState("", "", $.pngGetQSVal('status', data));

                    $('a', IdOrClass_Pn + ' #pnSearch-1').addClass('txt-black').removeClass('txt-primary')
                    $(IdOrClass_Pn + ' #pnSearch-2').html('')

                    $(this).addClass('txt-primary').removeClass('txt-black')

                    Obj_Filter.intOrderStatusID = Arr_FilterOrderStatus[data].intOrderStatusID
                    Obj_Filter.intBookingStatusID = null

                    if (Arr_FilterOrderStatus[data].intOrderStatusID == 4) {
                        png.postListApiGetValue({
                            objList_Api: ObjList_Api
                            , objListApi_RtnVal: {
                                'GetListBookingAgentHostByTraveller': {
                                    objParams_Cus: $.pngExtendObj(Obj_Filter, {
                                        tblsReturn: '[2]'
                                    })
                                    , OnSuccess: function (data) {
                                        Arr_FilterBookingStatus = JSON.parse(data)[2]

                                        GetPanelFilterBookingStatus()
                                    }
                                }
                            }
                        })
                    } else {
                        if (typeof e.originalEvent != 'undefined') {
                            pnTable_GetPanel({ idOrClass: '#pnTable' })
                        }
                    }

                })

                var data = 0
                if(!Arr_FilterOrderStatus[0].intTotal){
                    data = 1
                } 
                if ($.pngGetQSVal('status') && Arr_FilterOrderStatus[$.pngGetQSVal('status')]) {
                    data = $.pngGetQSVal('status')
                }
                $('a[data=' + data + ']', IdOrClass_Pn + ' #pnSearch-1').click()


                function GetPanelFilterBookingStatus() {

                    var strHtml = ''
                    Arr_FilterBookingStatus.forEach(function (value, key) {
                        strHtml += '<a data="' + key + '" class="txt-black pn-margin-r-30" style="display:inline-block">' + value.strBookingStatusName + ' (' + (value.intTotal || 0) + ')</a>'
                    })

                    $(IdOrClass_Pn + ' #pnSearch-2').html(strHtml)

                    $('a', IdOrClass_Pn + ' #pnSearch-2').click(function (e) {
                        var data = $(this).attr('data')

                        if ($.pngGetQSVal('statusItem'))
                            window.history.pushState("", "", $.pngGetQSVal('statusItem', data));
                        else
                            window.history.replaceState("", "", $.pngGetQSVal('statusItem', data));


                        $('a', IdOrClass_Pn + ' #pnSearch-2').addClass('txt-black').removeClass('txt-primary')

                        $(this).addClass('txt-primary').removeClass('txt-black')

                        Obj_Filter.intBookingStatusID = Arr_FilterBookingStatus[data].intBookingStatusID

                        // if(typeof e.originalEvent != 'undefined'){
                        pnTable_GetPanel({ idOrClass: '#pnTable' })
                        // }
                    })

                    var data = 0
                    if ($.pngGetQSVal('statusItem') && Arr_FilterBookingStatus[$.pngGetQSVal('statusItem')]) {
                        data = $.pngGetQSVal('statusItem')
                    }

                    $('a[data=' + data + ']', IdOrClass_Pn + ' #pnSearch-2').click()

                }
            }

            // GetMainPanel()
            function GetMainPanel() {

                pnFormFilter_GetPanel({ idOrClass: '#pnFormFilter' })
                pnTable_GetPanel({ idOrClass: '#pnTable' })

            }
            function pnFormFilter_GetPanel(_Opt) {
                var Dft = {
                    idOrClass: ''
                    , OnSuccess: function () {

                    }
                }
                _Opt = $.extend(Dft, _Opt);

                var IdOrClass_Pn = _Opt.idOrClass

                var strHtml = ''
                strHtml += '<div id="pnFormSearch" class="pn-margin-b-30"></div>'
                strHtml += '<div id="pnSearch-1" class="pn-margin-b-30"></div>'
                strHtml += '<div id="pnSearch-2" class="pn-margin-b-30"></div>'
                $(IdOrClass_Pn).html(strHtml)

                var objInput = {
                    strOrderAgentHostCode: {
                        title: '', attr: 'class="col-md-12" style="border-right: 1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                        , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'style="width:150px" placeholder="' + pngElm.getLangKey({ langkey: 'pg_Dft_TC_LtBk_BookingCode' }) + '" style="padding-left:15px"' } //maxlength="30"
                    }
                    , strConfirmedCode: {
                        title: '', attr: 'class="col-md-12" style="border-right: 1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                        , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'style="width:150px" placeholder="Confirmed Code" style="padding-left:15px"' } //maxlength="30"
                    }
                    , strFilterDateFrom_strFilterDateTo: {
                        title: '', attr: 'class="col-md-12" style="border-right: 1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                        , datePickerRange: { todayHighlight: true, format: 'dd/mm/yyyy', weekStart: 1, startDate: null, endDate: null }
                    }
                    // ,intOrderStatusID: {
                    //     title: pngElm.getLangKey({langkey:'pg_Dft_TC_LtBk_BookingStatus'}), attr: '', isRequire: false, IsRtn: true
                    //     , input: { type: 'select', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'style="border-right:1px solid #909090;padding-left:15px"' } //maxlength="30"
                    //     ,dropDown:{arrList:Arr_OrderStatus_Ddl}
                    // }
                    //, intPaymentStatusID: {
                    //    title: '<span class="mobile-pn-padding-0" style="line-height: 35px;padding: 0 15px;">' + pngElm.getLangKey({ langkey: 'pg_Dft_TC_LtBk_PaymentStatus' }) + '</span>', attr: 'class="col-md-12"', isRequire: false, IsRtn: true
                    //    , input: { type: 'select', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'style="border-right:1px solid #909090;padding-left:15px"' } //maxlength="30"
                    //    , dropDown: { arrList: Arr_PaymentStatus_Ddl }
                    //}
                }



                pngPn.getFormHorizontal({
                    objInput: objInput
                    , idOrClass: IdOrClass_Pn + ' #pnFormSearch'
                    , objDetail: {}
                    , classEx: 'bg-white pn-round-1em'
                    , attr: 'style="border: 1px solid #D6D6D6;"'
                    , strHtmlBtn: '<button id="btnFilter" class="btn bg-primary txt-white pn-round-1em pn-round-t-l-0 pn-round-b-l-0"><i class="fa fa-search"></i></button>'
                })

                $('.input-daterange input', IdOrClass_Pn).css('border', 'none').css('width', '120px')
                $('.input-group-addon', IdOrClass_Pn).css('border', 'none')




                $(IdOrClass_Pn).DefaultButton(IdOrClass_Pn + ' #btnFilter')
                $(IdOrClass_Pn + ' #btnFilter').click(function () {
                    pngPn.getForm({
                        action: 2,
                        objInput: objInput,
                        idOrClass: IdOrClass_Pn,
                        OnChkSuccess: chkSuccess
                    })
                    function chkSuccess(objRtn) {
                        Obj_Filter = $.pngExtendObj(Obj_Filter, objRtn)
                        pnTable_GetPanel({ idOrClass: '#pnTable' })

                        GetDataFilter({
                            OnSuccess: function () {
                                GetPanelFilter()
                            }
                        })


                    }
                })


                GetPanelFilter()


            }


            function pnTable_GetPanel(_Opt) {
                var Dft = {
                    idOrClass: ''
                    , OnSuccess: function () {

                    }
                }
                _Opt = $.extend(Dft, _Opt);

                var IdOrClass_Pn = _Opt.idOrClass

                $(IdOrClass_Pn).html('<div class="bg-white pn-padding-15 pn-round-1em"></div>')

                var ArrListTbl = []
                //---------ObjConfigLang
                //---------ArrConfigLang
                //---------IsConfigLang
                //---------IntConfigLang
                //---------StrConfigLang

                var objCols = {
                    'No': { name: '<span langkey="sys_Txt_Tbl-No"></span>' }
                    , strHtmlOrderBookingCode: { name: '<span langkey="pg_Dft_TC_LtBk_BookingCode"></span>' }
                    , strHtmlAction: { name: '', strAttrTH: '' }
                    , strGroupName: { name: 'Group Name', IsMergeRow: true }
                    , strCompanyName: { name: '<span langkey="pg_Dft_TC_LtBk_CompanyName"></span>' }
                    , intTotalPax: { name: '<span langkey="pg_Dft_TC_LtBk_GroupSize"></span>' }
                    // ,strCompanyName :{name:'<span langkey="pg_Dft_TC_LtBk_CompanyName"></span>'}
                    , dtmDateFromTo: { name: '<span langkey="pg_Dft_TC_LtBk_DateFrom-DateTo"></span>', strColWidth: '100px' }
                    // , strOrderStatusName_View: { name: '<span langkey="pg_Dft_TC_LtBk_BookingStatus"></span>' }
                    //, strPaymentStatusName: { name: '<span langkey="pg_Dft_TC_LtBk_PaymentStatus"></span>' }
                    , dblPriceTotalView: { name: '<span langkey="pg_Dft_TC_LtBk_PriceTotal"></span>', strAttrTD: '' }
                    , dblPricePaidView: { name: '<span langkey="pg_Dft_TC_LtBk_PricePaid"></span>', strAttrTD: '' }
                    , dblPricePayableView: { name: 'Payable', strAttrTD: '' }
                    //, strHtmlAction: { name: '<span langkey="sys_Txt_Tbl-Action"></span>', strAttrTH: 'style="width:150px"' }
                    , intOrderStatusID: { IsColSpecial: true, strStyle: { '4': '', '6': 'text-decoration: line-through;' } }
                }

                if ($(window).width() < 767) {
                    objCols = {
                        'No': { name: '<span langkey="sys_Txt_Tbl-No"></span>' }

                        , strHtmlOrderBookingCode: {
                            name: '<span langkey="pg_Dft_TC_LtBk_BookingCode"></span>', strAttrTD: "style='vertical-align: top' "
                            , list_input: {

                                strHtmlOrderBookingCode: {
                                    title: '', attr: "class='col-md-12' "
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                dtmDateFromTo: {
                                    title: '', attr: "class='col-md-12' style='margin-bottom:5px"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                strGroupName: {
                                    title: 'Group Name', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                strCompanyName: {
                                    title: '<span langkey="pg_Dft_TC_LtBk_CompanyName"></span>', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                intTotalPax: {
                                    title: '<span langkey="pg_Dft_TC_LtBk_GroupSize"></span>', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },

                                strOrderStatusName_View: {
                                    title: '<span langkey="pg_Dft_TC_LtBk_BookingStatus"></span>', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                strPaymentStatusName: {
                                    title: '<span langkey="pg_Dft_TC_LtBk_PaymentStatus"></span>', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },

                            }
                        }
                        , dblPriceTotalView: {
                            name: '<span langkey="pg_Dft_TC_LtBk_PriceTotal"></span>', strAttrTD: 'style="vertical-align:top"'
                            , list_input: {
                                dblPriceTotalView: {
                                    title: '', attr: "class='col-md-12'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },

                                dblPricePaidView: {
                                    title: '<span langkey="pg_Dft_TC_LtBk_PricePaid"></span>', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                dblPricePayableView: {
                                    title: 'Payable', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                strHtmlAction: {
                                    title: '', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },

                            }
                        }
                        , intOrderStatusID: { IsColSpecial: true, strStyle: { '4': '', '6': 'text-decoration: line-through;' } }
                    }

                }


                pngPn.getTable2({
                    objApi: ObjList_Api.GetListBookingAgentHostByTraveller
                    , objParams_Cus: Obj_Filter

                    , editRlt: function (value, key) {
                        value['strHtmlAction'] = ''
                        if (value.intOrderStatusID == 3) {
                            value['strHtmlAction'] += '<b style="color:red">Time remaining:<br> <span class="pnTimeRemain_' + key + '"></span></b><br>'
                            //value['strHtmlAction'] += '<button action="ChangeBooking" class="btn btn-texticon bg-primary" intRowID="' + key + '"><i class="fa fa-bookmark"></i><span>Change Booking</span></button>'
                        }


                        var strUrl = '/user/' + JSON.parse(png.ArrLS.UserDetail.get()).strUserName + '?strKey='+$.pngGetQSVal('strKey')+'&BKID=' + value.strPassengerBookingGUID //coreLoadPage.getUrlHost()
                        //strUrl = $.pngGetQSVal('cname', $.pngGetQSVal('cname'), strUrl)
                        //strUrl = $.pngGetQSVal('page', 'bookingdetail', strUrl)
                        //strUrl = $.pngGetQSVal('BKID', value.strBookingGUID, strUrl)
                        value['strHtmlAction'] += '<div><a class="btn" action="viewbookeditem" href="' + strUrl + '"><i class="fa fa-pencil"></i></a></div>'
                        // if(value['strDtmDeadline'])
                        //     value['strHtmlAction']+= '<button class="btn" action="viewconf" key="'+key+'" guid="'+value.strBookingGUID+'"><i class="fa fa-pencil-square-o"></i></button>'
                        // value['strHtmlAction'] = '<button class="btn btn-primary" action="viewconf" guid="'+value.strBookingGUID+'"><i class="fa fa-pencil-square-o"></i><span langkey="pg_Dft_TC_LtBk_btn-Confirm"></span></button>'
                        value['strHtmlOrderBookingCode'] = '<a  action="viewdetail" intRowID="' + key + '">' + value['strOrderAgentHostCode'] + '</a></div><div>(<a action="Feedback">Phản hồi</a>)</div>'

                        value['dblPriceTotalView'] = $.pngFormatPrice(value['dblPriceTotal'])

                        value['dblPricePaidView'] = '<a action="ListPaid" guid="' + value.strBookingGUID + '" data="' + key + '">' + $.pngFormatPrice(value['dblPricePaid']) + '</a>'

                        value['dblPriceBalanceView'] = '<a action="ListBalance" guid="' + value.strBookingGUID + '" data="' + key + '">' + $.pngFormatPrice(value['dblPriceBalance']) + '</a>'

                        value['dblPricePayableView'] = '<a action="ListPayable" guid="' + value.strBookingGUID + '" data="' + key + '">' + $.pngFormatPrice(value['dblPricePayable']) + '</a>'
                        if (value.dtmDateDeadline)
                            value['dblPricePayableView'] += '<div><b>' + pngElm.getLangKey({ langkey: 'sys_Txt_Deadline' }) + ': </b></div><div>' + $.pngFormatDateTime(value.dtmDateDeadline) + '</div>'

                        value.dtmDateDeadline_View = $.pngFormatDateTime(value.dtmDateDeadline)
                        value.dtmCreatedDate_View = $.pngFormatDateTime(value.dtmCreatedDate)

                        value['dblTotalProfitAgentView'] = $.pngFormatPrice(value['dblTotalProfitAgent'])

                        if (value.dtmDateFrom)
                            value['dtmDateFromTo'] = '<div>' + $.pngFormatDateTime(value.dtmDateFrom) + '</div> - ' + $.pngFormatDateTime(value.dtmDateTo)

                        value['strOrderStatusName_View'] = value['strOrderStatusName']
                        var strListConfirmedCode = ""
                        if (value.strListConfirmedCode) {
                            strListConfirmedCode += ' ('
                            value.strListConfirmedCode.split(',').forEach(function (val) {
                                strListConfirmedCode += '<a action="ViewVoucher" strConfirmedCode="' + val + '">' + val + '</a>, '
                            });

                            strListConfirmedCode += ')'
                            strListConfirmedCode = strListConfirmedCode.replace(", )", ")")
                        }
                        value['strOrderStatusName_View'] += strListConfirmedCode


                        // value['dblTotalPriceBankPay_View'] = $.pngFormatPrice(value['dblTotalPriceBankPay'])
                    }
                    , objCols: objCols
                    // ,editTableInput:function(){}
                    , changeCkbMaster: function (IsChecked, intRowID, arrList) {

                        ArrListTbl = arrList
                    }
                    , customEvent: function (_idOrClass_Pn) {

                        var obj = {}
                        ArrListTbl.forEach(function (value, key) {
                            if (value.intOrderStatusID == 3) {
                                var countDownDate = new Date($.pngFormatDateTime(value.dtmDateDeadline, 'YYYY-MM-DDTHH:mm:ss.sssZ')).getTime();
                                // Update the count down every 1 second
                                obj[key] = false
                                clearInterval(x);
                                var x = setInterval(function () {
                                    // Get today's date and time
                                    var now = new Date().getTime();

                                    // Find the distance between now and the count down date
                                    var distance = countDownDate - now;

                                    // Time calculations for days, hours, minutes and seconds
                                    var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                                    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                                    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                                    var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                                    // Display the result in the element with id="demo"
                                    $('.pnTimeRemain_' + key).html(days + "d " + hours + "h " + minutes + "m " + seconds + "s ");

                                    // If the count down is finished, write some text


                                    if (distance < 0) {
                                        clearInterval(x);
                                        $('.pnTimeRemain_' + key).html("EXPIRED");
                                        $('[row=' + key + '] button[action=ChangeBooking]').remove()
                                        if (obj[key]) {
                                            GetDataFilter({
                                                OnSuccess: function () {
                                                    GetPanelFilter()
                                                }
                                            })
                                            pnTable_GetPanel({ idOrClass: '#pnTable' })
                                        }
                                    } else {
                                        obj[key] = true
                                    }
                                }, 1000);


                            }

                        })


                        $(_idOrClass_Pn + " a").click(function () {


                            // if($(this).attr('action') == 'connecttotms'){
                            //     var arrWhere={
                            //         strUserGUID:options.arrUser.strUserGUID
                            //         ,strBookingGUID: $(this).attr('guid')
                            //     }
                            //     png.post({
                            //         url: "api/booking/GetBookingTransferDataConfig", data: {strJson : JSON.stringify(arrWhere)}
                            //         ,OnSuccess: function (data) {
                            //             var arrTbl = JSON.parse(data);
                            //             var arrXml = {};
                            //             arrTbl.forEach(function(value,key) {
                            //                 arrXml['strXML'+(key+1)] = '';
                            //                 value.forEach(function(value2) {
                            //                     arrXml['strXML'+(key+1)]+=value2[Object.keys(value2)].replace(/\"/g,'"');
                            //                 });
                            //             });
                            //             //console.log(arrXml)
                            //             ConnectToTMS.post({
                            //                 strCompanyGUID:JSON.parse(png.ArrLS.CompanyFriend.get()).strCompanyGUID
                            //                 ,url:'api/appkeys/guide/AddOrUpdBookingFromB2BXML'
                            //                 ,data:{strWhere : JSON.stringify(arrXml)}
                            //                 ,OnSuccess:function(){
                            //                     $.Confirm({
                            //                         strContent: "ADD TO TMS SUCCESS"
                            //                     })
                            //                 }
                            //             });
                            //         }
                            //     })
                            // }

                            if ($(this).attr('action') == 'ViewVoucher') {

                                png.postListApiGetValue({
                                    objList_Api: ObjList_Api
                                    // ,objList_ComboValue: ObjList_ComboValue
                                    , objListApi_RtnVal: {
                                        'GetBookingItemForConfirmedCode': {
                                            objParams_Cus: {
                                                strConfirmedCode: $(this).attr('strConfirmedCode')
                                            },
                                            OnSuccess: function (data) {
                                                objDetailPost = JSON.parse(data)[0][0]   // Dữ liệu trả về từ dropdownlist trên

                                                if (objDetailPost["intCateID"] == 18 || objDetailPost["intCateID"] == 19 || objDetailPost["intCateID"] == 33)
                                                    $.ModulePage_BookingDetailMain_PopUpVoucherForTour({
                                                        strUserGUID: options.strUserGUID,
                                                        objDetailPost: objDetailPost,
                                                    })
                                                if (objDetailPost["intCateID"] == 1)
                                                    $.ModulePage_BookingDetailMain_PopUpVoucherForSupp({
                                                        strUserGUID: options.strUserGUID,
                                                        objDetailPost: objDetailPost,
                                                    })

                                            }
                                        },
                                    }
                                })
                            }

                            if ($(this).attr('action') == 'ListPaid') {

                                $.ModulePage_ListBookingMain_PopUpPaid({
                                    strUserGUID: options.strUserGUID
                                    , strCompanyGUID: null//options.strCompanyGUID
                                    , objBookingDetail: ArrListTbl[$(this).attr('data')]
                                    , OnSuccess: function () {
                                        pnTable_GetPanel({ idOrClass: '#pnTable' })
                                    }
                                })
                            }
                            if ($(this).attr('action') == 'ListBalance') {
                            }

                            if ($(this).attr('action') == 'ListPayable') {
                                $.ModulePage_ListBookingMain_PopUpPayable({
                                    strUserGUID: options.strUserGUID
                                    , strCompanyGUID: null//options.strCompanyGUID
                                    , objBookingDetail: ArrListTbl[$(this).attr('data')]
                                    , OnSuccess: function () {
                                        pnTable_GetPanel({ idOrClass: '#pnTable' })
                                    }
                                })
                            }


                            if ($(this).attr('action') == 'viewdetail') {
                                $.ModulePage_ListBookingMain_PopUpInfo({
                                    objBookingDetail: ArrListTbl[$(this).attr('intRowID')]
                                })
                            }

                            if ($(this).attr('action') == "Feedback") {
                                var intRowID = $(this).parents('tr').attr('row')
                                var obj = ArrListTbl[intRowID]
                                console.log(ArrListTbl[intRowID])

                                // $.ModulePage_BookingDetailMain_PopUpSendRequest({
                                //     strUserGUID:options.strUserGUID,
                                //     strBookingGUID:options.strBookingGUID,
                                //     objDetailAgentHost: obj,
                                // })

                                GetPopUp_ViewRequest({
                                    objDetail: obj
                                })

                            }
                        })


                        $(_idOrClass_Pn + " button").click(function () {
                            var action = $(this).attr('action')

                            if (action == 'ChangeBooking') {
                                var intRowID = $(this).attr('intRowID')

                                $.ModulePage_ListBookingMain_PopUpChangeBooking({
                                    strUserGUID: options.strUserGUID
                                    , strCompanyGUID: null//options.arrUser.strCompanyGUID
                                    , strBookingGUID: ArrListTbl[intRowID].strBookingGUID
                                    , objBookingDetail: ArrListTbl[intRowID]
                                    , OnSuccess: function () {
                                        GetDataFilter({
                                            OnSuccess: function () {
                                                GetPanelFilter()
                                            }
                                        })
                                        pnTable_GetPanel({ idOrClass: '#pnTable' })
                                    }
                                })

                            }
                        })



                    }
                    // ,changeInput:function(){}
                    , IsViewCheckBoxMain: false
                    , idOrClass: IdOrClass_Pn
                })
            }


            function GetPopUp_ViewRequest(_Opt) {
                var Dft = {
                    objDetail: {},
                    IsDuplicate: null,
                    OnSuccess: function () {

                    }
                }
                _Opt = $.extend(Dft, _Opt);

                console.log('Function', _Opt)

                var IdOrClass_Main = ''

                var Is_Create = false
                var Is_Edit = false
                var Is_Duplicate = false

                var Obj_Detail = _Opt.objDetail
                // var Obj_Detail = options.objDetail

                //---------Obj_XXX      // Khai báo các biến dùng chung cho cả hàm
                //---------Arr_XXX
                //---------Is_XXX
                //---------Int_XXX
                //---------Str_XXX


                if (Object.keys(Obj_Detail).length) {
                    Is_Edit = true
                } else {
                    Is_Create = true
                }
                if (_Opt.IsDuplicate) {
                    Is_Edit = false
                    Is_Duplicate = true
                }

                var Arr_TypeOfComment_Ddl = []
                var Arr_Comment_Ddl = []
                //------------------- Khái báo biển chính của giao diện
                var Obj_Filter_Dtl = {}
                var Obj_Filter = {}
                var Arr_ListTbl = []

                var Obj_FormInput = {}

                var Obj_FN_Main = {}
                //-------------------

                png.postListApiGetValue({           // Post list các Api phía trên và lấy về dữ liệu
                    objList_ComboValue: {
                        Arr_TypeOfComment_Ddl: {
                            strTableName: 'CC04'             // Bảng sử dụng để get dữ liệu
                            , strFeildSelect: 'CC04_TypeOfCommentID AS intID,CC04_TypeOfCommentName AS strName' // Trường cần lựa chọn
                            , strWhere: 'WHERE IsActive=1 ORDER BY CC04_Order'      // Điều kiện
                        },
                        Arr_Comment_Ddl: {
                            strTableName: 'CC06'             // Bảng sử dụng để get dữ liệu
                            , strFeildSelect: 'CC06_CommentForID AS intID,CC06_CommentForName AS strName' // Trường cần lựa chọn
                            , strWhere: 'WHERE IsActive=1 ORDER BY CC06_Order'      // Điều kiện
                        }
                    }            // Tên các Object api đã khai báo phía trên
                    , objListComboValue_RtnVal: {           // Giá trị nhận về từ API
                        'Arr_TypeOfComment_Ddl': {               // Tên api tương ứng với giá trị trả về
                            objParams_Cus: {
                            }
                            , OnSuccess: function (data) {
                                Arr_TypeOfComment_Ddl = $.pngGetArrComboValue(data, 'intID', 'strName')
                            }
                        },
                        'Arr_Comment_Ddl': {               // Tên api tương ứng với giá trị trả về
                            objParams_Cus: {
                            }
                            , OnSuccess: function (data) {
                                Arr_Comment_Ddl = $.pngGetArrComboValue(data, 'intID', 'strName')
                            }
                        }
                    }
                    , OnSuccessList: function (data) {      // Hàm thực hiện khi thành công tất cả các api trên
                        GetPopUp()
                    }
                })

                function GetPopUp() {
                    var strTitle = ''
                    if (Is_Create) {
                        strTitle = pngElm.getLangKey({ langkey: 'sys_Btn_Create' })

                        Obj_Detail = {
                            dtmDateOfTicket: moment().format('l')
                        }
                    }

                    if (Is_Edit) {
                        strTitle = pngElm.getLangKey({ langkey: 'sys_Btn_Edit' })
                    }
                    if (Is_Duplicate) {
                        strTitle = pngElm.getLangKey({ langkey: 'sys_Btn_Duplicate' })
                    }
                    pngPn.getPopUp({
                        strTitle: strTitle
                        , intTypeSize: 1//------------1 small ---2 medium ---3 large
                        , OnPanel: GetMainPanel
                        , OnClosePopUp: function () {
                            //------Chọn sự kiện khi Đóng PopUP
                            // options.OnSuccess.call()
                            // _Opt.OnSuccess.call()
                        }
                    })
                }

                function GetMainPanel(_IdOrClassPp, _OnClosePp) {

                    IdOrClass_Main = _IdOrClassPp
                    Obj_FN_Main.OnClosePp = _OnClosePp

                    //Obj_FN_Main.OnClosePp(true)----------- chạy câu lệnh trong OnClosePopUp: function (){} khi tắt PopUp
                    //Obj_FN_Main.OnClosePp(true,true)-----------Đóng Pop Up + chạy câu lệnh trong OnClosePopUp: function (){}


                    var objPanel = {
                        pnMain: {
                            tag: 'div', attr: 'class=""'
                            , childTags: [{ div: 'class="row"' }]
                            // ,pnListBtn:{tag:'div',attr:'class="col-md-12"'}
                            // ,pnFormFilter:{tag:'div',attr:'class="col-md-12"'}
                            // ,pnTable:{tag:'div',attr:'class="col-md-12"'}

                            , pnForm: { tag: 'div', attr: 'class="col-md-12"' }
                            , pnBtn: { tag: 'div', attr: 'class="col-md-12"' }
                        }
                    }
                    var objEvtPanel = {}

                    objEvtPanel.pnForm = function (_idOrClassPn) {
                        var IdOrClass_Pn = _idOrClassPn
                        Obj_FormInput = {
                            ///-----------INSERT INPUT

                            intTypeOfCommentID: {
                                title: 'Type Of Comment', isRequire: false, attr: "class='col-md-6 '", IsRtn: true
                                , input: { type: 'select', classEx: 'form-control', attr: '' }
                                , dropDown: {
                                    IsViewSlcOpt: false, arrList: Arr_TypeOfComment_Ddl

                                }
                            },
                            intCommentForID: {
                                title: 'Feedback for', isRequire: false, attr: "class='col-md-6 '", IsRtn: true
                                , input: { type: 'select', classEx: 'form-control', attr: '' }
                                , dropDown: {
                                    IsViewSlcOpt: false, arrList: Arr_Comment_Ddl

                                }
                            },
                            //PnServiceName: {
                            //    title: 'Name', isRequire: false, attr: "class='col-md-6'"
                            //    , input: { IsNoInput: true }
                            //    , OnLoadHtml: function (_idOrClass_Pn) {

                            //        GetPanel()
                            //        function GetPanel() {

                            //            var strHtml = ''
                            //            if (Obj_Detail.strServicesName) {
                            //                strHtml += Obj_Detail.strServicesName
                            //            }
                            //            strHtml += '(<a action="SlcTour">Select</a>)'
                            //            $(_idOrClass_Pn).html(strHtml)

                            //            $('a', _idOrClass_Pn).click(function () {
                            //                var action = $(this).attr('action')
                            //                if (action == 'SlcTour') {
                            //                    GetPopUp_ViewGuide({
                            //                        strBookingGUID: Obj_Detail.strBookingGUID,
                            //                        intCommentForID: $('.intCommentForID', IdOrClass_Pn).val(),
                            //                        OnSuccess: function (_obj) {
                            //                            Obj_Detail = $.pngExtendObj(Obj_Detail, _obj)
                            //                            GetPanel()
                            //                            // GetPanel(_strServiceItemGUID)
                            //                        }
                            //                    })
                            //                }
                            //            })
                            //        }

                            //    }
                            //},
                            __________1: {
                                title: '', isRequire: false, attr: "class='col-md-12' style=''"
                                , input: { IsNoInput: true }
                            },
                            strTitle: { title: 'Title', isRequire: false, attr: "class='col-md-12 '", IsRtn: true, input: { type: 'text', classEx: 'form-control', attr: '' } },
                            strContent: { title: 'Content', isRequire: false, attr: "class='col-md-12 '", IsRtn: true, input: { type: 'textarea', classEx: 'form-control', attr: 'rows="5" ' } },

                        }

                        pngPn.getForm({
                            action: 1,
                            objInput: Obj_FormInput,
                            idOrClass: IdOrClass_Pn,
                            objDetail: Obj_Detail,
                        })

                    }
                    objEvtPanel.pnBtn = function (_idOrClassPn) {
                        var IdOrClass_Pn = _idOrClassPn

                        var strHtml = ''
                        strHtml += '<button id="btnSave" class="btn btn-texticon bg-primary txt-white"><i class="fa fa-floppy-o"></i><span>' + pngElm.getLangKey({ langkey: 'sys_Btn_Save' }) + '</span></button>'
                        $(IdOrClass_Pn).html(strHtml)

                        $(IdOrClass_Pn + ' #btnSave').click(function () {
                            pngPn.getForm({
                                action: 2,
                                objInput: Obj_FormInput,
                                idOrClass: IdOrClass_Main + ' #pnForm',
                                OnChkSuccess: function (objRtn) {
                                    if (objRtn) {

                                        objRtn = $.pngExtendObj(Obj_Detail, objRtn)

                                        // if(Is_Create || Is_Duplicate){
                                        png.postListApiGetValue({
                                            objList_Api: {

                                                AddAgentRequest: {
                                                    strApiLink: 'api/connectto/tour/AddAgentRequest'
                                                    , objParams: {
                                                        strJson: null
                                                        , strCompanyGUID: null

                                                    }
                                                }
                                            }
                                            , objListApi_RtnVal: {
                                                'AddAgentRequest': {
                                                    objParams_Cus: {
                                                        strJson: JSON.stringify($.pngReplaceObj({
                                                            strUserGUID: options.strUserGUID
                                                            , strBookingGUID: Obj_Detail.strBookingGUID
                                                            , strAgentHostBookingGUID: Obj_Detail.strBookingByAgentHostGUID
                                                            , strMemberGUID: null
                                                            , strPartnerCompanyGUID: null
                                                            , strPassengerGUID: options.strUserGUID
                                                            , strTitle: null
                                                            , strContent: null
                                                            , intTypeOfCommentID: null
                                                            , intCommentForID: null
                                                        }, objRtn))
                                                        , strCompanyGUID: Obj_Detail.strCompanyGUID
                                                    }
                                                    , OnSuccess: function (data) {
                                                        Obj_FN_Main.OnClosePp(false, true)
                                                        _Opt.OnSuccess.call()
                                                        // options.OnSuccess.call()
                                                    }
                                                }
                                            }
                                        })
                                        // }
                                        // if(Is_Edit){
                                        //     png.postListApiGetValue({
                                        //         objList_Api: ObjList_Api
                                        //         ,objListApi_RtnVal: {
                                        //             'UpdCustCareTicket':{
                                        //                 objParams_Cus: objRtn
                                        //                 , OnSuccess: function(data){
                                        //                     Obj_FN_Main.OnClosePp(false,true)
                                        //                     _Opt.OnSuccess.call()
                                        //                     // options.OnSuccess.call()
                                        //                 }
                                        //             }
                                        //         }
                                        //     })
                                        // }

                                    }


                                }
                            })
                        })
                    }
                    // ===================================

                    pngPn.getPanelHtml({            // Get ra panel dạng html
                        objPanel: objPanel
                        , objEvtPanel: objEvtPanel
                        , idOrClass: IdOrClass_Main  // Id or class chính
                        , OnChangeIdPn: function (_Fn) {
                            Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                        }
                    })



                }
            }

        }



        $.ModulePage_ListBookingMain_PopUpInfo = function (options) {
            var defaults = {
                strUserGUID: ''
                , objBookingDetail: {}
                , OnSuccess: function () { }
            }

            options = $.extend(defaults, options);



            var Obj_BookingDetail = JSON.parse(JSON.stringify(options.objBookingDetail))

            Obj_BookingDetail['dblPricePaidView'] = $.pngFormatPrice(Obj_BookingDetail['dblPricePaid'])
            Obj_BookingDetail['dblPriceBalanceView'] = $.pngFormatPrice(Obj_BookingDetail['dblPriceBalance'])
            console.log(Obj_BookingDetail)

            var ObjList_Api = {

                GetListBookingByTraveller: {
                    strApiLink: 'api/public/traveller/GetListBookingByTraveller'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingGUID: Obj_BookingDetail.strBookingGUID
                        , strBookingCode: null
                        , strFilterDateFrom: null
                        , strFilterDateTo: null
                        , intOrderStatusID: null
                        , intPaymentStatusID: null
                        , intBookingStatusID: null
                        , intCurPage: null
                        , intPageSize: null
                        , isPartner: 1
                        , tblsReturn: "0,3,4,[5],[6]"
                    }
                },
            }



            var IdOrClass_Main = ''

            var Obj_FN_Main = {}
            var Arr_BookingDetail = []

            png.postListApiGetValue({
                objList_Api: ObjList_Api
                , objListApi_RtnVal: {
                    'GetListBookingByTraveller': {
                        objParams_Cus: {
                            tblsReturn: '[4]'
                        }
                        , OnSuccess: function (data) {
                            Arr_BookingDetail = JSON.parse(data)[4]
                        }
                    },
                }
                , OnSuccessList: function (data) {

                    pngPn.getPopUp({
                        strTitle: 'View Infomation'
                        , intTypeSize: 2
                        , OnPanel: PopUp_GetList
                        , OnClosePopUp: function () {

                        }
                    })

                }
            })


            function PopUp_GetList(_IdOrClassPp, _OnClosePp) {

                IdOrClass_Main = _IdOrClassPp
                Obj_FN_Main.OnClosePp = _OnClosePp


                $(IdOrClass_Main).html(`
                    <div id="pnForm"></div>
                    <div id="pnTable"></div>
                `)
                //Total Amount:	1,200,000	Total Paid:	200,000	Total Balance:	1,000,000

                pngPn.getForm({
                    action: 1,
                    objInput: {
                        strGroupName: {
                            title: 'Group Name', attr: "class='col-md-3'"
                            , input: { IsNoInput: true, IsViewDtl: true }
                        }
                        , intTotalPax: {
                            title: '<span langkey="pg_Dft_TC_LtBk_GroupSize"></span>', attr: "class='col-md-3'"
                            , input: { IsNoInput: true, IsViewDtl: true }
                        }
                        , strCompanyName: {
                            title: '<span langkey="pg_Dft_TC_LtBk_CompanyName"></span>', attr: "class='col-md-3'"
                            , input: { IsNoInput: true, IsViewDtl: true }
                        }
                        , dtmDateFromTo: {
                            title: '<span langkey="pg_Dft_TC_LtBk_DateFrom-DateTo"></span>', attr: "class='col-md-3'"
                            , input: { IsNoInput: true, IsViewDtl: true }
                        }

                    },
                    idOrClass: IdOrClass_Main + ' #pnForm',
                    objDetail: Obj_BookingDetail,
                    OnChkSuccess: function () { }
                })


                var ArrBookingDetail_View = []
                var intRowID = 0

                Arr_BookingDetail.forEach(function (value) {
                    if (value.strBookingByAgentHostGUID.toUpperCase() == Obj_BookingDetail.strBookingByAgentHostGUID.toUpperCase()) {

                        var obj = JSON.parse(JSON.stringify(value))

                        intRowID++
                        obj.No = intRowID

                        if (value.intQuantityTypeID == null && value.intOrder == 100) {
                            intRowID++
                            obj.No = intRowID
                        }
                        ArrBookingDetail_View.push(obj)
                    }
                })

                var objCols = {
                    'No': { name: 'No' }
                    , strServiceName_View: { name: 'Service Name' }
                    , dtmDateFromTo_View: { name: 'Date From - Date To' }
                    , intQuantity: { name: 'Quantity', strAttrTD: 'style="text-align:right"' }
                    //, intUnitPrice_FN: { name: 'Unit Price', strAttrTD: 'style="text-align:right"' }
                    //, intTotalPrice_FN: { name: 'Total Price', strAttrTD: 'style="text-align:right"' }
                    , strHtmlAction: { name: 'Action' }
                    , intOrderStatusID: { IsColSpecial: true, strStyle: { '4': '', '6': 'text-decoration: line-through;' } }
                }

                if ($(window).width() < 767) {
                    objCols = {
                        'No': { name: '<span langkey="sys_Txt_Tbl-No"></span>' }

                        , strServiceName_View: {
                            name: 'Service Name', strAttrTD: "style='vertical-align: top' "
                            , list_input: {

                                strServiceName_View: {
                                    title: '', attr: "class='col-md-12' "
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                dtmDateFromTo_View: {
                                    title: '', attr: "class='col-md-12' style='margin-bottom: 5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                strSglDblName_ViewMobile: {
                                    title: '', attr: "class='col-md-12' style='margin-bottom: 5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                intQuantity: {
                                    title: 'Quantity', attr: "class='col-md-12' style='margin: 0'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                            }
                        }
                        , intQuantity: {
                            name: 'Unit Price', strAttrTD: "style='vertical-align: top' "
                            , list_input: {

                                intUnitPrice_FN: {
                                    title: '', attr: "class='col-md-12'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                intTotalPrice_FN: {
                                    title: 'Total Price', attr: "class='col-md-12' style='margin-bottom: 5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                strHtmlAction: {
                                    title: '', attr: "class='col-md-12' style='margin-bottom: 5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                            }
                        }
                        , intOrderStatusID: { IsColSpecial: true, strStyle: { '4': '', '6': 'text-decoration: line-through;' } }
                    }

                }

                var strBookingItemGUID = ''
                var strSupplierGUID = ''

                pngPn.getTable2({
                    objApi: null
                    , objParams_Cus: null
                    , editRltArr: function (arr) {
                        return ArrBookingDetail_View
                    }
                    , editRlt: function (value, key) {
                        value['No'] = (key + 1)

                        if (value.intCateID == 1) {
                            if (!value.strFocGUID) {

                                value['strHtmlAction'] = ''

                                if (strBookingItemGUID != value.strBookingItemGUID) {
                                    strBookingItemGUID = value.strBookingItemGUID

                                    value['strServiceName_View'] = value['strSupplierName'] + ' - ' + value['strItemTypeName'] + ' - ' + value['strServiceName']

                                    value['dtmDateFrom_View'] = $.pngFormatDateTime(value['dtmDateFrom'])
                                    value['dtmDateTo_View'] = $.pngFormatDateTime(value['dtmDateTo'])

                                    if (strSupplierGUID != value.strSupplierGUID) {
                                        strSupplierGUID = value.strSupplierGUID
                                        //if (value.intVoucherStatusID == 2)
                                        //    value['strHtmlAction'] += '<button class="btn bg-success txt-white btnViewVoucher" data="' + key + '" >View Voucher</button>'
                                    }

                                    //if (value.intOrderStatusID != 6 && value.IsCancelCharge == 0)
                                    //    value['strHtmlAction'] += '<button class="btn btnCancellation" data="' + key + '">Cancellation</button>'
                                } else {
                                    value['strServiceName_View'] = ' - ' + value['strServiceName']
                                    value['dtmDateFrom_View'] = ''
                                    value['dtmDateTo_View'] = ''
                                }
                                value['strServiceName_View'] = value['strServiceName_View'] + (value['intProductID'] == 2 && ((value.intQuantityTypeID >= 5 && value.intQuantityTypeID <= 8) || (value.intQuantityTypeID >= 18 && value.intQuantityTypeID <= 25)) ? ' <b>(Giá GIT)</b>' : '')

                                if (value['strPriceListGUID'] && value['IsSystemPriceList'] != 1 && !value['strFocGUID']) {
                                    value['strServiceName_View'] += '<br><i>(' + value['strPriceListName'] + ')</i>'
                                }

                            } else {
                                if (strBookingItemGUID != value.strBookingItemGUID) {
                                    strBookingItemGUID = value.strBookingItemGUID

                                    value['strServiceName_View'] = value['strSupplierName'] + ' - ' + value['strServiceName']

                                    value['dtmDateFrom_View'] = $.pngFormatDateTime(value['dtmDateFrom'])
                                    value['dtmDateTo_View'] = $.pngFormatDateTime(value['dtmDateTo'])

                                    value['strHtmlAction'] = ''
                                } else {

                                    value['dtmDateFrom_View'] = ''
                                    value['dtmDateTo_View'] = ''
                                }


                            }


                        } else {

                            value['strServiceName_View'] = value['strServiceName']
                            if (value['strTourGUID'])
                                value['strServiceName_View'] = '<a action="ViewTourDetail" intRowID="' + key + '">' + value['strServiceName'] + '</a>'


                            value['strHtmlAction'] = ''

                            if (strBookingItemGUID != value.strBookingItemGUID) {
                                strBookingItemGUID = value.strBookingItemGUID
                                value['dtmDateFrom_View'] = $.pngFormatDateTime(value['dtmDateFrom'])
                                value['dtmDateTo_View'] = $.pngFormatDateTime(value['dtmDateTo'])



                                if (strSupplierGUID != value.strSupplierGUID) {
                                    strSupplierGUID = value.strSupplierGUID
                                    if (value.intVoucherStatusID == 2)
                                        value['strHtmlAction'] += '<button class="btn bg-success txt-white btnViewVoucher" data="' + key + '" >View Voucher</button>'
                                }

                                //if (value.intOrderStatusID != 6 && value.IsCancelCharge == 0)
                                //    value['strHtmlAction'] += '<button class="btn btnCancellation" data="' + key + '">Cancellation</button>'

                            }

                        }


                        if (value['dtmDateFrom_View'])
                            value['dtmDateFromTo_View'] = value['dtmDateFrom_View'] + ' - ' + value['dtmDateTo_View']


                        // value['strServiceName_View'] = value['strServiceName']
                        // if(value['strTourGUID'])
                        //     value['strServiceName_View'] = '<a action="ViewTourDetail" intRowID="'+key+'">'+value['strServiceName']+'</a>'

                        value['intUnitPrice_FN'] = $.pngFormatPrice(value['intUnitPrice'])
                        value['intTotalPrice_FN'] = $.pngFormatPrice(value['intTotalPrice'])
                        // // value['strHtmlAction'] = '<button class="btnDelete btn btn-danger" data="' + key + '"><i class="fa fa-trash"></i></button>'
                        // value['strHtmlAction']=''
                    }
                    , objCols: objCols
                    // ,editTableInput:function(){}
                    , changeCkbMaster: function (IsChecked, intRowID, arrList) {

                        //ArrPriceTableItem = arrList
                    }
                    , customEvent: function (_idOrClass_Pn) {

                        //ArrPriceTableItem.forEach(function (value, key) {
                        //    if (value.intOrderStatusID == 6 || value.intOrderStatusID == 7 || value.IsCancelCharge != 0) {
                        //        $('button[intRowID=' + key + '].btnCancellation', _idOrClass_Pn).remove()
                        //    }
                        //})

                        $('a', _idOrClass_Pn).click(function () {
                            var intRowID = $(this).attr('intRowID')
                            var action = $(this).attr('action')
                            var obj = ArrPriceTableItem[intRowID]

                            if (action == "ViewTourDetail") {

                                $.ModulePage_BookingDetailMain_PopUpTourDetail({
                                    strUserGUID: options.strUserGUID
                                    , strTourGUID: obj['strTourGUID']
                                })
                            }


                        })

                        $('.btnCancellation', _idOrClass_Pn).click(function () {

                            var intRowID = $(this).attr('data')


                            $.ModulePage_BookingDetailMain_PopUpCancelBooking({
                                strUserGUID: options.strUserGUID
                                , strCompanyGUID: options.strCompanyGUID
                                , strBookingItemGUID: ArrPriceTableItem[intRowID].strBookingItemGUID
                                , objBookingDetail: Obj_BookingDetail
                                , OnSuccess: function () {
                                    window.location.reload()
                                }
                            })
                        })

                        $('.btnViewVoucher', _idOrClass_Pn).click(function () {

                            var intRowID = $(this).attr('data')

                            if (ArrPriceTableItem[intRowID].strTourGUID) {

                                $.ModulePage_BookingDetailMain_PopUpVoucherForTour({
                                    strUserGUID: options.strUserGUID
                                    , strTourGUID: ArrPriceTableItem[intRowID].strTourGUID
                                    , objBookingDetail: Obj_BookingDetail
                                    , objBookingServiceDetail: ArrPriceTableItem[intRowID]
                                    , arrCustomerList: Arr_CustomerBooking
                                })
                            }

                            if (ArrPriceTableItem[intRowID].strSupplierGUID) {

                                $.ModulePage_BookingDetailMain_PopUpVoucherForSupp({
                                    strUserGUID: options.strUserGUID
                                    , strSupplierGUID: ArrPriceTableItem[intRowID].strSupplierGUID
                                    , objBookingDetail: Obj_BookingDetail
                                    , objBookingServiceDetail: ArrPriceTableItem[intRowID]
                                    , arrPriceTableItem: ArrPriceTableItem
                                    , arrCustomerList: Arr_CustomerBooking
                                    , objAgentHostDetail: Arr_ListBookingByAgentHost.filter(function (item) { return item.strAgentHostBookingGUID.toUpperCase() == ArrPriceTableItem[intRowID].strBookingByAgentHostGUID.toUpperCase() })[0]
                                })
                            }
                        })

                    }
                    // ,changeInput:function(){}
                    , IsViewCheckBoxMain: false
                    , idOrClass: IdOrClass_Main + ' #pnTable',
                })








            }

        }

        $.ModulePage_ListBookingMain_PopUpPaid = function (options) {
            var defaults = {
                strUserGUID: null
                , strCompanyGUID: null
                , objBookingDetail: null
                , OnSuccess: function () {

                }
            }
            options = $.extend(defaults, options);

            var IdOrClass_Main = ''


            var Obj_BookingDetail = JSON.parse(JSON.stringify(options.objBookingDetail))

            Obj_BookingDetail['dblPricePaidView'] = $.pngFormatPrice(Obj_BookingDetail['dblPricePaid'])
            Obj_BookingDetail['dblPriceBalanceView'] = $.pngFormatPrice(Obj_BookingDetail['dblPriceBalance'])


            var ObjList_Api = {
                GetListPaidBookingItemByAgent: {
                    strApiLink: 'api/payrcvbooking/GetListPaidBookingItemByAgent'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingGUID: Obj_BookingDetail.strPassengerBookingGUID
                        , strBookingByAgentHostGUID: Obj_BookingDetail.strBookingByAgentHostGUID
                        , tblsReturn: null
                    }
                }
            }

            var ObjList_ComboValue = {
                Arr_ValCode: {
                    strCombocode: ''
                }
                , Arr_PaymentMethod: {
                    strTableName: 'OB12'
                    , strFeildSelect: 'OB12_PaymentMethodID AS intID,OB12_PaymentMethodName AS strName'
                    , strWhere: 'WHERE IsActive=1 ORDER BY OB12_Order'
                }
            }

            var Arr_PaidBookingItem = []
            var Arr_AgentHostBooking = []

            //---------
            var Obj_FN_Main = {}
            //---------

            png.postListApiGetValue({
                objList_Api: ObjList_Api
                , objListApi_RtnVal: {
                    'GetListPaidBookingItemByAgent': {
                        objParams_Cus: {
                            tblsReturn: '[0][1]'
                        }, OnSuccess: function (data) {

                            Arr_PaidBookingItem = JSON.parse(data)[0]
                            Arr_AgentHostBooking = JSON.parse(data)[1]
                        }
                    }
                }
                , OnSuccessList: function (data) {
                    GetPopUp()

                }
            })


            function GetPopUp() {
                pngPn.getPopUp({
                    strTitle: 'List Paid'
                    , intTypeSize: 2//------------1 small ---2 medium ---3 large
                    , OnPanel: GetMainPanel
                    , OnClosePopUp: function () {
                        //------Chọn sự kiện khi Đóng PopUP
                    }
                })
            }

            function GetMainPanel(_IdOrClassPp, _OnClosePp) {

                IdOrClass_Main = _IdOrClassPp
                Obj_FN_Main.OnClosePp = _OnClosePp

                // Obj_FN_Main.OnClosePp(true)----------- chạy câu lệnh trong OnClosePopUp: function (){} khi tắt PopUp
                // Obj_FN_Main.OnClosePp(true,true)-----------Đóng Pop Up + chạy câu lệnh trong OnClosePopUp: function (){}

                var objPanel = {                 // Khai báo các thành phần của panel
                    pnMain: {
                        tag: 'div', attr: 'class="panel-itl"'
                        , childTags: [{ div: 'class="row"' }]
                        , pnForm: { tag: 'div', attr: 'class="col-md-12 pn-margin-b-30"' }
                        , pnContent: { tag: 'div', attr: 'class="col-md-12"' }
                        //--------------END - GETLIST
                    }
                }

                var objEvtPanel = {}
                objEvtPanel.pnForm = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    pngPn.getForm({
                        action: 1,
                        objInput: {
                            strGroupName: {
                                title: 'Group Name', attr: "class='col-md-3'"
                                , input: { IsNoInput: true, IsViewDtl: true }
                            }
                            , intTotalPax: {
                                title: '<span langkey="pg_Dft_TC_LtBk_GroupSize"></span>', attr: "class='col-md-3'"
                                , input: { IsNoInput: true, IsViewDtl: true }
                            }
                            // ,strCompanyName:{title:'<span langkey="pg_Dft_TC_LtBk_CompanyName"></span>',attr:"class='col-md-3'"
                            //     ,input:{IsNoInput:true,IsViewDtl:true}
                            // }
                            , dtmDateFromTo: {
                                title: '<span langkey="pg_Dft_TC_LtBk_DateFrom-DateTo"></span>', attr: "class='col-md-3'"
                                , input: { IsNoInput: true, IsViewDtl: true }
                            }
                            , ________________0: { title: '', attr: "class='col-md-12' style='margin:0'", input: { IsNoInput: true, IsViewDtl: true } }
                            , dblPriceTotalView: {
                                title: 'Total Price', attr: "class='col-md-3'"
                                , input: { IsNoInput: true, IsViewDtl: true }
                            }
                            , dblPricePaidView: {
                                title: 'Paid', attr: "class='col-md-3'"
                                , input: { IsNoInput: true, IsViewDtl: true }
                            }
                            , dblPriceBalanceView: {
                                title: 'Balance', attr: "class='col-md-3'"
                                , input: { IsNoInput: true, IsViewDtl: true }
                            }
                        },
                        idOrClass: IdOrClass_Pn,
                        objDetail: Obj_BookingDetail,
                        OnChkSuccess: function () { }
                    })


                }

                objEvtPanel.pnContent = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn


                    Arr_AgentHostBooking.forEach(function (value, key) {
                        strHtml = ''
                        strHtml += '<div class="pn-margin-t-b-15"><b>' + (key + 1) + '. </b>' + value.strCompanyName + (value.strCompanyPhone ? ' - <b>Phone:</b> ' + value.strCompanyPhone : '') + (value.strCompanyEmail ? ' - <b>Email:</b> ' + value.strCompanyEmail : '') + '</div>'
                        strHtml += '<div class="' + value.strAgentHostBookingGUID + '"></div>'
                        $(IdOrClass_Pn).append(strHtml)

                        var arr = Arr_PaidBookingItem.filter(function (item) { return item.strAgentHostBookingGUID == value.strAgentHostBookingGUID })

                        GetListPriceForCompany(arr, IdOrClass_Pn + ' .' + value.strAgentHostBookingGUID)
                    })

                    function GetListPriceForCompany(_arrPriceTable, _idOrClass) {

                        var IdOrClass_Pn_Item = _idOrClass
                        var ArrPriceTableItem = _arrPriceTable


                        pngPn.getTable2({
                            objApi: null
                            , objParams_Cus: null
                            , editRltArr: function (arr) {
                                return ArrPriceTableItem
                            }
                            , editRlt: function (value, key) {
                                value['No'] = (key + 1)

                                value['dblPaidAmount_View'] = $.pngFormatPrice(value['dblPaidAmount'])
                                value['dtmPaidDate_View'] = $.pngFormatDateTime(value['dtmPaidDate'])


                            }
                            , objCols: {
                                'No': { name: 'No' }
                                // ,strServiceName:{name:'Service Name'}
                                // ,dtmDateFrom:{name:'Date From'}
                                // ,dtmDateTo:{name:'Date To'}
                                , dblPaidAmount_View: { name: 'Total Paid' }
                                , strPaymentMethodName: { name: 'Payment Method' }
                                , strRemark: { name: 'Remark' }
                                , dtmPaidDate_View: { name: 'Paid Date' }
                            }
                            // ,editTableInput:function(){}
                            , changeCkbMaster: function (IsChecked, intRowID, arrList) {

                                ArrPriceTableItem = arrList
                            }
                            , customEvent: function (_idOrClassPn) {



                            }
                            // ,changeInput:function(){}
                            , IsViewCheckBoxMain: false
                            , idOrClass: IdOrClass_Pn_Item
                        })


                    }

                }
                // ===================================

                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })

            }

        }

        
        $.ModulePage_ListBookingMain_PopUpPayable = function (options) {
            var defaults = {
                strUserGUID: null
                , strCompanyGUID: null
                , objBookingDetail: null
                , OnSuccess: function () {

                }
            }
            options = $.extend(defaults, options);

            var IdOrClass_Main = ''


            var Obj_BookingDetail = JSON.parse(JSON.stringify(options.objBookingDetail))

            Obj_BookingDetail['dblPriceTotalView'] = $.pngFormatPrice(Obj_BookingDetail['dblPriceTotal'])
            Obj_BookingDetail['dblPricePaidView'] = $.pngFormatPrice(Obj_BookingDetail['dblPricePaid'])
            Obj_BookingDetail['dblPriceBalanceView'] = $.pngFormatPrice(Obj_BookingDetail['dblPriceBalance'])


            var Str_ReturnUrl = png.ObjClnUrl.APPB2B_Agent
            Str_ReturnUrl = $.pngGetQSVal('cname', $.pngGetQSVal('cname'), Str_ReturnUrl)
            Str_ReturnUrl = $.pngGetQSVal('page', 'payonline-return', Str_ReturnUrl)
            Str_ReturnUrl = $.pngGetQSVal('IsBooking', 'Book', Str_ReturnUrl)


            var ObjList_Api = {
                GetListPayableBookingItemByAgent: {
                    strApiLink: 'api/payrcvbooking/GetListPayableBookingItemByAgent'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingGUID: Obj_BookingDetail.strPassengerBookingGUID
                        , strBookingByAgentHostGUID: Obj_BookingDetail.strBookingByAgentHostGUID
                        , tblsReturn: null
                    }
                },
                GetFilterCompanyBankAccount: {
                    strApiLink: 'api/user/GetFilterCompanyBankAccount'
                    , objParams: {
                        strAgentCode: null
                        , strWhere: null
                        , strOrder: null
                        , strCompanyGUID: null
                        , intCurPage: null
                        , intPageSize: null
                        , tblsReturn: null
                    }
                },
                AddOrUpdBookingToPayable: {
                    strApiLink: 'api/payrcvbooking/AddOrUpdBookingToPayable'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingGUID: Obj_BookingDetail.strBookingGUID
                        , intPaymentMethodID: null
                        , strListCompanyBankAccountGUID: null
                        , strPaidRemark: null
                    }
                },
                UpdPaymentBookingPeriodForBankCheckingIsPaidByAgent: {
                    strApiLink: 'api/payrcvbooking/UpdPaymentBookingPeriodForBankCheckingIsPaidByAgent'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strPaymentBookingPeriodGUID: null
                        , intPayableStatusID: null
                    }
                },
                GetCheckRemainCreditForPaymentBookingByAgent: {
                    strApiLink: 'api/booking/GetCheckRemainCreditForPaymentBookingByAgent'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strCompanyGUID: options.strCompanyGUID
                        , strBookingGUID: Obj_BookingDetail.strBookingGUID
                    }
                },

                GetUrlPayOnline: {
                    strApiLink: 'api/payonline/GetUrlPayOnline'
                    , objParams: {
                        strOrderBeforePaymentCode: null
                        , strReturnUrl: Str_ReturnUrl
                        , dblAmount: 0
                        , strDescription: "payment online"
                    }
                },

                AddPaymentTransactionByAgent: {
                    strApiLink: 'api/booking/AddPaymentTransactionByAgent'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strOrderBookingCode: Obj_BookingDetail.strOrderBookingCode
                        , intOrderStatusID: 4
                        , strAgentCode: JSON.parse(png.ArrLS.UserDetail.get()).strAgentCode
                        , dblPaymentTransactionAmount: null
                        , strRemark: null
                    }
                },
            }

            var ObjList_ComboValue = {
                Arr_ValCode: {
                    strCombocode: ''
                }
                , Arr_PaymentMethod: {
                    strTableName: 'OB12'
                    , strFeildSelect: 'OB12_PaymentMethodID AS intID,OB12_PaymentMethodName AS strName'
                    , strWhere: 'WHERE IsActive=1 ORDER BY OB12_Order'
                }
            }

            var Arr_PaymentMethod = []
            var Arr_PayableBookingItem = []
            var Arr_PaymentBookingPeriod = []
            var Arr_AgentHostBooking = []

            var Obj_FormBooking = {
                dblPriceCharge: 0
            }
            //---------
            var Obj_FN_Main = {}
            //---------

            png.postListApiGetValue({
                // objList_Api: ObjList_Api
                objList_ComboValue: ObjList_ComboValue
                // ,objListApi_RtnVal: {
                //     'GetListPayableBookingItemByAgent':{
                //         objParams_Cus:{
                //             tblsReturn: '[0][1][2]'
                //         }, OnSuccess: function(data){ 

                //             Arr_PayableBookingItem = JSON.parse(data)[0]
                //             Arr_PaymentBookingPeriod = JSON.parse(data)[1]
                //             Arr_AgentHostBooking = JSON.parse(data)[2]
                //         }
                //     }
                // }
                , objListComboValue_RtnVal: {
                    'Arr_PaymentMethod': {
                        objParams_Cus: {},
                        OnSuccess: function (data) {
                            Arr_PaymentMethod = data   // Dữ liệu trả về từ dropdownlist trên
                        }
                    }
                }
                , OnSuccessList: function (data) {
                    GetPopUp()

                }
            })


            function GetPopUp() {
                pngPn.getPopUp({
                    strTitle: 'List Payable'
                    , intTypeSize: 2//------------1 small ---2 medium ---3 large
                    , OnPanel: GetMainPanel
                    , OnClosePopUp: function () {
                        //------Chọn sự kiện khi Đóng PopUP
                        options.OnSuccess.call()
                    }
                })
            }

            function GetMainPanel(_IdOrClassPp, _OnClosePp) {

                IdOrClass_Main = _IdOrClassPp
                Obj_FN_Main.OnClosePp = _OnClosePp

                // Obj_FN_Main.OnClosePp(true)----------- chạy câu lệnh trong OnClosePopUp: function (){} khi tắt PopUp
                // Obj_FN_Main.OnClosePp(true,true)-----------Đóng Pop Up + chạy câu lệnh trong OnClosePopUp: function (){}

                var objPanel = {                 // Khai báo các thành phần của panel
                    pnMain: {
                        tag: 'div', attr: 'class="panel-itl"'
                        , childTags: [{ div: 'class="row"' }]
                        , pnForm: { tag: 'div', attr: 'class="col-md-12 pn-margin-b-30"' }
                        , pnContent: { tag: 'div', attr: 'class="col-md-12"' }
                        //--------------END - GETLIST
                    }
                }

                var objEvtPanel = {}
                objEvtPanel.pnForm = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    pngPn.getForm({
                        action: 1,
                        objInput: {
                            strGroupName: {
                                title: 'Group Name', attr: "class='col-md-3'"
                                , input: { IsNoInput: true, IsViewDtl: true }
                            }
                            , intGroupSize: {
                                title: '<span langkey="pg_Dft_TC_LtBk_GroupSize"></span>', attr: "class='col-md-3'"
                                , input: { IsNoInput: true, IsViewDtl: true }
                            }
                            // ,strCompanyName:{title:'<span langkey="pg_Dft_TC_LtBk_CompanyName"></span>',attr:"class='col-md-3'"
                            //     ,input:{IsNoInput:true,IsViewDtl:true}
                            // }
                            , dtmDateFromTo: {
                                title: '<span langkey="pg_Dft_TC_LtBk_DateFrom-DateTo"></span>', attr: "class='col-md-3'"
                                , input: { IsNoInput: true, IsViewDtl: true }
                            }
                            , ________________0: { title: '', attr: "class='col-md-12' style='margin:0'", input: { IsNoInput: true, IsViewDtl: true } }
                            , strOrderStatusName: {
                                title: 'Booking Status', attr: "class='col-md-3'"
                                , input: { IsNoInput: true, IsViewDtl: true }
                            }
                            , dblPriceTotalView: {
                                title: 'Total Price', attr: "class='col-md-3'"
                                , input: { IsNoInput: true, IsViewDtl: true }
                            }
                            , dblPricePaidView: {
                                title: 'Paid', attr: "class='col-md-3'"
                                , input: { IsNoInput: true, IsViewDtl: true }
                            }
                            , dblPriceBalanceView: {
                                title: 'Balance', attr: "class='col-md-3'"
                                , input: { IsNoInput: true, IsViewDtl: true }
                            }
                        },
                        idOrClass: IdOrClass_Pn,
                        objDetail: Obj_BookingDetail,
                        OnChkSuccess: function () { }
                    })


                }

                objEvtPanel.pnContent = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    png.postListApiGetValue({
                        objList_Api: ObjList_Api
                        , objListApi_RtnVal: {
                            'GetListPayableBookingItemByAgent': {
                                objParams_Cus: {
                                    tblsReturn: '[0][1][2]'
                                }, OnSuccess: function (data) {

                                    Arr_PayableBookingItem = JSON.parse(data)[0]
                                    Arr_PaymentBookingPeriod = JSON.parse(data)[1]
                                    Arr_AgentHostBooking = JSON.parse(data)[2]
                                }
                            }
                        }
                        , OnSuccessList: function (data) {

                            GetMain()

                        }
                    })

                    function GetMain() {
                        var strHtml = ''
                        strHtml += '<div class="row pn-padding-t-15" style="background:#EBEDEE">'
                        strHtml += '<div class="col-md-12">'
                        strHtml += '<div id="pnTabList"></div>'
                        strHtml += '</div>'
                        strHtml += '</div>'
                        strHtml += '<div id="pnTabCnt" class="pn-margin-t-b-15"></div>'
                        $(IdOrClass_Pn).html(strHtml)

                        var ObjListTab = {}


                        ObjListTab['BankChecking'] = {
                            name: 'Bank Checking(' + Arr_PaymentBookingPeriod.length + ')', isDefault: true,
                            OnClick: function () {

                                pnContent_TabBankChecking({
                                    idOrClass: IdOrClass_Pn + ' #pnTabCnt'
                                    , OnSuccess: function () {
                                        Obj_FN_Main.pnMain('pnContent')
                                        Obj_FN_Main.OnClosePp(true)
                                    }
                                })
                            }
                        }

                        ObjListTab['Payable'] = {
                            name: 'Payable(' + Arr_PayableBookingItem.length + ')', isDefault: false,
                            OnClick: function () {

                                // if(Arr_PayableBookingItem.length!=0)
                                pnContent_TabPayable({
                                    idOrClass: IdOrClass_Pn + ' #pnTabCnt'
                                    , OnSuccess: function () {
                                        Obj_FN_Main.pnMain('pnContent')
                                        Obj_FN_Main.OnClosePp(true)
                                    }
                                })
                                // else
                                //     $(IdOrClass_Pn+' #pnTabCnt').html('')

                            }
                        }

                        pngElm.getTabs({
                            idOrClassPnTab: IdOrClass_Pn + ' #pnTabList'
                            , arrTab: ObjListTab
                            // ,IsPushUrl: true//-------Cho hiện Query String trên URL
                            // ,strQueryName:'tab'//--------Trên Query String của Tab(mặc định 'Tab')
                        })

                    }

                }

                function pnContent_TabBankChecking(_Opt) {

                    var Dft = {
                        idOrClass: ''
                        , OnSuccess: function () { }
                    }
                    _Opt = $.extend(Dft, _Opt);

                    var IdOrClass_Pn = _Opt.idOrClass

                    var strHtml = ''
                    strHtml += '<div class="pnBtn pn-padding-t-b-15"></div>'
                    strHtml += '<div class="pnTblList"></div>'
                    strHtml += '<div class="pnTblList_Print" style="display:none"></div>'
                    $(IdOrClass_Pn).html(strHtml)


                    pngPn.getTable2({
                        objApi: null
                        , objParams_Cus: null
                        , objCols: {
                            'No': { name: '<span langkey="sys_Txt_No"></span>' }
                            , strCompanyName: { name: 'Company Name' }
                            , dblPayableAmount_View: { name: 'Payable' }
                            , dblPayablePaid_View: { name: 'Payable Paid' }
                            , dblPayableBalance_View: { name: 'Payable Balance' }
                            , dtmDateDeadline_View: { name: 'Deadline' }
                            , strHtmlBankInfo: { name: 'Bank Info' }
                            , dtmCreatedDate_View: { name: 'Create Date' }
                            , strHtmlAction: {
                                name: 'Action',
                                // input:{
                                //     title:'',attr:"class='col-md-12' style='margin:0'",isRequire:false,IsRtn:true
                                //     ,input:{type:'select',classEx:'form-control',attr:' style="width: 100px;" '}
                                //     ,dropDown:{arrList:[{1:'Not Paid'},{2:'Paid'}]}
                                // }
                            }
                        }
                        , editRltArr: function (arr) {
                            return Arr_PaymentBookingPeriod
                        }
                        , editRlt: function (value, key) {

                            value['No'] = (key + 1)

                            var strHtml = ''
                            strHtml += '<b>Account Name:</b> ' + value.strCompanyBankAccountName
                            strHtml += '<br><b>Account Code:</b> ' + value.strCompanyBankAccountCode
                            strHtml += '<br><b>Bank Name:</b> ' + value.strCompanyBankAccountInfo
                            strHtml += '<br><b>Bank Add:</b> ' + value.strBankAddress
                            strHtml += '<br><b>SwiftCode:</b> ' + value.strSwiftCode
                            value['strHtmlBankInfo'] = strHtml

                            value['dblPayableAmount_View'] = $.pngFormatPrice(value['dblPayableAmount'])
                            value['dblPayablePaid_View'] = $.pngFormatPrice(value['dblPayablePaid'])
                            value['dblPayableBalance_View'] = $.pngFormatPrice(value['dblPayableBalance'])
                            value['dtmDateDeadline_View'] = $.pngFormatDateTime(value['dtmDateDeadline'])
                            value['dtmCreatedDate_View'] = $.pngFormatDateTime(value['dtmCreatedDate'])
                            // value['strHtmlIsPaid'] = (value['IsPaid']? 1:0)

                            value.strHtmlAction = ''
                            if (value.intPayableStatusID == 1) {
                                value.strHtmlAction += 'Chưa chuyển khoản'
                                value.strHtmlAction += '<button class="btn bg-primary" action="Payment">Đã chuyển khoản</button>'
                            }
                            else
                                value.strHtmlAction += 'Đang chờ xác nhận chuyển khoản'
                        }
                        , customEvent: function (_idOrClassPn) {


                            $('button', _idOrClassPn).click(function (e) {
                                var action = $(this).attr('action')

                                if (action == 'Payment') {
                                    var data = $(this).parents('tr').attr('row')

                                    // var valOld = JSON.parse(JSON.stringify(Arr_PaymentBookingPeriod))[data].intPayableStatusID
                                    // console.log(valOld)
                                    pnContent_TabBankChecking_PopUpCheckPaid({
                                        objDetail: $.pngExtendObj(Arr_PaymentBookingPeriod[data], {
                                            intPayableStatusID: 2
                                        })
                                        , OnSuccess: function () {
                                            _Opt.OnSuccess.call()
                                        }
                                    })
                                }
                            })
                            $('.intPayableStatusID', _idOrClassPn).change(function (e) {

                                if (typeof e.originalEvent != 'undefined') {
                                    var data = $(this).parents('tr').attr('row')

                                    var valOld = JSON.parse(JSON.stringify(Arr_PaymentBookingPeriod))[data].intPayableStatusID
                                    console.log(valOld)
                                    pnContent_TabBankChecking_PopUpCheckPaid({
                                        objDetail: Arr_PaymentBookingPeriod[data]
                                        , OnSuccess: function () {
                                            _Opt.OnSuccess.call()
                                        }
                                        , OnNoSave: function () {
                                            console.log(valOld)
                                            $('[row=' + data + '] .intPayableStatusID', _idOrClassPn).val(valOld).change()
                                        }
                                    })
                                }

                            })

                        }
                        , changeCkbMaster: function (_IsChecked, _intRowID, _arrList) {
                            // if (_IsChecked)
                            //     $(IdOrClass_Pn + ' tr[row=' + _intRowID + '] td').css('background', '#c4c400')
                            // else
                            //     $(IdOrClass_Pn + ' tr[row=' + _intRowID + '] td').removeAttr('style')


                            // if($(IdOrClass_Pn+' input[chkboxMaster="true"]:checked').length == 0){
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit>span.intITs").text('')
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit").hide()
                            // }else{
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit>span.intITs").text(' (' + $(IdOrClass_Pn+' input[chkboxMaster="true"]:checked').length + ' item(s))')
                            //     $(IdOrClass_Main+ " #pnListBtn .viewedit").show()
                            // }

                            // Arr_ListTbl = _arrList
                        }
                        , IsViewCheckBoxMain: false
                        , idOrClass: IdOrClass_Pn + ' .pnTblList'
                    })

                    if (Arr_PaymentBookingPeriod.length) {

                        $(IdOrClass_Pn + ' .pnTblList_Print').html($(IdOrClass_Pn + ' .pnTblList').html())
                        $(IdOrClass_Pn + ' .pnTblList_Print').find('tr th:last-child,tr td:last-child').remove()
                        $(IdOrClass_Pn + ' .pnTblList_Print').find('table').attr('border', '1').attr('cellspacing', '0').attr('cellpadding', '5')


                        strHtml = ''
                        strHtml += '<button class="btn btn-default btn-texticon bg-white btnPrint"><i class="fa fa-print"></i><span>Print</span></button>'
                        $(IdOrClass_Pn + ' .pnBtn').html(strHtml)

                        $(IdOrClass_Pn + ' .btnPrint').click(function () {
                            pngPn.getPopUpPrint({
                                idOrClass: IdOrClass_Pn + ' .pnTblList_Print'
                            })
                        })
                    }

                }

                function pnContent_TabBankChecking_PopUpCheckPaid(_Opt) {
                    var Dft = {
                        objDetail: {}
                        , OnSuccess: function () { }
                        , OnNoSave: function () { }
                    }
                    _Opt = $.extend(Dft, _Opt);

                    var IdOrClass_Pn = ''
                    var ObjDetail = _Opt.objDetail
                    var IsNoSave = true

                    Obj_FN_Main.ppCheckPaid = {}

                    GetPopUp()
                    function GetPopUp() {
                        pngPn.getPopUp({
                            strTitle: 'Check Paid'
                            , intTypeSize: 2//------------1 small ---2 medium ---3 large
                            , OnPanel: GetMainPanel
                            , OnClosePopUp: function () {
                                if (IsNoSave) {
                                    _Opt.OnNoSave.call()
                                }
                                //------Chọn sự kiện khi Đóng PopUP
                            }
                        })
                    }

                    function GetMainPanel(_IdOrClassPp, _OnClosePp) {

                        IdOrClass_Pn = _IdOrClassPp
                        Obj_FN_Main.ppCheckPaid.OnClosePp = _OnClosePp

                        Obj_FN_Main.ppCheckPaid.OnClosePp(true)//----------- chạy câu lệnh trong OnClosePopUp: function (){} khi tắt PopUp
                        // Obj_FN_Main.OnClosePp(true,true)-----------Đóng Pop Up + chạy câu lệnh trong OnClosePopUp: function (){}


                        var objPanel = {                 // Khai báo các thành phần của panel
                            pnMain: {
                                tag: 'div', attr: 'class="panel-itl"'
                                , childTags: [{ div: 'class="row"' }]
                                , pnContent: { tag: 'div', attr: 'class="col-md-12"' }
                                , pnBtn: { tag: 'div', attr: 'class="col-md-12"' }
                                //--------------END - GETLIST
                            }
                        }


                        var objEvtPanel = {}
                        objEvtPanel.pnContent = function (_idOrClassPn) {
                            var IdOrClass_Pn = _idOrClassPn


                            pngPn.getForm({
                                action: 1,
                                objInput: {
                                    strCompanyName: {
                                        title: 'Company Name', attr: "class='col-md-3'"
                                        , input: { IsNoInput: true, IsViewDtl: true }
                                    }
                                    , ________________0: { title: '', attr: "class='col-md-12' style='margin:0'", input: { IsNoInput: true, IsViewDtl: true } }
                                    , dblPayableAmount_View: {
                                        title: 'Payable', attr: "class='col-md-3'"
                                        , input: { IsNoInput: true, IsViewDtl: true }
                                    }
                                    , dblPayablePaid_View: {
                                        title: 'Payable Paid', attr: "class='col-md-3'"
                                        , input: { IsNoInput: true, IsViewDtl: true }
                                    }
                                    , dblPayableBalance_View: {
                                        title: 'Payable Balance', attr: "class='col-md-3'"
                                        , input: { IsNoInput: true, IsViewDtl: true }
                                    }
                                    , dtmDateDeadline_View: {
                                        title: 'Deadline', attr: "class='col-md-3'"
                                        , input: { IsNoInput: true, IsViewDtl: true }
                                    }
                                    , ________________1: { title: '', attr: "class='col-md-12' style='margin:0'", input: { IsNoInput: true, IsViewDtl: true } }

                                    , strCompanyBankAccountName: {
                                        title: 'Account Name', attr: "class='col-md-3'"
                                        , input: { IsNoInput: true, IsViewDtl: true }
                                    }
                                    , strCompanyBankAccountCode: {
                                        title: 'Bank Account Code', attr: "class='col-md-3'"
                                        , input: { IsNoInput: true, IsViewDtl: true }
                                    }
                                    , strCompanyBankAccountInfo: {
                                        title: 'Bank Account Info', attr: "class='col-md-3'"
                                        , input: { IsNoInput: true, IsViewDtl: true }
                                    }
                                    , strBankAddress: {
                                        title: 'strBankAddress', attr: "class='col-md-3'"
                                        , input: { IsNoInput: true, IsViewDtl: true }
                                    }
                                    , ________________2: { title: '', attr: "class='col-md-12' style='margin:0'", input: { IsNoInput: true, IsViewDtl: true } }
                                    , strSwiftCode: {
                                        title: 'strSwiftCode', attr: "class='col-md-3'"
                                        , input: { IsNoInput: true, IsViewDtl: true }
                                    }
                                },
                                idOrClass: IdOrClass_Pn,
                                objDetail: ObjDetail,
                                OnChkSuccess: function () { }
                            })


                        }

                        objEvtPanel.pnBtn = function (_idOrClassPn) {
                            var IdOrClass_Pn = _idOrClassPn

                            var strHtml = ''

                            strHtml += '<button class="btn btn-texticon bg-primary"  id="btnCheckPaid"><span>Payment Confirm</span></button> '
                            $(IdOrClass_Pn).html(strHtml)

                            $('#btnCheckPaid', IdOrClass_Pn).click(function () {
                                $.Confirm({
                                    strContent: '<span langkey="sys_Cfm_AYS"></span>'
                                    , OnSuccess: function () {
                                        IsNoSave = false
                                        png.postListApiGetValue({
                                            objList_Api: ObjList_Api
                                            , objListApi_RtnVal: {
                                                'UpdPaymentBookingPeriodForBankCheckingIsPaidByAgent': {
                                                    objParams_Cus: {
                                                        strPaymentBookingPeriodGUID: ObjDetail.strPaymentBookingPeriodGUID
                                                        , intPayableStatusID: ObjDetail.intPayableStatusID
                                                    }
                                                    , OnSuccess: function (data) {
                                                        _Opt.OnSuccess.call()
                                                        Obj_FN_Main.ppCheckPaid.OnClosePp(true, true)
                                                        $.Confirm({ strContent: 'Check Paid Successfully!' })
                                                    }
                                                }
                                            }
                                        })
                                    }
                                })
                            })
                        }

                        // ===================================

                        pngPn.getPanelHtml({            // Get ra panel dạng html
                            objPanel: objPanel
                            , objEvtPanel: objEvtPanel
                            , idOrClass: IdOrClass_Pn  // Id or class chính
                            , OnChangeIdPn: function (_Fn) {
                                Obj_FN_Main.ppCheckPaid.pnMain = _Fn    // Hàm đổi trang
                            }
                        })


                    }

                }


                function pnContent_TabPayable(_Opt) {
                    var Dft = {
                        idOrClass: ''
                        , OnSuccess: function () { }
                    }
                    _Opt = $.extend(Dft, _Opt);

                    var IdOrClass_Pn = _Opt.idOrClass

                    var IsViewPayment = false

                    var strHtml = ''
                    // if(Obj_BookingDetail.intOrderStatusID != 3){
                    //     strHtml+= '<div class="pn-margin-t-b-30">'
                    //         strHtml += '<button class="btn btn-texticon bg-success txt-white" id="btnAddNextPay"><i class="fa fa-plus"></i><span>Add Next Payment Term</span></button> '
                    //     strHtml+= '</div>'
                    // }
                    strHtml += '<div class="pnTable"></div>'
                    strHtml += '<div class="pnForm"></div>'

                    $(IdOrClass_Pn).html(strHtml)


                    if (Arr_PayableBookingItem.length != 0) {
                        Arr_AgentHostBooking.forEach(function (value, key) {
                            strHtml = ''
                            strHtml += '<div class="pn-margin-t-b-15"><b>' + (key + 1) + '. </b>' + value.strCompanyName + (value.strCompanyPhone ? ' - <b>Phone:</b> ' + value.strCompanyPhone : '') + (value.strCompanyEmail ? ' - <b>Email:</b> ' + value.strCompanyEmail : '') + '</div>'
                            strHtml += '<div class="' + value.strAgentHostBookingGUID + '"></div>'
                            $(IdOrClass_Pn + ' .pnTable').append(strHtml)

                            var arr = Arr_PayableBookingItem.filter(function (item) { return item.strAgentHostBookingGUID == value.strAgentHostBookingGUID })

                            GetListPriceForCompany(arr, IdOrClass_Pn + ' .' + value.strAgentHostBookingGUID)
                        })

                        if (Obj_BookingDetail.intOrderStatusID != 3) {
                            $(IdOrClass_Pn + ' .pnForm').html('<button class="btn btn-default txt-primary" id="btnPayment">View Payment</button> ')
                        }
                    }


                    $('#btnPayment').click(function () {
                        GetForm(IdOrClass_Pn + ' .pnForm')
                    })


                    function GetListPriceForCompany(_arrPriceTable, _idOrClass) {

                        var IdOrClass_Pn_Item = _idOrClass
                        var ArrPriceTableItem = _arrPriceTable


                        pngPn.getTable2({
                            objApi: null
                            , objParams_Cus: null
                            , editRltArr: function (arr) {
                                return ArrPriceTableItem
                            }
                            , editRlt: function (value, key) {
                                value['No'] = (key + 1)

                                value['IsEnableInput'] = 1

                                value['dtmDateFrom_View'] = $.pngFormatDateTime(value['dtmDateFrom'])
                                value['dtmDateTo_View'] = $.pngFormatDateTime(value['dtmDateTo'])
                                value['dblPayableAmount_View'] = $.pngFormatPrice(value['dblPayableAmount'])


                            }
                            , objCols: {
                                'No': { name: 'No' }
                                , strServiceName: { name: 'Service Name' }
                                , strPayableTypeName: { name: 'Payable Type' }
                                , dtmDateFrom_View: { name: 'Date From' }
                                , dtmDateTo_View: { name: 'Date To' }
                                , dblPayableAmount_View: { name: 'Price Payable' }
                            }
                            // ,editTableInput:function(){}
                            , changeCkbMaster: function (IsChecked, intRowID, arrList) {

                                ArrPriceTableItem = arrList

                                // if(IsViewPayment){
                                //     GetForm(IdOrClass_Pn+' .pnForm')
                                // }
                            }
                            , customEvent: function (_idOrClassPn) {



                            }
                            // ,changeInput:function(){}
                            , IsViewCheckBoxMain: false
                            , idOrClass: IdOrClass_Pn_Item
                        })


                    }

                    function GetForm(_idOrClass) {
                        var IdOrClass_Pn_Item = _idOrClass

                        IsViewPayment = true

                        var DblCreditRemain = 0

                        var Obj_ListArrListAcount = {}

                        coreLoadPage.getCredit({
                            OnSuccess: function (obj) {
                                DblCreditRemain = obj.dblCreditRemain
                            }
                        })

                        Obj_FormBooking.dblPriceCharge = 0
                        Arr_PayableBookingItem.forEach(function (value) {
                            Obj_FormBooking.dblPriceCharge += value.dblPayableAmount
                        })

                        var strHtml = ''
                        strHtml += '<hr class="pn-margiin-t-b-15">'
                        strHtml += '<div class="form"></div>'
                        strHtml += '<button class="btn btn-texticon bg-primary" id="btnPayment2"><i class="fa fa-usd"></i><span>Payment</span></button> '

                        $(IdOrClass_Pn_Item).html(strHtml)

                        var Obj_FormInput = {
                            intPaymentMethodID: {
                                title: 'Phương thức thanh toán', attr: "class='col-md-4'", isRequire: false, IsRtn: true
                                , input: { type: 'select', classEx: 'form-control', attr: '' }
                                , dropDown: { arrList: $.pngGetArrComboValue(Arr_PaymentMethod, 'intID', 'strName') }
                            },
                            dblPriceTotal_View: {
                                title: 'Total Payable', attr: "class='col-md-4'"
                                , input: { IsNoInput: true, IsViewDtl: true }
                            },
                            pnPayEx: {
                                title: '', attr: "class='col-md-12'"
                                , input: { IsNoInput: true }
                            },
                            strPaidRemark: {
                                title: 'Remark', isRequire: false, attr: "class='col-md-12'", IsRtn: true
                                , input: { type: 'textarea', classEx: 'form-control', attr: 'rows="5" ' }//====> Có Attr ckeditor sẽ hiển thị CK Editor
                            }
                        }

                        pngPn.getForm({
                            action: 1,
                            objInput: Obj_FormInput,
                            idOrClass: IdOrClass_Pn_Item + ' .form',
                            objDetail: {
                                dblPriceTotal_View: $.pngFormatPrice(Obj_FormBooking.dblPriceCharge)
                            },
                        })



                        $(".intPaymentMethodID", IdOrClass_Pn_Item).change(function () {
                            $('#btnPayment2', IdOrClass_Pn_Item).attr('disabled', false)
                            // Obj_Payment['strCompanyBankAccountGUID'] = null
                            var strHtml = ''

                            if (this.value == 11) {
                                strHtml += pngElm.getLangKey({ langkey: 'sys_Txt_Creditbalance' }) + ': <b>' + $.pngFormatPrice(DblCreditRemain) + '</b>'
                                $('.pnElm-pnPayEx').html(strHtml)

                                if (Obj_FormBooking.dblPriceCharge > DblCreditRemain) {
                                    $('#btnPayment2', IdOrClass_Pn).attr('disabled', true)
                                }
                            }

                            if (this.value == 1) {


                                if (Object.keys(Obj_ListArrListAcount).length == 0) {
                                    png.postList({
                                        objApi: ObjList_Api['GetFilterCompanyBankAccount'],
                                        arrInput: Arr_AgentHostBooking,
                                        intCallApiPerTime: 1,
                                        OnSuccessItem: function (objParam, data) {
                                            Obj_ListArrListAcount[objParam.strCompanyGUID] = JSON.parse(data)[0]
                                        },
                                        //GEN
                                        OnSuccess: function (data) {
                                            GetPanelAccount()
                                        }
                                    })
                                } else {
                                    GetPanelAccount()
                                }


                                function GetPanelAccount() {


                                    pngPn.getTable2({
                                        objApi: null
                                        , objParams_Cus: null
                                        , editRltArr: function (arr) {
                                            return Arr_AgentHostBooking
                                        }
                                        , editRlt: function (value, key) {
                                            value['No'] = (key + 1)

                                        }
                                        , objCols: {
                                            'No': { name: '<span langkey="sys_Txt_Tbl-No"></span>' }
                                            , strCompanyName: { name: 'Company Name' }
                                            , pnAccount: { name: 'Account' }
                                            , strDescription: { name: 'Description' }
                                        }
                                        // ,editTableInput:function(){}
                                        , changeCkbMaster: function (IsChecked, intRowID, arrList) {


                                            // ArrPriceTableItem = arrList
                                        }
                                        , customEvent: function (_idOrClassPn) {
                                            Arr_AgentHostBooking.forEach(function (value, key) {
                                                pngPn.getForm({
                                                    action: 1,
                                                    objInput: {
                                                        strListCompanyBankAccountGUID: {
                                                            title: '', attr: "class='col-md-12' style='margin:0'", isRequire: false, IsRtn: true
                                                            , input: { type: 'select', classEx: 'form-control', attr: ' guid="' + value.strCompanyGUID + '" ' }

                                                            , dropDown: { arrList: $.pngGetArrComboValue(Obj_ListArrListAcount[value.strCompanyGUID.toLowerCase()], 'strCompanyBankAccountGUID', 'strNameDisplay') }
                                                        }
                                                    },
                                                    idOrClass: 'tr[row=' + key + '] .pn-pnAccount', _idOrClassPn,
                                                    objDetail: {}
                                                })
                                            })

                                            $(_idOrClassPn).find('select').change(function () {
                                                var data = $(this).parents('tr').attr('row')
                                                var strCompanyGUID = $(this).attr('guid')
                                                var Arr = Obj_ListArrListAcount[strCompanyGUID]
                                                var self = this
                                                // Obj_Payment['strCompanyBankAccountGUID'] = this.value
                                                var obj = Arr.filter(function (item) { return item.strCompanyBankAccountGUID == self.value })[0]

                                                strHtml = ''
                                                strHtml += '<b>Account Name:</b> ' + obj.strCompanyBankAccountName
                                                strHtml += '<br><b>Account Code:</b> ' + obj.strCompanyBankAccountCode
                                                strHtml += '<br><b>Bank Name:</b> ' + obj.strCompanyBankAccountInfo
                                                strHtml += '<br><b>Bank Add:</b> ' + obj.strBankAddress
                                                strHtml += '<br><b>SwiftCode:</b> ' + obj.strSwiftCode
                                                $(_idOrClassPn + ' tr[row=' + data + '] .pn-strDescription').html(strHtml)

                                            })



                                        }
                                        // ,changeInput:function(){}
                                        , IsViewCheckBoxMain: false
                                        , idOrClass: '.pnElm-pnPayEx'
                                    })


                                }




                            }

                            if (this.value == 3) {
                                // strHtml+= '<img src="https://logos-world.net/wp-content/uploads/2020/04/PayPal-Logo.png" style="height: 35px;">'
                                // strHtml+= '<img src="https://thietkelogo.com/wp-content/uploads/2017/10/logo-mastercard.jpg" style="height: 35px;">'
                                strHtml += 'Thanh toán qua <b>VN Pay</b>'
                                $('.pnElm-pnPayEx').html(strHtml)

                            }
                        }).change()



                        var ObjPayment = {}

                        $('#btnPayment2').click(function () {

                            $.Confirm({
                                strContent: '<span langkey="sys_Cfm_AYS"></span>'
                                , OnSuccess: function () {
                                    var strListCompanyBankAccountGUID = ''

                                    ObjPayment = pngPn.getForm({
                                        action: 2,
                                        objInput: Obj_FormInput,
                                        idOrClass: IdOrClass_Pn_Item + ' .form'
                                    })

                                    if (ObjPayment.intPaymentMethodID == 11) {
                                        ObjPayment.strListCompanyBankAccountGUID = null
                                        png.postListApiGetValue({
                                            objList_Api: ObjList_Api
                                            , objListApi_RtnVal: {
                                                'GetCheckRemainCreditForPaymentBookingByAgent': {
                                                    objParams_Cus: {}
                                                    , OnSuccess: function (data) {
                                                        var obj = JSON.parse(data)[0][0]
                                                        if (obj.IsCheckCredit) {

                                                            coreLoadPage.getCredit({
                                                                OnSuccess: function (obj) {
                                                                }
                                                            })
                                                            GetPayment()
                                                        } else {
                                                            $.Confirm({ strContent: 'You do not have enough Credit Limit. Your current credit amount is ' + $.pngFormatPrice(obj.dblCreditRemain) });
                                                        }
                                                    }
                                                }
                                            }
                                        })
                                    }

                                    if (ObjPayment.intPaymentMethodID == 1) {
                                        Arr_AgentHostBooking.forEach(function (value) {
                                            strListCompanyBankAccountGUID += value.strAgentHostBookingCode + '!' + value.strListCompanyBankAccountGUID + '#'
                                        })

                                        ObjPayment.strListCompanyBankAccountGUID = strListCompanyBankAccountGUID

                                        GetPayment()
                                    }


                                    if (ObjPayment.intPaymentMethodID == 3) {
                                        GetPayOnline()
                                    }


                                }
                            })

                        })


                        function GetPayment() {
                            png.postListApiGetValue({
                                objList_Api: ObjList_Api
                                , objListApi_RtnVal: {
                                    'AddOrUpdBookingToPayable': {
                                        objParams_Cus: ObjPayment
                                        , OnSuccess: function (data) {
                                            _Opt.OnSuccess.call()
                                            $.Confirm({ strContent: 'Payment Successfully!' })
                                        }
                                    }
                                }
                            })
                        }

                        function GetPayOnline() {

                            png.postListApiGetValue({
                                objList_Api: ObjList_Api
                                , objListApi_RtnVal: {
                                    'AddPaymentTransactionByAgent': {
                                        objParams_Cus: {
                                            dblPaymentTransactionAmount: Obj_FormBooking.dblPriceCharge
                                            , strRemark: (ObjPayment.strPaidRemark || "payment online")
                                        }
                                        , OnSuccess: function (data) {
                                            var obj = JSON.parse(data)[0][0]
                                            png.postListApiGetValue({
                                                objList_Api: ObjList_Api
                                                , objListApi_RtnVal: {
                                                    'GetUrlPayOnline': {
                                                        objParams_Cus: {
                                                            strOrderBeforePaymentCode: obj['strPaymentTransactionCode']
                                                            , dblAmount: Obj_FormBooking.dblPriceCharge
                                                            , strDescription: (ObjPayment.strPaidRemark || "payment online")
                                                        }
                                                        , OnSuccess: function (data) {
                                                            window.location.href = JSON.parse(data).strPaymentUrl
                                                        }
                                                    },
                                                }
                                            })
                                        }
                                    },
                                }
                            })
                        }


                    }




                }

                // ===================================

                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })

            }

        }



        $.ModulePage_ListBookingMain_PopUpChangeBooking = function (options) {
            var defaults = {
                strUserGUID: ''
                , strCompanyGUID: ''
                , strBookingGUID: ''
                , objBookingDetail: {}
                , OnSuccess: function () {
                }
            }
            options = $.extend(defaults, options);


            var IdOrClass_Main = ''

            var Obj_BookingDetail = options.objBookingDetail

            var Str_ReturnUrl = png.ObjClnUrl.APPB2B_Agent
            Str_ReturnUrl = $.pngGetQSVal('cname', $.pngGetQSVal('cname'), Str_ReturnUrl)
            Str_ReturnUrl = $.pngGetQSVal('page', 'payonline-return', Str_ReturnUrl)
            Str_ReturnUrl = $.pngGetQSVal('IsBooking', 'Hold', Str_ReturnUrl)

            var ObjList_Api = {
                GetFilterCompanyBankAccount: {
                    strApiLink: 'api/user/GetFilterCompanyBankAccount'
                    , objParams: {
                        strAgentCode: null
                        , strWhere: null
                        , strOrder: null
                        , strCompanyGUID: null
                        , intCurPage: null
                        , intPageSize: null
                        , tblsReturn: null
                    }
                },
                AddOrUpdBookingToPayable: {
                    strApiLink: 'api/payrcvbooking/AddOrUpdBookingToPayable'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingGUID: options.strBookingGUID
                        , intPaymentMethodID: null
                        , strListCompanyBankAccountGUID: null
                        , strPaidRemark: null
                    }
                },
                GetPaymentBookingAmountAndPeriod: {
                    strApiLink: 'api/booking/GetPaymentBookingAmountAndPeriod'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingGUID: options.strBookingGUID
                        , dtmDateDay: null
                    }
                },
                UpdBookingForChangeHoldToBook: {
                    strApiLink: 'api/booking/UpdBookingForChangeHoldToBook'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingGUID: options.strBookingGUID
                    }
                },
                AddOrUpdHoldToBookingPayable: {
                    strApiLink: 'api/payrcvbooking/AddOrUpdHoldToBookingPayable'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingGUID: options.strBookingGUID
                        , intPaymentMethodID: null
                        , strListCompanyBankAccountGUID: null
                        , strPaidRemark: null
                    }
                },

                GetCheckRemainCreditForPaymentBookingByAgent: {
                    strApiLink: 'api/booking/GetCheckRemainCreditForPaymentBookingByAgent'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strCompanyGUID: options.strCompanyGUID
                        , strBookingGUID: Obj_BookingDetail.strBookingGUID
                    }
                },
                GetUrlPayOnline: {
                    strApiLink: 'api/payonline/GetUrlPayOnline'
                    , objParams: {
                        strOrderBeforePaymentCode: null
                        , strReturnUrl: Str_ReturnUrl
                        , dblAmount: 0
                        , strDescription: "payment online"
                    }
                },

                AddPaymentTransactionByAgent: {
                    strApiLink: 'api/booking/AddPaymentTransactionByAgent'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strOrderBookingCode: Obj_BookingDetail.strOrderBookingCode
                        , intOrderStatusID: 4
                        , strAgentCode: JSON.parse(png.ArrLS.UserDetail.get()).strAgentCode
                        , dblPaymentTransactionAmount: null
                        , strRemark: null
                    }
                },
            }

            var ObjList_ComboValue = {
                Arr_ValCode: {
                    strCombocode: ''
                }
                , Arr_SQL: {
                    strTableName: ''
                    , strFeildSelect: ' AS intID, AS strName'
                    , strWhere: 'WHERE IsActive = 1'
                }
            }

            var Arr_PaymentMethod = []
            var Arr_BookingByAgentHost = []
            var Arr_BookingPaymentTerm = []

            var Obj_Payment = {}

            var Obj_ListArrListAcount = {}

            //---------
            var Obj_FormInput = {}
            var Obj_FN_Main = {}
            //---------

            png.postListApiGetValue({
                objList_Api: ObjList_Api
                , objList_ComboValue: ObjList_ComboValue
                , objListApi_RtnVal: {
                    'GetPaymentBookingAmountAndPeriod': {
                        objParams_Cus: {
                        }
                        , OnSuccess: function (data) {
                            Arr_BookingPaymentTerm = JSON.parse(data)[0]
                            Arr_BookingByAgentHost = JSON.parse(data)[1]
                            // return JSON.parse(data)[0]

                            Obj_BookingDetail['dblTotalPriceCharge'] = 0
                            Arr_BookingPaymentTerm.forEach(function (value) {
                                Obj_BookingDetail['dblTotalPriceCharge'] += value.dblPriceCharge
                            })
                        }
                    }
                }
                , objListComboValue_RtnVal: {
                    'Arr_SQL': {
                        objParams_Cus: {
                            strTableName: 'OB12'
                            , strFeildSelect: 'OB12_PaymentMethodID AS intID,OB12_PaymentMethodName AS strName'
                            , strWhere: 'WHERE IsActive=1 ORDER BY OB12_Order'
                        },
                        OnSuccess: function (data) {
                            Arr_PaymentMethod = data   // Dữ liệu trả về từ dropdownlist trên
                        }
                    }
                }
                , OnSuccessList: function (data) {
                    GetPopUp()

                }
            })

            // GetPopUp()
            function GetPopUp() {
                pngPn.getPopUp({
                    strTitle: 'Payment'
                    , intTypeSize: 2//------------1 small ---2 medium ---3 large
                    , OnPanel: GetMainPanel
                    , OnClosePopUp: function () {
                        //------Chọn sự kiện khi Đóng PopUP
                    }
                })
            }

            function GetMainPanel(_IdOrClassPp, _OnClosePp) {

                IdOrClass_Main = _IdOrClassPp
                Obj_FN_Main.OnClosePp = _OnClosePp

                // Obj_FN_Main.OnClosePp(true)----------- chạy câu lệnh trong OnClosePopUp: function (){} khi tắt PopUp
                // Obj_FN_Main.OnClosePp(true,true)-----------Đóng Pop Up + chạy câu lệnh trong OnClosePopUp: function (){}

                var objPanel = {
                    pnMain: {
                        tag: 'div', attr: 'class="panel-itl"', childTags: [{ div: 'class="container"' }, { div: 'class="row"' }]
                        , pnContent: { tag: 'div', attr: 'class="col-md-12"' }
                        , pnBtn: { tag: 'div', attr: 'class="col-md-12"' }
                    }
                }

                var objEvtPanel = {}
                objEvtPanel.pnContent = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    Obj_Payment = JSON.parse(JSON.stringify(Obj_BookingDetail))

                    Obj_Payment['dblPriceTotal_View'] = $.pngFormatPrice(Obj_Payment['dblPriceTotal'])
                    Obj_Payment['dblTotalPriceCharge_View'] = '<a action="ViewListTerm">' + $.pngFormatPrice(Obj_Payment['dblTotalPriceCharge']) + "</a>"


                    Obj_Payment['intPaymentMethodID'] = 11

                    var DblPriceCharge = Obj_Payment['dblPricePayment']
                    var DblCreditRemain = 0

                    //coreLoadPage.getCredit({
                    //    OnSuccess: function (obj) {
                    //        DblCreditRemain = obj.dblCreditRemain
                    //    }
                    //})


                    Obj_FormInput = {
                        dblPriceTotal_View: {
                            title: 'Total Price', attr: "class='col-md-4'"
                            , input: { IsNoInput: true, IsViewDtl: true }
                        },
                        // dtmInvoiceDeadline_View:{title:'Deadline',attr:"class='col-md-4'"
                        //     ,input:{IsNoInput:true,IsViewDtl:true}
                        // },
                        dblTotalPriceCharge_View: {
                            title: 'Price Payment', attr: "class='col-md-4'"
                            , input: { IsNoInput: true, IsViewDtl: true }
                        },

                        _______1: {
                            title: '', attr: "class='col-md-12' style=='margin:0'"
                            , input: { IsNoInput: true }
                        },
                        intPaymentMethodID: {
                            title: 'Phương thức thanh toán', attr: "class='col-md-4'", isRequire: false, IsRtn: true
                            , input: { type: 'select', classEx: 'form-control', attr: '' }
                            , dropDown: { arrList: $.pngGetArrComboValue(Arr_PaymentMethod, 'intID', 'strName') }
                        },
                        pnPayEx: {
                            title: '', attr: "class='col-md-12'"
                            , input: { IsNoInput: true }
                        },
                        strPaidRemark: {
                            title: 'Remark', isRequire: false, attr: "class='col-md-12'", IsRtn: true
                            , input: { type: 'textarea', classEx: 'form-control', attr: 'rows="5" ' }//====> Có Attr ckeditor sẽ hiển thị CK Editor
                        }
                    }

                    pngPn.getForm({
                        action: 1,
                        objInput: Obj_FormInput,
                        idOrClass: IdOrClass_Pn,
                        objDetail: Obj_Payment,
                    })


                    $('a', IdOrClass_Pn).click(function () {
                        var action = $(this).attr('action')

                        if (action == "ViewListTerm") {
                            // $.ModulePage_OrderStep1_PopUpViewListTerm({
                            //     strUserGUID: options.strUserGUID
                            //     ,arrPaymentTerm: Arr_PaymentTerm
                            //     ,arrOrderBookingByAgentHost: Arr_OrderBookingByAgentHost
                            //     ,OnSuccess: function () {}
                            // })
                            pnContent_ViewPaymentTerm()
                        }
                    })

                    $(".intPaymentMethodID", IdOrClass_Pn).change(function () {
                        $('#btnPayment', IdOrClass_Main).attr('disabled', false)
                        Obj_Payment['strListCompanyBankAccountGUID'] = null
                        var strHtml = ''

                        if (this.value == 11) {
                            strHtml += pngElm.getLangKey({ langkey: 'sys_Txt_Creditbalance' }) + ': <b>' + $.pngFormatPrice(DblCreditRemain) + '</b>'
                            $('.pnElm-pnPayEx').html(strHtml)

                            setTimeout(function () {
                                if (DblPriceCharge > DblCreditRemain && ((!Obj_PaymentAmountAndPeriod['IsPayment'] && $('.IsPayment', IdOrClass_Pn).is(':checked')) || Obj_PaymentAmountAndPeriod['IsPayment'])) {
                                    $('#btnPayment', IdOrClass_Main).attr('disabled', true)
                                }
                            }, 500)
                        }

                        if (this.value == 1) {

                            if (Object.keys(Obj_ListArrListAcount).length == 0) {
                                png.postList({
                                    objApi: ObjList_Api['GetFilterCompanyBankAccount'],
                                    arrInput: Arr_BookingByAgentHost,
                                    intCallApiPerTime: 1,
                                    OnSuccessItem: function (objParam, data) {
                                        Obj_ListArrListAcount[objParam.strCompanyGUID] = JSON.parse(data)[0]
                                    },
                                    //GEN
                                    OnSuccess: function (data) {
                                        GetPanelAccount()
                                    }
                                })
                            } else {
                                GetPanelAccount()
                            }


                            function GetPanelAccount() {


                                pngPn.getTable2({
                                    objApi: null
                                    , objParams_Cus: null
                                    , editRltArr: function (arr) {
                                        return Arr_BookingByAgentHost
                                    }
                                    , editRlt: function (value, key) {
                                        value['No'] = (key + 1)

                                    }
                                    , objCols: {
                                        'No': { name: '<span langkey="sys_Txt_Tbl-No"></span>' }
                                        , strCompanyName: { name: 'Company Name' }
                                        , pnAccount: { name: 'Account' }
                                        , strDescription: { name: 'Description' }
                                    }
                                    // ,editTableInput:function(){}
                                    , changeCkbMaster: function (IsChecked, intRowID, arrList) {


                                        // ArrPriceTableItem = arrList
                                    }
                                    , customEvent: function (_idOrClassPn) {
                                        Arr_BookingByAgentHost.forEach(function (value, key) {
                                            pngPn.getForm({
                                                action: 1,
                                                objInput: {
                                                    strCompanyBankAccountGUID: {
                                                        title: '', attr: "class='col-md-12' style='margin:0'", isRequire: false, IsRtn: true
                                                        , input: { type: 'select', classEx: 'form-control', attr: ' guid="' + value.strCompanyGUID + '" ' }

                                                        , dropDown: { arrList: $.pngGetArrComboValue(Obj_ListArrListAcount[value.strCompanyGUID.toLowerCase()], 'strCompanyBankAccountGUID', 'strNameDisplay') }
                                                    }
                                                },
                                                idOrClass: 'tr[row=' + key + '] .pn-pnAccount', _idOrClassPn,
                                                objDetail: {}
                                            })
                                        })

                                        $(_idOrClassPn).find('select').change(function () {
                                            var data = $(this).parents('tr').attr('row')
                                            var strCompanyGUID = $(this).attr('guid')
                                            var Arr = Obj_ListArrListAcount[strCompanyGUID]
                                            var self = this
                                            Obj_Payment['strCompanyBankAccountGUID'] = this.value
                                            var obj = Arr.filter(function (item) { return item.strCompanyBankAccountGUID == self.value })[0]

                                            strHtml = ''
                                            strHtml += '<b>Account Name:</b> ' + obj.strCompanyBankAccountName
                                            strHtml += '<br><b>Account Code:</b> ' + obj.strCompanyBankAccountCode
                                            strHtml += '<br><b>Bank Name:</b> ' + obj.strCompanyBankAccountInfo
                                            strHtml += '<br><b>Bank Add:</b> ' + obj.strBankAddress
                                            strHtml += '<br><b>SwiftCode:</b> ' + obj.strSwiftCode
                                            $(_idOrClassPn + ' tr[row=' + data + '] .pn-strDescription').html(strHtml)

                                        })



                                    }
                                    // ,changeInput:function(){}
                                    , IsViewCheckBoxMain: false
                                    , idOrClass: '.pnElm-pnPayEx'
                                })


                            }




                        }

                        if (this.value == 3) {
                            // strHtml+= '<img src="https://logos-world.net/wp-content/uploads/2020/04/PayPal-Logo.png" style="height: 35px;">'
                            // strHtml+= '<img src="https://thietkelogo.com/wp-content/uploads/2017/10/logo-mastercard.jpg" style="height: 35px;">'
                            strHtml += 'Thanh toán qua <b>VN Pay</b>'
                            $('.pnElm-pnPayEx').html(strHtml)

                        }
                    }).change()



                }

                function pnContent_ViewPaymentTerm() {

                    var IdOrClass_Pn = ''

                    pngPn.getPopUp({
                        strTitle: 'List Price Charge'
                        , intTypeSize: 2//------------1 small ---2 medium ---3 large
                        , OnPanel: GetMainPanel
                        , OnClosePopUp: function () {
                            //------Chọn sự kiện khi Đóng PopUP
                        }
                    })

                    function GetMainPanel(_IdOrClassPp, _OnClosePp) {

                        IdOrClass_Pn = _IdOrClassPp
                        Obj_FN_Main.PaymentTerm = {}
                        Obj_FN_Main.PaymentTerm.OnClosePp = _OnClosePp

                        var objPanel = {
                            pnMain: {
                                tag: 'div', attr: '', childTags: [{ div: 'class="container"' }, { div: 'class="row"' }]
                                , pnContent: { tag: 'div', attr: 'class="col-md-12"' }
                            }
                        }

                        var objEvtPanel = {}
                        objEvtPanel.pnContent = function (_idOrClassPn) {
                            var IdOrClass_Pn = _idOrClassPn

                            var strHtml = ''
                            Arr_BookingByAgentHost.forEach(function (value, key) {
                                strHtml = ''
                                strHtml += '<div class="pn-margin-t-b-15"><b>' + (key + 1) + '. </b>' + value.strCompanyName + (value.strCompanyPhone ? ' - <b>Phone:</b> ' + value.strCompanyPhone : '') + (value.strCompanyEmail ? ' - <b>Email:</b> ' + value.strCompanyEmail : '') + '</div>'
                                strHtml += '<div class="' + value.strBookingByAgentHostGUID + '"></div>'
                                $(IdOrClass_Pn).append(strHtml)

                                var arr = Arr_BookingPaymentTerm.filter(function (item) { return item.strBookingByAgentHostGUID == value.strBookingByAgentHostGUID })

                                GetListPriceForCompany(arr, IdOrClass_Pn + ' .' + value.strBookingByAgentHostGUID)
                            })


                            function GetListPriceForCompany(_arrPriceTable, _idOrClass) {

                                var IdOrClass_Pn_Item = _idOrClass
                                var ArrPriceTableItem = _arrPriceTable

                                var strHtml = ''
                                strHtml += '<div class="pnTbl"></div>'
                                $(IdOrClass_Pn_Item).html(strHtml)


                                pngPn.getTable2({
                                    objApi: null
                                    , objParams_Cus: null
                                    , editRltArr: function (arr) {
                                        return ArrPriceTableItem
                                    }
                                    , editRlt: function (value, key) {
                                        value['No'] = (key + 1)

                                        value['dtmDateFrom_View'] = $.pngFormatDateTime(value['dtmDateFrom'])
                                        value['dtmDateTo_View'] = $.pngFormatDateTime(value['dtmDateTo'])
                                        value['dblPriceCharge_View'] = $.pngFormatPrice(value['dblPriceCharge'])


                                    }
                                    , objCols: {
                                        'No': { name: '<span langkey="sys_Txt_Tbl-No"></span>' }
                                        , dtmDateFrom_View: { name: '<span langkey="pg_Dft_TC_OrDtl_DateFrom"></span>' }
                                        , dtmDateTo_View: { name: '<span langkey="pg_Dft_TC_OrDtl_DateTo"></span>' }
                                        , dblPriceCharge_View: { name: 'Price Charge', strAttrTD: 'style=""' }
                                    }
                                    // ,editTableInput:function(){}
                                    , changeCkbMaster: function (IsChecked, intRowID, arrList) {


                                        ArrPriceTableItem = arrList
                                    }
                                    , customEvent: function (_idOrClassPn) {



                                    }
                                    // ,changeInput:function(){}
                                    , IsViewCheckBoxMain: false
                                    , idOrClass: IdOrClass_Pn_Item + ' .pnTbl'
                                })


                            }



                        }

                        pngPn.getPanelHtml({
                            objPanel: objPanel
                            , objEvtPanel: objEvtPanel
                            , idOrClass: IdOrClass_Pn
                            , OnChangeIdPn: function (_Fn) {
                                Obj_FN_Main.PaymentTerm.pnMain = _Fn
                            }
                        })

                    }


                }


                objEvtPanel.pnBtn = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = '<button id="btnPayment" class="btn btn-primary pn-round-10em">Thanh toán</button>'
                    $(IdOrClass_Pn).html(strHtml)

                    $('#btnPayment').click(function () {

                        $.Confirm({
                            strContent: '<span langkey="sys_Cfm_AYS"></span>'
                            , OnSuccess: function () {
                                var strListCompanyBankAccountGUID = ''

                                pngPn.getForm({
                                    action: 2,
                                    objInput: Obj_FormInput,
                                    idOrClass: IdOrClass_Main + ' #pnContent',
                                    OnChkSuccess: function (objRtn) {
                                        if (objRtn) {
                                            Obj_Payment = $.pngExtendObj(Obj_Payment, objRtn)

                                            if (Obj_Payment.intPaymentMethodID == 11) {
                                                Obj_Payment.strListCompanyBankAccountGUID = null
                                                png.postListApiGetValue({
                                                    objList_Api: ObjList_Api
                                                    , objListApi_RtnVal: {
                                                        'GetCheckRemainCreditForPaymentBookingByAgent': {
                                                            objParams_Cus: {}
                                                            , OnSuccess: function (data) {
                                                                var obj = JSON.parse(data)[0][0]
                                                                if (obj.IsCheckCredit) {
                                                                    coreLoadPage.getCredit({
                                                                        OnSuccess: function (obj) {
                                                                        }
                                                                    })
                                                                    GetPayment()
                                                                } else {
                                                                    $.Confirm({ strContent: 'You do not have enough Credit Limit. Your current credit amount is ' + $.pngFormatPrice(obj.dblCreditRemain) });
                                                                }
                                                            }
                                                        }
                                                    }
                                                })

                                            }

                                            if (Obj_Payment.intPaymentMethodID == 1) {
                                                Arr_BookingByAgentHost.forEach(function (value) {
                                                    strListCompanyBankAccountGUID += value.strOrderAgentHostCode + '!' + value.strCompanyBankAccountGUID + '#'
                                                })

                                                Obj_Payment.strListCompanyBankAccountGUID = strListCompanyBankAccountGUID

                                                GetPayment()
                                            }


                                            if (Obj_Payment.intPaymentMethodID == 3) {
                                                GetPayOnline()
                                            }

                                        }
                                    }
                                })


                            }
                        })
                        function GetPayment() {
                            png.postListApiGetValue({
                                objList_Api: ObjList_Api
                                , objListApi_RtnVal: {           // Giá trị nhận về từ API
                                    'AddOrUpdHoldToBookingPayable': {               // Tên api tương ứng với giá trị trả về
                                        objParams_Cus: Obj_Payment
                                        , OnSuccess: function (data) {

                                            Obj_FN_Main.OnClosePp(true, true)
                                            $.Confirm({
                                                strContent: 'Payment Successfully!'
                                            })
                                            options.OnSuccess.call()
                                        }
                                    }
                                }
                            })

                        }

                        function GetPayOnline() {

                            png.postListApiGetValue({
                                objList_Api: ObjList_Api
                                , objListApi_RtnVal: {
                                    'AddPaymentTransactionByAgent': {
                                        objParams_Cus: {
                                            dblPaymentTransactionAmount: Obj_Payment['dblTotalPriceCharge']
                                            , strRemark: (Obj_Payment.strPaidRemark || "payment online")
                                        }
                                        , OnSuccess: function (data) {
                                            var obj = JSON.parse(data)[0][0]
                                            png.postListApiGetValue({
                                                objList_Api: ObjList_Api
                                                , objListApi_RtnVal: {
                                                    'GetUrlPayOnline': {
                                                        objParams_Cus: {
                                                            strOrderBeforePaymentCode: obj['strPaymentTransactionCode']
                                                            , dblAmount: Obj_Payment['dblTotalPriceCharge']
                                                            , strDescription: (Obj_Payment.strPaidRemark || "payment online")
                                                        }
                                                        , OnSuccess: function (data) {
                                                            window.location.href = JSON.parse(data).strPaymentUrl
                                                        }
                                                    },
                                                }
                                            })
                                        }
                                    },
                                }
                            })
                        }



                    })

                }

                // ===================================

                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })

            }



        }

        $.ModulePage_BookingDetailMain_PopUpVoucherForTour = function (options) {
            var defaults = {
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strUserGUID,
                objDetailPost: {},
                OnSuccess: function () {

                }
            }
            options = $.extend(defaults, options);

            var Obj_Detail = {}

            var ObjList_Api = {
                GetListTourDetailByPtn: {
                    strApiLink: 'api/tour/GetListTourDetailByPtn'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strTourGUID: null

                        , intCurPage: 1
                        , intPageSize: 1
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                },
                GetListBookingServiceForTour: {
                    strApiLink: 'api/booking/GetListBookingServiceForTour'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingServiceGUID: null
                        , strBookingItemGUID: null
                        , intBookingStatusID: 4
                        , intDayOrder: null
                        , intCurPage: null
                        , intPageSize: null
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                },
                GetListTourDayByPtn: {
                    strApiLink: 'api/tour/GetListTourDayByPtn'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strTourDayGUID: null
                        , strTourGUID: null
                        , intCurPage: null
                        , intPageSize: null
                        , strOrder: null
                        , tblsReturn: null
                        , tblsReturn: '[0]'
                    }
                },
                GetBookingItemForConfirmedCode: {
                    strApiLink: 'api/booking/GetBookingItemForConfirmedCode'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strConfirmedCode: Obj_Detail.strConfirmedCode,
                    }
                },
            }

            var ObjList_ComboValue = {
                ArrCountry: {
                    getValCode: { strCombocode: "185" }
                    , OnSuccessItem: function (data) {
                        // data.unshift({'':'Select...'})
                        return data
                    }
                },
                Arr_CateID_Ddl: {
                    strTableName: 'SP02'             // Bảng sử dụng để get dữ liệu
                    , strFeildSelect: 'SP02_CateID AS intID,SP02_LangCode AS strName' // Trường cần lựa chọn
                    , strWhere: 'WHERE IsActive = 1'      // Điều kiện
                },
            }


            // $(idOrClass).html(strHtmlMain)

            // pngPn.getListArrOrObjValue({
            //     setListValue: ObjList_ComboValue,
            //     OnSuccessList:function(ObjListCombo){
            // GetMain()
            //     }
            // })


            var Arr_CateID_Ddl = []

            var Obj_BookingDetail = options.objDetailPost
            var Obj_DetailLeader = {}


            //---------
            var Arr_ListTbl = []
            var Arr_ListTbl_BookingService = []
            var Obj_FormInput = {}
            var Obj_FN_Main = {}
            //---------


            png.postListApiGetValue({
                objList_Api: ObjList_Api
                , objList_ComboValue: ObjList_ComboValue
                , objListApi_RtnVal: {
                    'GetListTourDetailByPtn': {
                        objParams_Cus: {
                            strTourGUID: Obj_BookingDetail["strTourGUID"]
                        },
                        OnSuccess: function (data) {
                            Obj_Detail = JSON.parse(data)[0][0]   // Dữ liệu trả về từ dropdownlist trên
                            Obj_DetailLeader = Obj_BookingDetail   // Dữ liệu trả về từ dropdownlist trên
                        }
                    },
                    'GetListTourDayByPtn': {
                        objParams_Cus: {
                            strTourGUID: Obj_BookingDetail["strTourGUID"]
                        },
                        OnSuccess: function (data) {
                            Arr_ListTbl = JSON.parse(data)[0]
                        }
                    },
                    'GetListBookingServiceForTour': {
                        objParams_Cus: {
                            strBookingItemGUID: Obj_BookingDetail["strBookingItemGUID"]
                        },
                        OnSuccess: function (data) {
                            Arr_ListTbl_BookingService = JSON.parse(data)[0]
                        }
                    },
                }
                , objListComboValue_RtnVal: {    // Giá trị nhận về từ dropdownlist
                    'Arr_CateID_Ddl': {
                        objParams_Cus: {},
                        OnSuccess: function (data) {
                            Arr_CateID_Ddl = data   // Dữ liệu trả về từ dropdownlist trên

                            Arr_CateID_Ddl.forEach(function (value) {
                                value['strName'] = pngElm.getLangKeyDB({ langkey: value['strName'] })
                            })
                        }
                    },
                }
                , OnSuccessList: function (data) {
                    GetPopUp()
                }
            })




            // GetPopUp()
            function GetPopUp() {
                pngPn.getPopUp({
                    strTitle: 'Voucher Tour'
                    , intTypeSize: 3//------------1 small ---2 medium ---3 large
                    , OnPanel: GetMainPanel
                    , OnClosePopUp: function () {
                        //------Chọn sự kiện khi Đóng PopUP
                    }
                })
            }

            function GetMainPanel(_IdOrClassPp, _OnClosePp) {

                IdOrClass_Main = _IdOrClassPp
                Obj_FN_Main.OnClosePp = _OnClosePp

                // Obj_FN_Main.OnClosePp(true)----------- chạy câu lệnh trong OnClosePopUp: function (){} khi tắt PopUp
                // Obj_FN_Main.OnClosePp(true,true)-----------Đóng Pop Up + chạy câu lệnh trong OnClosePopUp: function (){}

                var objPanel = {                 // Khai báo các thành phần của panel
                    pnMain: {
                        tag: 'div', attr: ''
                        , childTags: [{ div: 'class="row"' }]
                        , pnListBtn: { tag: 'div', attr: 'class="col-md-12 pn-margin-b-15"' }
                        , pnCnt: {
                            tag: 'div', attr: 'class="col-md-12"'
                            , childTags: [{ div: 'class="row" style="overflow:auto;max-height:80vh"' }, { div: 'class="pnContent"' }]
                            , pnInfo: { tag: 'div', attr: 'class="col-md-12"' }
                            , pnDes: { tag: 'div', attr: 'class="col-md-12"' }
                            , pnItinerary: { tag: 'div', attr: 'class="col-md-12"' }
                            , pnIn_ExClude: { tag: 'div', attr: 'class="col-md-12"' }
                            , pnTerms_Conditions: { tag: 'div', attr: 'class="col-md-12"' }
                        }


                    }
                }


                var objEvtPanel = {}


                objEvtPanel.pnListBtn = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn


                    var strHtml = ''

                    strHtml += '<div>'
                    // strHtml+= '<button id="btnExportToWord" class="btn btn-texticon bg-primary txt-white"><i class="fa fa-file-word-o"></i><span>Export to Word</span></button>'

                    strHtml += '<button class="btn btn-texticon btn-default" id="btnPrint" style=""><i class="fa fa-print"></i><span>Print</span></button>'
                    if (Obj_DetailLeader.strPassengerEmail)
                        strHtml += '<button class="btn btn-texticon bg-primary" id="btnSendEmailToLeader" style=""><i class="fa fa-envelope"></i><span>Send To <b>' + Obj_DetailLeader.strPassengerEmail + '</b></span></button>'
                    strHtml += '</div>'
                    strHtml += '<div class="pnContent_Print" style="display:none"></div>'

                    $(IdOrClass_Pn).html(strHtml)


                    $('#btnExportToWord', IdOrClass_Pn).click(function () {
                        window.open(png.getServerURL('Page/Export.aspx?type=GetExportTourDetail&strUserGUID=' + options.strUserGUID + '&strTourGUID=' + options.strTourGUID + ''))
                    })

                    var strHtnl_Pr

                    $(IdOrClass_Pn + ' #btnSendEmailToLeader').click(function () {
                        $.Confirm({
                            strContent: '<span langkey="sys_Cfm_AYS"> </span>'
                            , OnSuccess: function () {

                                png.postSendEmail({
                                    strUserGUID: null
                                    , strEmailsSendTo: ""
                                    , strEmailsCC: ""
                                    , strEmailsBCC: ""
                                    , strEmailTemplateSubject: ""
                                    , IsBodyHtml: 1
                                    , strEmailTemplateContent: ""
                                    , strTempApiUrl: 'api/public/GetEmailSendConfirmToPax'
                                    , objTempPar: {
                                        strUserGUID: options.strUserGUID
                                        , intLangID: $.pngGetLangID()
                                        , strConfirmedCode: Obj_BookingDetail.strConfirmedCode
                                    }
                                    , OnSuccess: function (data) {
                                        if (data == "1") {
                                            $.Confirm({ strContent: '<span langkey="sys_Txt_SendEmailSuccess"></span>' })
                                        } else {
                                            $.Confirm({ strContent: '<span langkey="sys_Txt_SendEmailFail"></span>' })
                                        }

                                    }
                                })

                            }
                        })



                    })


                    setTimeout(function () {
                        var strHtml = $(IdOrClass_Main + ' .pnContent').html()
                        $(IdOrClass_Pn + ' .pnContent_Print').html(strHtml)

                        $(IdOrClass_Pn + ' .pnContent_Print').find('table').attr('border', '1').attr('cellspacing', '0').attr('cellpadding', '5').css('width', '100%')
                        $(IdOrClass_Pn + ' .pnContent_Print').find('.row').css('margin-left', '-5px').css('margin-right', '-5px')
                        $(IdOrClass_Pn + ' .pnContent_Print').find('.col-md-6').css('width', '48%').css('display', 'inline-table').css('padding', '0 5px')
                        $(IdOrClass_Pn + ' .pnContent_Print').find('.col-md-8').css('width', '65%').css('display', 'inline-table').css('padding', '0 5px')
                        $(IdOrClass_Pn + ' .pnContent_Print').find('.col-md-4').css('width', '32%').css('display', 'inline-table').css('padding', '0 5px')
                        $(IdOrClass_Pn + ' .pnContent_Print').find('.pn-margin-b-15').css('margin-bottom', '15px')
                        $(IdOrClass_Pn + ' .pnContent_Print').find('.pn-margin-t-b-15').css('margin-top', '15px').css('margin-bottom', '15px')

                        $(IdOrClass_Pn + ' .pnContent_Print').find('.pnImg').attr('style', '')
                        $(IdOrClass_Pn + ' .pnContent_Print').find('.pnImg').html('<img src="' + (Obj_Detail.strTourImageUrl ? png.getServerImgURL(Obj_Detail.strTourImageUrl) : 'assets/images/img-noimage.png') + '" style="width:100%">')
                        // $(IdOrClass_Pn+' .pnContent_Print').find('#pnQrCode').attr('id','pnQrCode2')

                        strHtnl_Pr = $(IdOrClass_Main + ' .pnContent_Print').html()
                        $(IdOrClass_Pn + ' #btnPrint').click(function () {
                            pngPn.getPopUpPrint({
                                idOrClass: null
                                , strHtml: strHtnl_Pr
                            })
                        })
                    }, 500)





                }


                objEvtPanel.pnInfo = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn


                    var strHtml = ''
                    strHtml += `
            `
                    strHtml += '<div class="row">'
                    strHtml += '<div class="col-md-8">'
                    strHtml += '        <div class="pn-margin-b-15"><b>Group Name: </b>' + (Obj_BookingDetail.strGroupName || '') + '</div>'
                    strHtml += '        <h1 class="pn-margin-t-b-15" style="line-height: 35px;font-size: 25px;"><b>' + Obj_Detail.strServiceName + '</b></h1>'
                    strHtml += '        <div class="pn-margin-b-15"><b>' + pngElm.getLangKey({ langkey: 'sys_Txt_CompanyName' }) + ': </b>' + Obj_Detail.strCompanyName + (Obj_Detail.strCompanyEmail ? ' - ' + Obj_Detail.strCompanyEmail : '') + (Obj_Detail.strCompanyPhone ? ' - ' + Obj_Detail.strCompanyPhone : '') + '</div>'
                    strHtml += '        <div class="pn-margin-b-15"><b>' + pngElm.getLangKey({ langkey: 'sys_Txt_Addr' }) + ': </b>' + Obj_Detail.strCompanyAddr + '</div>'
                    strHtml += '        <div style="color:#257EF8;font-weight:bold;text-transform: uppercase;margin-bottom: 25px;"><span>' + Obj_Detail.intNoOfDay + ' ' + pngElm.getLangKey({ langkey: 'sys_Txt_days' }) + '/' + (Obj_Detail.intNoOfDay - 1) + ' ' + pngElm.getLangKey({ langkey: 'sys_Txt_nights' }) + '</span></div>'
                    strHtml += '</div>'

                    strHtml += '<div class="col-md-4" style="text-align: right">'
                    strHtml += '        <div class="pn-margin-b-15"><b>Confirm Code: </b>' + (Obj_BookingDetail.strConfirmedCode || '') + '</div>'
                    strHtml += '        <div class="pn-margin-b-15 pnQrCode" style="width: 130px;height: 130px;display: inline-block;"></div>'
                    strHtml += '</div>'
                    strHtml += '</div>'
                    strHtml += '<div class="pnImg" style="background:url(\'' + (Obj_Detail.strTourImageUrl ? png.getServerImgURL(Obj_Detail.strTourImageUrl) : 'assets/images/img-noimage.png') + '\') no-repeat center;width: 100%;background-size: cover;height:300px"></div>'

                    $(IdOrClass_Pn).html(strHtml)

                    if (!$('body #pnQrCode').length)
                        $('body').append('<div id="pnQrCode" style="display:none"></div>')

                    var qrcode = new QRCode("pnQrCode", {
                        width: 130,
                        height: 130,
                    });
                    qrcode.makeCode(png.ObjClnUrl.APPB2B + 'confirmation/' + Obj_BookingDetail.strConfirmedCode);

                    setTimeout(function () {

                        $(IdOrClass_Pn + ' .pnQrCode').html($('#pnQrCode').html())

                        $('body #pnQrCode').remove()
                            , 100
                    })
                }

                objEvtPanel.pnDes = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtmlMain = ''

                    strHtmlMain += '<div class="row">'
                    strHtmlMain += '    <div class="col-md-6">'
                    strHtmlMain += '         <h4 class="pn-margin-t-b-15"><b><span langkey="pg_Main_Tour_MdDtl_MainAttractions"></span></b></h4>'
                    Obj_Detail.strListTourMainAttractionName.split(',').forEach(function (value) {
                        strHtmlMain += '<div><i class="fa fa-check-square" style="color: #257ef8"></i> ' + value + '</div>'
                    })
                    strHtmlMain += '    </div>'
                    strHtmlMain += '    <div class="col-md-6">'
                    strHtmlMain += '        <h4 class="pn-margin-t-b-15"><b><span langkey="pg_Main_Tour_MdDtl_Citiescovered"></span></b></h4>'
                    Obj_Detail.strListTourDestinationName.split(',').forEach(function (value) {
                        strHtmlMain += '<div><i class="fa fa-check-square" style="color: #257ef8"></i> ' + value + '</div>'
                    })
                    strHtmlMain += '    </div>'
                    strHtmlMain += '</div>'
                    $(IdOrClass_Pn).html(strHtmlMain)
                }


                objEvtPanel.pnItinerary = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''
                    Arr_ListTbl.forEach(function (value) {
                        strHtml += '<div>'
                        strHtml += '    <div style="display: flow-root;padding: 20px 0;border-bottom: 1px #bdbdbd solid;">'
                        strHtml += '        <div style="float:left;background:#257EF8;color:white;padding: 10px 40px;border-top-right-radius: 10em;border-bottom-right-radius: 10em;margin-right: 20px;">'
                        strHtml += '            <strong style="text-transform: uppercase;">' + pngElm.getLangKey({ langkey: 'sys_Txt_Day' }) + ' ' + value.intDayOrder + '</strong>'
                        strHtml += '        </div>'
                        strHtml += '        <div style="display: flow-root">'
                        strHtml += '            <strong style="font-size:18px;line-height: 40px;">'
                        strHtml += '                ' + value.strDayTitleAndMeals
                        strHtml += '            </strong>'
                        strHtml += '        </div>'
                        strHtml += '     </div>'
                        strHtml += '</div>'
                        strHtml += '<div class="pn-margin-t-15 pn-padding-l-r-15">'
                        strHtml += '<div >' + value.strDayContent + '</div>'
                        strHtml += '<div class="pnTableService_' + value.intDayOrder + '"></div>'
                        strHtml += '</div>'

                    })
                    $(IdOrClass_Pn).html(strHtml)

                    Arr_ListTbl.forEach(function (value) {
                        var arr = Arr_ListTbl_BookingService.filter(function (item) { return item.intDayOrder == value.intDayOrder })

                        if (arr.length) {

                            var strHtml = ''
                            strHtml += `
                        <h3 style="margin-top:15px"><b>Danh sách Dịch vụ</b></h3>
                        <div><div class="pnList pn-margin-t-15"></div></div>
                    `
                            $(IdOrClass_Pn + ' .pnTableService_' + value.intDayOrder).html(strHtml)

                            pngPn.getTable2({
                                objApi: null
                                , objParams_Cus: null
                                , editRltArr: function () {
                                    return arr
                                }
                                , editRlt: function (value, key) {
                                    value['No'] = (key + 1)
                                    value['strSupplierName_View'] = ''
                                    value['strSupplierName_View'] += '<div><b>' + value['strSupplierName'] + '</b></div>'
                                    if (value['strAddress'])
                                        value['strSupplierName_View'] += '<div><b>Address: </b>' + value['strAddress'] + '</div>'
                                    value['strSupplierName_View'] += (value['strEmail'] ? '<div><b>Email: </b>' + value['strEmail'] : '') + (value['strPhone'] ? ' - <b>Phone: </b>' + value['strPhone'] : '') + '</div>'
                                    if (value['strWebsite'])
                                        value['strSupplierName_View'] += '<div><b>Website: </b>' + value['strWebsite'] + '</div>'
                                    value['strCateName'] = Arr_CateID_Ddl.filter(function (item) { return item.intID == value.intCateID })[0].strName
                                }
                                , objCols: {

                                    No: { name: pngElm.getLangKey({ langkey: 'sys_Txt_No' }) }
                                    , strCateName: { name: 'Loại dịch vụ' }
                                    , strSupplierName_View: { name: pngElm.getLangKey({ langkey: 'sys_Txt_SupplierName' }) }
                                    , strItemName: { name: pngElm.getLangKey({ langkey: 'sys_Txt_ItemTypeName' }) }

                                }
                                , changeCkbMaster: function (_IsChecked, _intRowID, _arrList) {

                                    arr = _arrList
                                }
                                , customEvent: function (_iOrClass_Pn) {
                                }
                                // ,changeInput:function(){}
                                , IsViewCheckBoxMain: false
                                , idOrClass: IdOrClass_Pn + ' .pnTableService_' + value.intDayOrder + ' .pnList'
                            })
                        }


                    })

                }



                objEvtPanel.pnIn_ExClude = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''

                    strHtml += '<div class="row" style="display: flex;">'
                    strHtml += '<div class="col-md-6" style="display: flex;">'
                    strHtml += '<div style="width: 100%;">'
                    strHtml += '    <div class="tour_include_exclude">'
                    strHtml += '        <h3 class="pn-margin-t-b-15"><b langkey="pg_Main_Tour_MdDtl_Include"></b></h3>  '
                    strHtml += '<div class="pn-padding-l-15">' + (Obj_Detail.strIncluded || '<i>' + pngElm.getLangKey({ langkey: 'sys_Txt_NoData' }) + '</i>') + '</div>'
                    strHtml += '    </div>'
                    strHtml += '</div>'
                    strHtml += '</div>'
                    strHtml += '<div class="col-md-6" style="display: flex;">'
                    strHtml += '<div style="width: 100%;">'
                    strHtml += '    <div class="tour_include_exclude">'
                    strHtml += '        <h3 class="pn-margin-t-b-15"><b langkey="pg_Main_Tour_MdDtl_Exclude"></b></h3>'
                    strHtml += '        </div>     '
                    strHtml += '<div class="pn-padding-l-15">' + (Obj_Detail.strExcluded || '<i>' + pngElm.getLangKey({ langkey: 'sys_Txt_NoData' }) + '</i>') + '</div>'
                    strHtml += '    </div>'
                    strHtml += '</div>'
                    strHtml += '</div>'
                    strHtml += '</div>'
                    $(IdOrClass_Pn).html(strHtml)
                }


                objEvtPanel.pnTerms_Conditions = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn
                    var strHtml = ''
                    strHtml += '<div style="margin: 15px 0;">'
                    strHtml += '<div>'
                    strHtml += '    <h3 class="pn-margin-t-b-15"><b langkey="pg_Main_Tour_MdDtl_Terms_Conditions"></b></h3>'
                    strHtml += '    <div class="tours-terms-conditions">'
                    strHtml += '<div class="pn-padding-l-15">' + (Obj_Detail.strTermAndCondition || '<i>' + pngElm.getLangKey({ langkey: 'sys_Txt_NoData' }) + '</i>') + '</div>'
                    strHtml += '    </div>'
                    strHtml += '</div>'
                    strHtml += '</div>'

                    $(IdOrClass_Pn).html(strHtml)

                }


                // ===================================

                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })


            }




        }


        $.ModulePage_BookingDetailMain_PopUpVoucherForSupp = function (options) {
            var defaults = {
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strUserGUID,
                objDetailPost: {},
                OnSuccess: function () {

                }
            }
            options = $.extend(defaults, options);


            var Obj_Detail = {}


            var ObjList_Api = {
                GetListBookingByTraveller: {
                    strApiLink: 'api/public/traveller/GetListBookingByTraveller'
                    , objParams: {
                        strUserGUID: null
                        , strBookingGUID: null
                        , strBookingCode: null
                        , strFilterDateFrom: null
                        , strFilterDateTo: null
                        , intOrderStatusID: null
                        , intPaymentStatusID: null
                        , intBookingStatusID: null
                        , intCurPage: null
                        , intPageSize: null
                        , isPartner: 1
                        , tblsReturn: "[3][4][5][9]"
                    }
                },
                GetListSupplierForAgentHost: {
                    strApiLink: 'api/public/GetListSupplierForAgentHost'
                    , objParams: {
                        strUserGUID: null
                        , strCompanyGUID: null
                        , intCateID: null
                        , IsOwner: null
                        , strSupplierGUID: null
                        , strFilterSupplierName: null
                        , strFilterSupplierEmail: null
                        , intEasiaCateID: null
                        , intCurPage: 1
                        , intPageSize: 10
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                },

                GetListBookingService: {
                    strApiLink: 'api/public/GetListBookingService'
                    , objParams: {
                        strUserGUID: null
                        , strBookingGUID: null
                        , strBookingItemGUID: null
                        , strParentBookingItemGUID: null
                        , strBookingServiceGUID: null
                        , intBookingStatusID: 4

                        , intCurPage: null
                        , intPageSize: null
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                },

                GetBookingItemForConfirmedCode: {
                    strApiLink: 'api/booking/GetBookingItemForConfirmedCode'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strConfirmedCode: Obj_Detail.strConfirmedCode,
                    }
                },
            }

            var ObjList_ComboValue = {
                ArrCountry: {
                    getValCode: { strCombocode: "185" }
                    , OnSuccessItem: function (data) {
                        // data.unshift({'':'Select...'})
                        return data
                    }
                },
                Arr_CateID_Ddl: {
                    strTableName: 'SP02'             // Bảng sử dụng để get dữ liệu
                    , strFeildSelect: 'SP02_CateID AS intID,SP02_LangCode AS strName' // Trường cần lựa chọn
                    , strWhere: 'WHERE IsActive = 1'      // Điều kiện
                },
            }


            // $(idOrClass).html(strHtmlMain)

            // pngPn.getListArrOrObjValue({
            //     setListValue: ObjList_ComboValue,
            //     OnSuccessList:function(ObjListCombo){
            // GetMain()
            //     }
            // })


            var objDetailPost = options.objDetailPost

            var Obj_BookingServiceDetail = {}
            var Arr_PriceTableItem = []
            var Arr_CustomerList = []
            var Obj_AgentHostDetail = {}
            var Obj_DetailLeader = []


            //---------
            var Arr_ListTbl = []
            var Obj_FormInput = {}
            var Obj_FN_Main = {}
            //---------

            png.postListApiGetValue({
                objList_Api: ObjList_Api
                //, objList_ComboValue: ObjList_ComboValue
                , objListApi_RtnVal: {
                    'GetListBookingByTraveller': {
                        objParams_Cus: {
                            strBookingGUID: objDetailPost.strBookingGUID
                        }
                        , OnSuccess: function (data) {
                            Arr_CustomerList = JSON.parse(data)[3]
                            Arr_PriceTableItem = JSON.parse(data)[4]
                            Obj_BookingServiceDetail = Arr_PriceTableItem.filter(function (item) { return (item.strParentBookingItemGUID || '').toUpperCase() == (objDetailPost["strBookingItemGUID"]).toUpperCase() })[0]

                            Arr_ListBookingItem = JSON.parse(data)[5]
                            Obj_AgentHostDetail = JSON.parse(data)[9].filter(function (item) { return item.strAgentHostBookingGUID.toUpperCase() == Obj_BookingServiceDetail.strBookingByAgentHostGUID.toUpperCase() })[0]

                            Obj_DetailLeader = Arr_CustomerList.filter(function (item) { return item.IsLeader })[0]
                        }
                    },
                }
                , OnSuccessList: function (data) {

                    png.postListApiGetValue({
                        objList_Api: ObjList_Api
                        // ,objList_ComboValue: ObjList_ComboValue
                        , objListApi_RtnVal: {
                            'GetListSupplierForAgentHost': {
                                objParams_Cus: {
                                    intCateID: objDetailPost.intCateID,
                                    strSupplierGUID: objDetailPost.strSupplierGUID,
                                },
                                OnSuccess: function (data) {
                                    Obj_Detail = JSON.parse(data)[0][0]   // Dữ liệu trả về từ dropdownlist trên
                                }
                            },
                            'GetListBookingService': {
                                objParams_Cus: {
                                    strBookingGUID: Obj_BookingServiceDetail.strBookingGUID,
                                    strParentBookingItemGUID: Obj_BookingServiceDetail.strParentBookingItemGUID,
                                },
                                OnSuccess: function (data) {
                                    Arr_ListTbl = JSON.parse(data)[0]  // Dữ liệu trả về từ dropdownlist trên
                                }
                            },
                        }
                        , OnSuccessList: function (data) {

                            GetPopUp()
                        }
                    })


                }
            })

            // GetPopUp()
            function GetPopUp() {
                pngPn.getPopUp({
                    strTitle: 'Voucher Detail'
                    , intTypeSize: 1//------------1 small ---2 medium ---3 large
                    , OnPanel: GetMainPanel
                    , OnClosePopUp: function () {
                        //------Chọn sự kiện khi Đóng PopUP
                    }
                })
            }

            function GetMainPanel(_IdOrClassPp, _OnClosePp) {

                IdOrClass_Main = _IdOrClassPp
                Obj_FN_Main.OnClosePp = _OnClosePp

                // Obj_FN_Main.OnClosePp(true)----------- chạy câu lệnh trong OnClosePopUp: function (){} khi tắt PopUp
                // Obj_FN_Main.OnClosePp(true,true)-----------Đóng Pop Up + chạy câu lệnh trong OnClosePopUp: function (){}

                var objPanel = {                 // Khai báo các thành phần của panel
                    pnMain: {
                        tag: 'div', attr: 'class=""'
                        , childTags: [{ div: 'class="row"' }]
                        , pnListBtn: { tag: 'div', attr: 'class="col-md-12"' }
                        , pnCnt: {
                            tag: 'div', attr: 'class="col-md-12"'
                            , childTags: [{ div: 'class="row" ' }, { div: 'class="pnContent"' }]
                            , pnInfo: { tag: 'div', attr: 'class="col-md-12"' }
                            // ,pnDes:{tag:'div',attr:'class="col-md-12"'}
                            // ,pnItinerary:{tag:'div',attr:'class="col-md-12"'}
                            // ,pnIn_ExClude:{tag:'div',attr:'class="col-md-12"'}
                            // ,pnTerms_Conditions:{tag:'div',attr:'class="col-md-12"'}
                        }


                    }
                }


                var objEvtPanel = {}


                objEvtPanel.pnListBtn = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn


                    var strHtml = ''

                    // strHtml+= '<div>'
                    //     strHtml+= '<button id="btnExportToWord" class="btn btn-texticon bg-primary txt-white"><i class="fa fa-file-word-o"></i><span>Export to Word</span></button>'
                    // strHtml+= '</div>'

                    // $(IdOrClass_Pn).html(strHtml)


                    // $('#btnExportToWord',IdOrClass_Pn).click(function(){
                    //     window.open(png.getServerURL('Page/Export.aspx?type=GetExportTourDetail&strUserGUID='+options.strUserGUID+'&strTourGUID='+options.strTourGUID+''))
                    // })

                    var strHtml = ''

                    strHtml += '<div class="pn-margin-b-15">'
                    // strHtml+= '<button id="btnExportToWord" class="btn btn-texticon bg-primary txt-white"><i class="fa fa-file-word-o"></i><span>Export to Word</span></button>'

                    strHtml += '<button class="btn btn-texticon btn-default" id="btnPrint" style=""><i class="fa fa-print"></i><span>Print</span></button>'
                    if (Obj_DetailLeader.strPassengerEmail)
                        strHtml += '<button class="btn btn-texticon bg-primary" id="btnSendEmailToLeader" style=""><i class="fa fa-envelope"></i><span>Send To <b>' + Obj_DetailLeader.strPassengerEmail + '</b></span></button>'
                    strHtml += '</div>'
                    strHtml += '<div class="pnContent_Print" style="display:none"></div>'

                    $(IdOrClass_Pn).html(strHtml)


                    $('#btnExportToWord', IdOrClass_Pn).click(function () {
                        window.open(png.getServerURL('Page/Export.aspx?type=GetExportTourDetail&strUserGUID=' + options.strUserGUID + '&strTourGUID=' + options.strTourGUID + ''))
                    })

                    var strHtnl_Pr

                    $(IdOrClass_Pn + ' #btnSendEmailToLeader').click(function () {
                        $.Confirm({
                            strContent: '<span langkey="sys_Cfm_AYS"> </span>'
                            , OnSuccess: function () {

                                png.postSendEmail({
                                    strUserGUID: null
                                    , strEmailsSendTo: ""
                                    , strEmailsCC: ""
                                    , strEmailsBCC: ""
                                    , strEmailTemplateSubject: ""
                                    , IsBodyHtml: 1
                                    , strEmailTemplateContent: ""
                                    , strTempApiUrl: 'api/public/GetEmailSendConfirmToPax'
                                    , objTempPar: {
                                        strUserGUID: options.strUserGUID
                                        , intLangID: $.pngGetLangID()
                                        , strConfirmedCode: Obj_BookingServiceDetail.strConfirmedCode
                                    }
                                    , OnSuccess: function (data) {
                                        if (data == "1") {
                                            $.Confirm({ strContent: '<span langkey="sys_Txt_SendEmailSuccess"></span>' })
                                        } else {
                                            $.Confirm({ strContent: '<span langkey="sys_Txt_SendEmailFail"></span>' })
                                        }

                                    }
                                })

                            }
                        })



                    })


                    setTimeout(function () {
                        var strHtml = $(IdOrClass_Main + ' .pnContent').html()
                        $(IdOrClass_Pn + ' .pnContent_Print').html(strHtml)

                        $(IdOrClass_Pn + ' .pnContent_Print').find('table').attr('border', '1').attr('cellspacing', '0').attr('cellpadding', '5').css('width', '100%')
                        $(IdOrClass_Pn + ' .pnContent_Print').find('.row').css('margin-left', '-5px').css('margin-right', '-5px')
                        $(IdOrClass_Pn + ' .pnContent_Print').find('.col-md-6').css('width', '48%').css('display', 'inline-table').css('padding', '0 5px')
                        $(IdOrClass_Pn + ' .pnContent_Print').find('.col-md-8').css('width', '65%').css('display', 'inline-table').css('padding', '0 5px')
                        $(IdOrClass_Pn + ' .pnContent_Print').find('.col-md-4').css('width', '32%').css('display', 'inline-table').css('padding', '0 5px')
                        $(IdOrClass_Pn + ' .pnContent_Print').find('.pn-margin-b-15').css('margin-bottom', '15px')
                        $(IdOrClass_Pn + ' .pnContent_Print').find('.pn-margin-t-b-15').css('margin-top', '15px').css('margin-bottom', '15px')

                        $(IdOrClass_Pn + ' .pnContent_Print').find('.pnImg').attr('style', '')
                        $(IdOrClass_Pn + ' .pnContent_Print').find('.pnImg').html('<img src="' + (Obj_Detail.strTourImageUrl ? png.getServerImgURL(Obj_Detail.strTourImageUrl) : 'assets/images/img-noimage.png') + '" style="width:100%">')
                        // $(IdOrClass_Pn+' .pnContent_Print').find('#pnQrCode').attr('id','pnQrCode2')

                        strHtnl_Pr = $(IdOrClass_Main + ' .pnContent_Print').html()
                        $(IdOrClass_Pn + ' #btnPrint').click(function () {
                            pngPn.getPopUpPrint({
                                idOrClass: null
                                , strHtml: strHtnl_Pr
                            })
                        })
                    }, 600)
                }


                objEvtPanel.pnInfo = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn


                    var strHtml = ''
                    strHtml += '<div class="row">'
                    strHtml += '<div class="col-md-8">'
                    strHtml += '<h4 class="pn-margin-b-15" style="text-decoration: underline;margin-top:0"><b>Nơi nhận:</b></h4>'
                    strHtml += '<p><b style="font-size: 20px;">' + Obj_Detail.strSupplierName + '</b></p>'
                    if (Obj_Detail.strSupplierAddr)
                        strHtml += '<p><b>Địa chỉ: </b>' + Obj_Detail.strSupplierAddr + '</p>'
                    if (Obj_Detail.strSupplierEmail)
                        strHtml += '<p><b>Email: </b>' + Obj_Detail.strSupplierEmail + '</p>'
                    if (Obj_Detail.strSupplierPhone)
                        strHtml += '<p><b>Điện thoại: </b>' + Obj_Detail.strSupplierPhone + '</p>'
                    strHtml += '</div>'
                    strHtml += '<div class="col-md-4 mobile-txt-left" style="text-align: right">'
                    strHtml += '        <div class="pn-margin-b-15"><b>Confirm Code: </b>' + (Obj_BookingServiceDetail.strConfirmedCode || '') + '</div>'
                    strHtml += '        <div class="pn-margin-b-15 pnQrCode" style="width: 130px;height: 130px;display: inline-block;"></div>'
                    strHtml += '</div>'
                    strHtml += '</div>'

                    strHtml += '<h4 class="pn-margin-b-15" style="text-decoration: underline;margin-top:30px"><b>Thông tin phòng:</b></h4>'
                    Arr_ListTbl.forEach(function (value) {

                        var arr = Arr_PriceTableItem.filter(function (item) { return (item.strBookingItemGUID || '').toUpperCase() == value.strBookingItemGUID.toUpperCase() && item.intQuantityTypeID != 27 && item.intQuantityTypeID != 2 })

                        var strRoom = ''
                        arr.forEach(function (val) {
                            if (val.strQuantityTypeName.indexOf('paxs room') == -1)
                                strRoom += val.intQuantity + ' ' + val.strQuantityTypeName
                            else
                                strRoom = val.intQuantity
                        })

                        strHtml += '<p><b>Tên phòng: </b>' + (value.strItemName || '') + '</p>'

                        strHtml += '<p><b>Người xác nhận: </b>' + (value.strMemberInfo || '') + '</p>'
                        strHtml += '<p><b>Ngày xác nhận: </b>' + ($.pngFormatDateTime(value.dtmConfirmedDate) || '') + '</p>'

                        strHtml += '<p><b>Check In - Check Out: </b>' + $.pngFormatDateTime(value.dtmCheckInDate) + ' - ' + $.pngFormatDateTime(value.dtmCheckOutDate) + '</p>'
                        strHtml += '<p><b>Số lượng phòng: </b>' + (strRoom || '') + '</p>'
                        strHtml += '<p>&nbsp;</p>'

                        // var arr = Arr_PriceTableItem.filter(function(item){ item.strParentBookingItemGUID.toUpperCase() == value.strBookingItemGUID.toUpperCase() })


                    })
                    // strHtml+= '<p><b>Mã đặt phòng: </b>'+('' || '')+'</p>'
                    // strHtml+= '<p><b>Người xác nhận: </b>'+('' || '')+'</p>'
                    // strHtml+= '<p><b>Ngày xác nhận: </b>'+('' || '')+'</p>'
                    // strHtml+= '<p><b>Check In - Check Out: </b>'+('' || '')+'</p>'
                    // strHtml+= '<p><b>Số lượng phòng: </b>'+('' || '')+'</p>'

                    var intAdults = Arr_CustomerList.filter(function (item) { return item.intAgeID == 3 }).length
                    var intChild = Arr_CustomerList.filter(function (item) { return item.intAgeID == 4 }).length
                    strHtml += '<h4 class="pn-margin-b-15" style="text-decoration: underline;margin-top:15px"><b>Thông tin khách:</b></h4>'
                    strHtml += '<p><b>Số lượng khách: </b>' + Arr_CustomerList.length + ' (' + intAdults + ' người lớn' + (intChild ? ' - ' + intChild + ' trẻ em' : '') + ')</p>'
                    strHtml += '<p><b>Tên khách : </b>' + Obj_DetailLeader.strPassengerName + '</p>'

                    // strHtml+= '<h4 class="pn-margin-b-15" style="text-decoration: underline;margin-top:30px"><b>Thanh toán:</b></h4>'
                    // strHtml+= '<p>Tiền phòng được Công ty TNHH Việt Nam Khám Phá thanh toán bằng chuyển khoản. Các chi phí khác do khách hàng trả (nếu có). </p>'

                    strHtml += '<h4 class="pn-margin-b-15" style="text-decoration: underline;margin-top:30px"><b>Liên hệ:</b></h4>'
                    strHtml += '<p><b>' + Obj_AgentHostDetail.strCompanyName + '</b></p>'
                    if (Obj_AgentHostDetail.strCompanyAddr)
                        strHtml += '<p><b>' + pngElm.getLangKey({ langkey: 'sys_Txt_Addr' }) + '</b> ' + Obj_AgentHostDetail.strCompanyAddr + '</p>'
                    if (Obj_AgentHostDetail.strCompanyEmail)
                        strHtml += '<p><b>' + pngElm.getLangKey({ langkey: 'sys_Txt_Email' }) + ':</b> ' + Obj_AgentHostDetail.strCompanyEmail + '</p>'
                    if (Obj_AgentHostDetail.strCompanyPhone)
                        strHtml += '<p><b>' + pngElm.getLangKey({ langkey: 'sys_Txt_PhoneNumber' }) + ':</b> ' + Obj_AgentHostDetail.strCompanyPhone + '</p>'


                    $(IdOrClass_Pn).html(strHtml)


                    if (!$('body #pnQrCode').length)
                        $('body').append('<div id="pnQrCode" style="display:none"></div>')

                    var qrcode = new QRCode("pnQrCode", {
                        width: 130,
                        height: 130,
                    });
                    qrcode.makeCode(png.ObjClnUrl.APPB2B + 'confirmation/' + Obj_BookingServiceDetail.strConfirmedCode);

                    setTimeout(function () {
                        $(IdOrClass_Pn + ' .pnQrCode').html($('#pnQrCode').html())

                        $('body #pnQrCode').remove()
                            , 100
                    })

                }



                // ===================================

                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })


            }




        }



        $.ModulePage_UserDetail_Feedback = function (options) {
            var defaults = {
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strUserGUID
                , strCompanyGUID: JSON.parse(png.ArrLS.UserDetail.get()).strCompanyGUID
                , idOrClass: null
                , OnSuccess: function () {

                }
            }
            options = $.extend(defaults, options);


            var IdOrClass_Main = options.idOrClass // Khai báo Id hoặc Class chính của form  $.pngGetQSVal('menuid'): lay ra menu ID cua

            //---------Obj_XXX      // Khai báo các biến dùng chung cho cả hàm
            //---------Arr_XXX
            //---------Is_XXX
            //---------Int_XXX
            //---------Str_XXX

            var ObjList_Api = {
                GetListAgentRequest: {
                    strApiLink: 'api/request/GetListAgentRequest'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strAgentRequestGUID: null
                        , strBookingGUID: null
                        , strAgentHostBookingGUID: null
                        , strCompanyGUID: null
                        , strMemberGUID: null
                        , strPartnerCompanyGUID: null
                        , strPassengerGUID: options.strUserGUID
                        , isDone: 0
                        , intCurPage: 1
                        , intPageSize: 10
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                }
            }

            var ObjList_ComboValue = {          // Khai báo combocode (dropdownlist) muốn sử dụng
                Arr_ValCode: {
                    strCombocode: ''             // Mã code
                }
                , Arr_RequestStatus: {
                    strTableName: 'BR34'             // Bảng sử dụng để get dữ liệu
                    , strFeildSelect: 'BR34_RequestStatusID AS intID,BR34_RequestStatusName AS strName' // Trường cần lựa chọn
                    , strWhere: 'WHERE IsActive = 1'      // Điều kiện
                }
            }

            var Arr_RequestStatus = []

            var Obj_Filter_Dtl = {}
            var Obj_Filter = {}        // Biến lọc


            var Obj_FN_Main = {}

            png.postListApiGetValue({           // Post list các Api phía trên và lấy về dữ liệu
                objList_ComboValue: ObjList_ComboValue // Tên các Object api dropdownlist đã khai báo phía trên
                , objListComboValue_RtnVal: {    // Giá trị nhận về từ dropdownlist
                    'Arr_RequestStatus': {
                        objParams_Cus: {

                        },
                        OnSuccess: function (data) {
                            Arr_RequestStatus = data   // Dữ liệu trả về từ dropdownlist trên
                            Arr_RequestStatus.unshift({ intID: '', strName: pngElm.getLangKey({ langkey: 'sys_Txt_DdlSelectVal' }) })
                        }
                    }
                }
                , OnSuccessList: function (data) {      // Hàm thực hiện khi thành công tất cả các api trên
                    GetMainPanel()
                }
            })


            // GetMainPanel()
            function GetMainPanel() {

                var objPanel = {
                    pnMain: {
                        tag: 'div', attr: '', childTags: [{ div: 'class="row"' }]
                        // ,pnTit:{tag:'div',attr:'class="col-md-12 pn-margin-t-b-30" style="display: flow-root;"'}
                        , pnCnt: {
                            tag: 'div', attr: 'class="col-md-12 pn-margin-b-30"'
                            , childTags: [{ div: 'class="bg-white pn-round-1em pn-padding-15"' }, { div: 'class="row "' }]

                            , pnFormFilter: { tag: 'div', attr: 'class="col-md-12"' }
                            , pnTable: { tag: 'div', attr: 'class="col-md-12"' }
                        }

                    }
                }
                var objEvtPanel = {}
                objEvtPanel.pnTit = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''
                    strHtml += '<h1 style="display:inline-block;float: left;"><b>Danh sách Yêu cầu</b></h1>'
                    strHtml += '<button class="btn btn-texticon btn-default" id="btnVideoHelper" style="float: left;margin-left:15px"><i class="fa fa-question-circle"></i><span><i class="fa fa-film"></i></span></button>'

                    $(IdOrClass_Pn).html(strHtml)

                    coreLoadPage.viewVideoHelper({
                        strUserGUID: options.strUserGUID
                        , strTravelHelperSubModuleCode: 'DB8A6'
                        , intLangID: $.pngGetLangID()
                        , idOrClassBtn: '#btnVideoHelper'
                    })
                }
                objEvtPanel.pnFormFilter = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    var strHtml = ''
                    strHtml += '<a id="btnViewFilter" class="btn btn-link" data-toggle="collapse" href="#pnFilterForm">'
                    strHtml += '    <i class="fa fa-chevron-down"></i>'
                    strHtml += '    <span langkey="sys_Btn_ViewSrc"></span>'
                    strHtml += '</a>'
                    strHtml += '<div id="pnFilterForm" class="panel-collapse collapse panel panel-default panel-itl">'
                    strHtml += '    <div class="pn-padding-l-r-15">'
                    strHtml += '     <div class="content"></div>'
                    strHtml += '      <div class="row">'
                    strHtml += '        <div class="col-md-12">'
                    strHtml += '            <button class="btn btn-texticon bg-primary" id="btnFilter"><i class="fa fa-filter"></i><span langkey="sys_Btn_Filter"></span></button>'
                    strHtml += '            <button class="btn btn-default btn-texticon" id="btnReset"><i class="fa fa-refresh"></i><span langkey="sys_Btn_Reset"></span></button>'
                    strHtml += '        </div>'
                    strHtml += '      </div>'
                    strHtml += '    </div>'
                    strHtml += '</div>'
                    $(IdOrClass_Pn).html(strHtml)


                    var ObjFormInput = {
                        dtmFilterDateFrom_dtmFilterDateTo: {
                            title: 'Khoảng ngày gửi yêu cầu', attr: "class='col-md-3'", isRequire: false
                            , datePickerRange: { todayHighlight: true, format: 'dd/mm/yyyy', weekStart: 1, startDate: null, endDate: null, diffmin: 0, diffmax: null }
                        },
                        intRequestStatusID: {
                            title: 'Trạng thái', attr: "class='col-md-3'", isRequire: false, IsRtn: true
                            , input: { type: 'select', classEx: 'form-control', attr: '' }
                            , dropDown: { arrList: $.pngGetArrComboValue(Arr_RequestStatus, 'intID', 'strName') }//-------------------$.pngGetArrComboValue(Arr_RequestStatus,'intID','strName')
                        },

                    }
                    //----------------------------
                    pnFormFlt()
                    function pnFormFlt() {
                        pngPn.getForm({
                            action: 1,
                            objInput: ObjFormInput,
                            idOrClass: IdOrClass_Pn + ' #pnFilterForm .content',
                            objDetail: Obj_Filter_Dtl
                        })
                    }

                    $(IdOrClass_Pn).DefaultButton(IdOrClass_Pn + ' #btnFilter')

                    $(IdOrClass_Pn + ' #btnFilter').click(function () {
                        pngPn.getForm({
                            action: 2,
                            objInput: ObjFormInput,
                            idOrClass: IdOrClass_Pn + ' #pnFilterForm .content',
                            OnChkSuccess: chkSuccess
                        })
                        function chkSuccess(objRtn) {
                            Obj_Filter = objRtn
                            Obj_FN_Main.pnMain('pnTable')
                        }
                    })
                    $(IdOrClass_Pn + ' #btnReset').click(function () {
                        pnFormFlt()
                    })
                }
                objEvtPanel.pnTable = function (_idOrClassPn) {
                    var IdOrClass_Pn = _idOrClassPn

                    pngPn.getTable2({
                        objApi: ObjList_Api.GetListAgentRequest
                        , objParams_Cus: Obj_Filter
                        , editRlt: function (value, key) {
                        }
                        , objCols: {

                            No: { name: '<span langkey="sys_Txt_No"></span>' }
                            , strCompanyName: { name: 'Tên nhà cung cấp' }
                            , strGroupName: { name: 'Group Name' }
                            , strTitle: { name: 'Tiêu đề' }
                            , strContent: { name: pngElm.getLangKey({ langkey: 'sys_Txt_Content' }) }

                        }
                        // ,editTableInput:function(){}
                        , changeCkbMaster: function (IsChecked, intRowID, arrList) {
                            if (IsChecked)
                                $(IdOrClass_Pn + ' tr[row=' + intRowID + '] td').css('background', '#e7eefb')
                            else
                                $(IdOrClass_Pn + ' tr[row=' + intRowID + '] td').removeAttr('style')


                            if ($(IdOrClass_Pn + ' input[chkboxMaster="true"]:checked').length == 0) {
                                $(IdOrClass_Main + " #pnListBtn .viewedit>span.intITs").text('')
                                $(IdOrClass_Main + " #pnListBtn .viewedit").hide()
                            } else {
                                $(IdOrClass_Main + " #pnListBtn .viewedit>span.intITs").text(' (' + $(IdOrClass_Pn + ' input[chkboxMaster="true"]:checked').length + ' item(s))')
                                $(IdOrClass_Main + " #pnListBtn .viewedit").show()
                            }

                            ArrListTbl = arrList
                        }
                        , customEvent: function (_iOrClass_Pn, _objDtl) {

                            $(_iOrClass_Pn + ' button').click(function () {
                                var intRowID = $(this).attr('intRowID')
                                var action = $(this).attr('action')
                                if (action == "ViewDetail") {
                                    window.open('?page=requestdetail&guid=' + ArrListTbl[intRowID].strRequestServiceGUID)
                                }
                            })


                            $(IdOrClass_Main + ' .btnDelete').click(function () {
                                var data = $(this).attr('data')

                                $.Confirm({
                                    strContent: '<span langkey="sys_Cfm_AYS"></span>'
                                    , OnSuccess: function () {




                                    }
                                })

                            })

                            $(IdOrClass_Pn + " .isEnableStatus").unbind('click')
                            $(IdOrClass_Pn + " .isEnableStatus").click(function () {
                                var data = $(this).attr('data');
                                var temp = $(this).is(":checked")
                                var self = this
                                ArrListTbl[data].strRequestBookingResult = temp
                                $.ModuleAdmin_MainListRequest_Popup_Resolve({
                                    strUserGUID: options.strUserGUID
                                    , strCompanyGUID: options.strCompanyGUID
                                    , objDetail: ArrListTbl[data]
                                    , OnSuccess: function () {
                                        Obj_FN_Main.pnMain('pnTable')
                                    }
                                })

                            })


                            $(IdOrClass_Pn + ' .detailContent').click(function () {
                                var data = $(this).attr('data');
                                pngPn.getPopUp({
                                    strTitle: 'Detail Content'
                                    , intTypeSize: 2
                                    , OnPanel: GetMainPanelDetailContent
                                    , OnClosePopUp: function () {

                                    }
                                })
                                function GetMainPanelDetailContent(_IdOrClassPp, _OnClosePp) {
                                    $(_IdOrClassPp).html(ArrListTbl[data].strRequestServiceDescription)
                                }

                            })
                        }
                        // ,changeInput:function(){}
                        , IsViewCheckBoxMain: false
                        , idOrClass: IdOrClass_Pn
                    })

                }


                //==============================
                pngPn.getPanelHtml({            // Get ra panel dạng html
                    objPanel: objPanel
                    , objEvtPanel: objEvtPanel
                    , idOrClass: IdOrClass_Main  // Id or class chính
                    , OnChangeIdPn: function (_Fn) {
                        Obj_FN_Main.pnMain = _Fn    // Hàm đổi trang
                    }
                })



            }

            //--------------GETLIST     // Các hàm get list dữ liệu tương ứng phía tren



            //--------------END - GETLIST


        }


        $.ModulePage_UserDetail_Survey = function (options) {
            var defaults = {
                strUserGUID: JSON.parse(png.ArrLS.UserDetail.get()).strPassengerGUID,
                OnSuccess: function () {
                }
            }
            options = $.extend(defaults, options);



            var ObjList_Api = {
                GetListBooking: {
                    strApiLink: 'api/booking/GetListBooking'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingCode: null
                        , strFilterDateFrom: null
                        , strFilterDateTo: null
                        , intOrderStatusID: null
                        , intPaymentStatusID: null
                        , intBookingStatusID: null
                        , intCurPage: 1
                        , intPageSize: 10
                        , strBookingGUID: null
                        , isPartner: 1
                        , tblsReturn: '[0]'
                    }
                }
                , GetListBookingAgentHostByTraveller: {
                    strApiLink: 'api/public/traveller/GetListBookingAgentHostByTraveller'
                    , objParams: {
                        strPassengerGUID: options.strUserGUID
                        , strBookingByAgentHostGUID: null
                        , strOrderAgentHostCode: null
                        , strFilterDateFrom: null
                        , strFilterDateTo: null
                        , intOrderStatusID: null
                        , intPaymentStatusID: null
                        , intBookingStatusID: null
                        , strConfirmedCode: null

                        , intCurPage: 1
                        , intPageSize: 10
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                }
                , GetPaymentBookingAmountAndPeriod: {
                    strApiLink: 'api/booking/GetPaymentBookingAmountAndPeriod'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingGUID: null
                        , dtmDateDay: null
                    }
                }
                , GetListBookingPaymentTermNoPaid: {
                    strApiLink: 'api/booking/GetListBookingPaymentTermNoPaid'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingGUID: null
                    }
                }
                , GetListBookingInvoicePaid: {
                    strApiLink: 'api/booking/GetListBookingInvoicePaid'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strBookingGUID: null
                    }
                }
                , GetListCompanyBankAccount: {
                    strApiLink: 'api/user/GetListCompanyBankAccount'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strCompanyBankAccountGUID: null
                        , tblsReturn: '[0]'
                    }
                }


                , GetListPayableBookingItem: {
                    strApiLink: 'api/payrcvbooking/GetListPayableBookingItem'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strPayableBookingItemGUID: null
                        , strOrderBookingGUID: null
                        , strBookingGUID: null
                        , IsPaid: null
                        , intCurPage: null
                        , intPageSize: null
                        , strOrder: null
                        , tblsReturn: '[0]'
                    }
                }

                , GetBookingItemForConfirmedCode: {
                    strApiLink: 'api/booking/GetBookingItemForConfirmedCode'
                    , objParams: {
                        strUserGUID: options.strUserGUID
                        , strConfirmedCode: null,
                    }
                }
            }


            var ObjList_ComboValue = {
                Arr_OrderStatus_Ddl: {
                    strTableName: 'OB02'
                    , strFeildSelect: 'OB02_OrderStatusID AS intID,OB02_OrderStatusName AS strName'
                    , strWhere: 'WHERE IsActive = 1 ORDER BY OB02_Order'
                }
                , Arr_PaymentStatus_Ddl: {
                    strTableName: 'OB04'
                    , strFeildSelect: 'OB04_PaymentStatusID AS intID,OB04_PaymentStatusName AS strName'
                    , strWhere: 'WHERE IsActive = 1 ORDER BY OB04_Order'
                }
            }


            var Arr_OrderStatus_Ddl = []
            var Arr_PaymentStatus_Ddl = []

            var Arr_FilterOrderStatus = []
            var Arr_FilterBookingStatus = []

            var Obj_Filter = {
                intOrderStatusID: 7
            }


            var Obj_FN_Main = {}

            png.postListApiGetValue({
                // objList_Api: ObjList_Api
                objList_ComboValue: ObjList_ComboValue
                // ,objListApi_RtnVal: {           // Giá trị nhận về từ API
                //     'GetListBooking':{               // Tên api tương ứng với giá trị trả về
                //         objParams_Cus:{
                //             tblsReturn:'[7]'
                //         }
                //         ,OnSuccess: function(data){
                //             Arr_FilterOrderStatus = JSON.parse(data)[7]

                //             var intTotalAll = 0
                //             Arr_FilterOrderStatus.forEach(function(value){
                //                 intTotalAll+= value.intTotal
                //             })

                //             Arr_FilterOrderStatus.unshift({
                //                 intOrderStatusID: null
                //                 ,strOrderStatusName: 'All'
                //                 ,intTotal: intTotalAll
                //             })
                //         }
                //     }
                // }
                , objListComboValue_RtnVal: {
                    'Arr_OrderStatus_Ddl': {
                        objParams_Cus: {}, OnSuccess: function (data) {
                            Arr_OrderStatus_Ddl = $.pngGetArrComboValue(data, 'intID', 'strName')
                            Arr_OrderStatus_Ddl.unshift({ '': pngElm.getLangKey({ langkey: 'sys_Txt_DdlSelectVal' }) })
                        }
                    }
                    , 'Arr_PaymentStatus_Ddl': {
                        objParams_Cus: {}, OnSuccess: function (data) {
                            Arr_PaymentStatus_Ddl = $.pngGetArrComboValue(data, 'intID', 'strName')
                            Arr_PaymentStatus_Ddl.unshift({ '': pngElm.getLangKey({ langkey: 'sys_Txt_DdlSelectVal' }) })
                        }
                    }
                }
                , OnSuccessList: function (data) {

                    GetDataFilter({
                        OnSuccess: function () {
                            GetMainPanel()
                        }
                    })
                }
            })

            function GetDataFilter(_Opt) {
                var _Dft = {
                    OnSuccess: function () { }
                }
                _Opt = $.extend(_Dft, _Opt)
                png.postListApiGetValue({
                    objList_Api: ObjList_Api
                    , objListApi_RtnVal: {
                        'GetListBookingAgentHostByTraveller': {
                            objParams_Cus: $.pngExtendObj(Obj_Filter, {
                                tblsReturn: '[1]'
                            })
                            , OnSuccess: function (data) {
                                Arr_FilterOrderStatus = JSON.parse(data)[1]
                                var intTotalAll = 0
                                Arr_FilterOrderStatus.forEach(function (value) {
                                    intTotalAll += value.intTotal
                                })

                                Arr_FilterOrderStatus.unshift({
                                    intOrderStatusID: null
                                    , strOrderStatusName: 'All'
                                    , intTotal: intTotalAll
                                })
                                _Opt.OnSuccess.call()
                            }
                        }
                    }
                })
            }
            function GetPanelFilter() {
                var IdOrClass_Pn = '#pnFormFilter'
                var strHtml = ''

                Arr_FilterOrderStatus.forEach(function (value, key) {
                    strHtml += '<a data="' + key + '" class="txt-black txt-weight-bold pn-margin-r-30" style="display:inline-block">' + value.strOrderStatusName + ' (' + (value.intTotal || 0) + ')</a>'
                })
                $(IdOrClass_Pn + ' #pnSearch-1').html(strHtml)


                $(IdOrClass_Pn + ' #pnSearch-2').html('')


                $('a', IdOrClass_Pn + ' #pnSearch-1').click(function (e) {
                    var data = $(this).attr('data')

                    window.history.pushState("", "", $.pngGetQSVal('status', data));

                    $('a', IdOrClass_Pn + ' #pnSearch-1').addClass('txt-black').removeClass('txt-primary')
                    $(IdOrClass_Pn + ' #pnSearch-2').html('')

                    $(this).addClass('txt-primary').removeClass('txt-black')

                    Obj_Filter.intOrderStatusID = Arr_FilterOrderStatus[data].intOrderStatusID
                    Obj_Filter.intBookingStatusID = null

                    if (Arr_FilterOrderStatus[data].intOrderStatusID == 4) {
                        png.postListApiGetValue({
                            objList_Api: ObjList_Api
                            , objListApi_RtnVal: {
                                'GetListBookingAgentHostByTraveller': {
                                    objParams_Cus: $.pngExtendObj(Obj_Filter, {
                                        tblsReturn: '[2]'
                                    })
                                    , OnSuccess: function (data) {
                                        Arr_FilterBookingStatus = JSON.parse(data)[2]

                                        GetPanelFilterBookingStatus()
                                    }
                                }
                            }
                        })
                    } else {
                        if (typeof e.originalEvent != 'undefined') {
                            pnTable_GetPanel({ idOrClass: '#pnTable' })
                        }
                    }

                })

                var data = 0
                if ($.pngGetQSVal('status') && Arr_FilterOrderStatus[$.pngGetQSVal('status')]) {
                    data = $.pngGetQSVal('status')
                }
                $('a[data=' + data + ']', IdOrClass_Pn + ' #pnSearch-1').click()


                function GetPanelFilterBookingStatus() {

                    var strHtml = ''
                    Arr_FilterBookingStatus.forEach(function (value, key) {
                        strHtml += '<a data="' + key + '" class="txt-black pn-margin-r-30" style="display:inline-block">' + value.strBookingStatusName + ' (' + (value.intTotal || 0) + ')</a>'
                    })

                    $(IdOrClass_Pn + ' #pnSearch-2').html(strHtml)

                    $('a', IdOrClass_Pn + ' #pnSearch-2').click(function (e) {
                        var data = $(this).attr('data')

                        if ($.pngGetQSVal('statusItem'))
                            window.history.pushState("", "", $.pngGetQSVal('statusItem', data));
                        else
                            window.history.replaceState("", "", $.pngGetQSVal('statusItem', data));


                        $('a', IdOrClass_Pn + ' #pnSearch-2').addClass('txt-black').removeClass('txt-primary')

                        $(this).addClass('txt-primary').removeClass('txt-black')

                        Obj_Filter.intBookingStatusID = Arr_FilterBookingStatus[data].intBookingStatusID

                        // if(typeof e.originalEvent != 'undefined'){
                        pnTable_GetPanel({ idOrClass: '#pnTable' })
                        // }
                    })

                    var data = 0
                    if ($.pngGetQSVal('statusItem') && Arr_FilterBookingStatus[$.pngGetQSVal('statusItem')]) {
                        data = $.pngGetQSVal('statusItem')
                    }

                    $('a[data=' + data + ']', IdOrClass_Pn + ' #pnSearch-2').click()

                }
            }

            // GetMainPanel()
            function GetMainPanel() {

                pnFormFilter_GetPanel({ idOrClass: '#pnFormFilter' })
                pnTable_GetPanel({ idOrClass: '#pnTable' })

            }
            function pnFormFilter_GetPanel(_Opt) {
                var Dft = {
                    idOrClass: ''
                    , OnSuccess: function () {

                    }
                }
                _Opt = $.extend(Dft, _Opt);

                var IdOrClass_Pn = _Opt.idOrClass

                var strHtml = ''
                strHtml += '<div id="pnFormSearch" class="pn-margin-b-30"></div>'
                strHtml += '<div id="pnSearch-1" class="pn-margin-b-30"></div>'
                strHtml += '<div id="pnSearch-2" class="pn-margin-b-30"></div>'
                $(IdOrClass_Pn).html(strHtml)

                var objInput = {
                    strOrderAgentHostCode: {
                        title: '', attr: 'class="col-md-12" style="border-right: 1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                        , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'style="width:120px" placeholder="' + pngElm.getLangKey({ langkey: 'pg_Dft_TC_LtBk_BookingCode' }) + '" style="padding-left:15px"' } //maxlength="30"
                    }
                    , strConfirmedCode: {
                        title: '', attr: 'class="col-md-12" style="border-right: 1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                        , input: { type: 'text', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'style="width:120px" placeholder="Confirmed Code" style="padding-left:15px"' } //maxlength="30"
                    }
                    , strFilterDateFrom_strFilterDateTo: {
                        title: '', attr: 'class="col-md-12" style="border-right: 1px solid #D6D6D6;"', isRequire: false, IsRtn: true
                        , datePickerRange: { todayHighlight: true, format: 'dd/mm/yyyy', weekStart: 1, startDate: null, endDate: null }
                    }
                    // ,intOrderStatusID: {
                    //     title: pngElm.getLangKey({langkey:'pg_Dft_TC_LtBk_BookingStatus'}), attr: '', isRequire: false, IsRtn: true
                    //     , input: { type: 'select', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'style="border-right:1px solid #909090;padding-left:15px"' } //maxlength="30"
                    //     ,dropDown:{arrList:Arr_OrderStatus_Ddl}
                    // }
                    //, intPaymentStatusID: {
                    //    title: '<span class="mobile-pn-padding-0" style="line-height: 35px;padding: 0 15px;">' + pngElm.getLangKey({ langkey: 'pg_Dft_TC_LtBk_PaymentStatus' }) + '</span>', attr: 'class="col-md-12"', isRequire: false, IsRtn: true
                    //    , input: { type: 'select', classEx: 'form-control pn-border-none pn-shadow-none bg-none', attr: 'style="border-right:1px solid #909090;padding-left:15px"' } //maxlength="30"
                    //    , dropDown: { arrList: Arr_PaymentStatus_Ddl }
                    //}
                }



                pngPn.getFormHorizontal({
                    objInput: objInput
                    , idOrClass: IdOrClass_Pn + ' #pnFormSearch'
                    , objDetail: {}
                    , classEx: 'bg-white pn-round-1em'
                    , attr: 'style="border: 1px solid #D6D6D6;"'
                    , strHtmlBtn: '<button id="btnFilter" class="btn bg-primary txt-white pn-round-1em pn-round-t-l-0 pn-round-b-l-0"><i class="fa fa-search"></i></button>'
                })

                $('.input-daterange input', IdOrClass_Pn).css('border', 'none').css('width', '120px')
                $('.input-group-addon', IdOrClass_Pn).css('border', 'none')




                $(IdOrClass_Pn).DefaultButton(IdOrClass_Pn + ' #btnFilter')
                $(IdOrClass_Pn + ' #btnFilter').click(function () {
                    pngPn.getForm({
                        action: 2,
                        objInput: objInput,
                        idOrClass: IdOrClass_Pn,
                        OnChkSuccess: chkSuccess
                    })
                    function chkSuccess(objRtn) {
                        Obj_Filter = $.pngExtendObj(Obj_Filter, objRtn)
                        pnTable_GetPanel({ idOrClass: '#pnTable' })

                        //GetDataFilter({
                        //    OnSuccess: function () {
                        //        GetPanelFilter()
                        //    }
                        //})


                    }
                })


                //GetPanelFilter()


            }


            function pnTable_GetPanel(_Opt) {
                var Dft = {
                    idOrClass: ''
                    , OnSuccess: function () {

                    }
                }
                _Opt = $.extend(Dft, _Opt);

                var IdOrClass_Pn = _Opt.idOrClass

                $(IdOrClass_Pn).html('<div class="bg-white pn-padding-15 pn-round-1em"></div>')

                var ArrListTbl = []
                //---------ObjConfigLang
                //---------ArrConfigLang
                //---------IsConfigLang
                //---------IntConfigLang
                //---------StrConfigLang

                var objCols = {
                    'No': { name: '<span langkey="sys_Txt_Tbl-No"></span>' }
                    , strHtmlOrderBookingCode: { name: '<span langkey="pg_Dft_TC_LtBk_BookingCode"></span>' }
                    , strGroupName: { name: 'Group Name', IsMergeRow: true }
                    , strCompanyName: { name: '<span langkey="pg_Dft_TC_LtBk_CompanyName"></span>' }
                    , strHtmlAction: { name: '<span langkey="sys_Txt_Tbl-Action"></span>', strAttrTH: 'style="width:150px"' }
                    // ,isNewBooking:{IsColSpecial:true,strStyle:{'0':'','1':'background:#ffe4e4'}}
                    , intOrderStatusID: { IsColSpecial: true, strStyle: { '4': '', '6': 'text-decoration: line-through;' } }
                }

                if ($(window).width() < 767) {
                    objCols = {
                        'No': { name: '<span langkey="sys_Txt_Tbl-No"></span>' }

                        , strHtmlOrderBookingCode: {
                            name: '<span langkey="pg_Dft_TC_LtBk_BookingCode"></span>', strAttrTD: "style='vertical-align: top' "
                            , list_input: {

                                strHtmlOrderBookingCode: {
                                    title: '', attr: "class='col-md-12' "
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                dtmDateFromTo: {
                                    title: '', attr: "class='col-md-12' style='margin-bottom:5px"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                strGroupName: {
                                    title: 'Group Name', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                strCompanyName: {
                                    title: '<span langkey="pg_Dft_TC_LtBk_CompanyName"></span>', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                intTotalPax: {
                                    title: '<span langkey="pg_Dft_TC_LtBk_GroupSize"></span>', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },

                                strOrderStatusName_View: {
                                    title: '<span langkey="pg_Dft_TC_LtBk_BookingStatus"></span>', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                strPaymentStatusName: {
                                    title: '<span langkey="pg_Dft_TC_LtBk_PaymentStatus"></span>', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },

                            }
                        }
                        , dblPriceTotalView: {
                            name: '<span langkey="pg_Dft_TC_LtBk_PriceTotal"></span>', strAttrTD: 'style="vertical-align:top"'
                            , list_input: {
                                dblPriceTotalView: {
                                    title: '', attr: "class='col-md-12'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },

                                dblPricePaidView: {
                                    title: '<span langkey="pg_Dft_TC_LtBk_PricePaid"></span>', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                dblPricePayableView: {
                                    title: 'Payable', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },
                                strHtmlAction: {
                                    title: '', attr: "class='col-md-12' style='margin-bottom:5px'"
                                    , input: { IsNoInput: true, IsViewDtl: true }
                                },

                            }
                        }
                        , intOrderStatusID: { IsColSpecial: true, strStyle: { '4': '', '6': 'text-decoration: line-through;' } }
                    }

                }


                pngPn.getTable2({
                    objApi: ObjList_Api.GetListBookingAgentHostByTraveller
                    , objParams_Cus: Obj_Filter

                    , editRlt: function (value, key) {
                        value['strHtmlAction'] = ''
                        if (value.intOrderStatusID == 3) {
                            value['strHtmlAction'] += '<b style="color:red">Time remaining:<br> <span class="pnTimeRemain_' + key + '"></span></b><br>'
                            value['strHtmlAction'] += '<button action="ChangeBooking" class="btn btn-texticon bg-primary" intRowID="' + key + '"><i class="fa fa-bookmark"></i><span>Change Booking</span></button>'
                        }

                        var strUrl = '/user/' + JSON.parse(png.ArrLS.UserDetail.get()).strUserName + '?strKey=' + $.pngGetQSVal('strKey') + '&BKID=' + value.strBookingGUID //coreLoadPage.getUrlHost()
                        //strUrl = $.pngGetQSVal('cname', $.pngGetQSVal('cname'), strUrl)
                        //strUrl = $.pngGetQSVal('page', 'bookingdetail', strUrl)
                        //strUrl = $.pngGetQSVal('BKID', value.strBookingGUID, strUrl)
                        value['strHtmlAction'] += '<div><a class="btn btn-texticon" action="Feedback" href="' + strUrl + '"><span>Đánh giá</span></a></div>'
                        // if(value['strDtmDeadline'])
                        //     value['strHtmlAction']+= '<button class="btn" action="viewconf" key="'+key+'" guid="'+value.strBookingGUID+'"><i class="fa fa-pencil-square-o"></i></button>'
                        // value['strHtmlAction'] = '<button class="btn btn-primary" action="viewconf" guid="'+value.strBookingGUID+'"><i class="fa fa-pencil-square-o"></i><span langkey="pg_Dft_TC_LtBk_btn-Confirm"></span></button>'
                        value['strHtmlOrderBookingCode'] = '<a  action="viewdetail" intRowID="' + key + '">' + value['strOrderAgentHostCode'] + '</a></div>'

                        value['dblPriceTotalView'] = $.pngFormatPrice(value['dblPriceTotal'])

                        value['dblPricePaidView'] = '<a action="ListPaid" guid="' + value.strBookingGUID + '" data="' + key + '">' + $.pngFormatPrice(value['dblPricePaid']) + '</a>'

                        value['dblPriceBalanceView'] = '<a action="ListBalance" guid="' + value.strBookingGUID + '" data="' + key + '">' + $.pngFormatPrice(value['dblPriceBalance']) + '</a>'

                        value['dblPricePayableView'] = '<a action="ListPayable" guid="' + value.strBookingGUID + '" data="' + key + '">' + $.pngFormatPrice(value['dblPricePayable']) + '</a>'
                        if (value.dtmDateDeadline)
                            value['dblPricePayableView'] += '<div><b>' + pngElm.getLangKey({ langkey: 'sys_Txt_Deadline' }) + ': </b></div><div>' + $.pngFormatDateTime(value.dtmDateDeadline) + '</div>'

                        value.dtmDateDeadline_View = $.pngFormatDateTime(value.dtmDateDeadline)
                        value.dtmCreatedDate_View = $.pngFormatDateTime(value.dtmCreatedDate)

                        value['dblTotalProfitAgentView'] = $.pngFormatPrice(value['dblTotalProfitAgent'])

                        if (value.dtmDateFrom)
                            value['dtmDateFromTo'] = '<div>' + $.pngFormatDateTime(value.dtmDateFrom) + '</div> - ' + $.pngFormatDateTime(value.dtmDateTo)

                        value['strOrderStatusName_View'] = value['strOrderStatusName']
                        var strListConfirmedCode = ""
                        if (value.strListConfirmedCode) {
                            strListConfirmedCode += ' ('
                            value.strListConfirmedCode.split(',').forEach(function (val) {
                                strListConfirmedCode += '<a action="ViewVoucher" strConfirmedCode="' + val + '">' + val + '</a>, '
                            });

                            strListConfirmedCode += ')'
                            strListConfirmedCode = strListConfirmedCode.replace(", )", ")")
                        }
                        value['strOrderStatusName_View'] += strListConfirmedCode


                        // value['dblTotalPriceBankPay_View'] = $.pngFormatPrice(value['dblTotalPriceBankPay'])
                    }
                    , objCols: objCols
                    // ,editTableInput:function(){}
                    , changeCkbMaster: function (IsChecked, intRowID, arrList) {

                        ArrListTbl = arrList
                    }
                    , customEvent: function (_idOrClass_Pn) {

                        var obj = {}
                        ArrListTbl.forEach(function (value, key) {
                            if (value.intOrderStatusID == 3) {
                                var countDownDate = new Date($.pngFormatDateTime(value.dtmDateDeadline, 'YYYY-MM-DDTHH:mm:ss.sssZ')).getTime();
                                // Update the count down every 1 second
                                obj[key] = false
                                clearInterval(x);
                                var x = setInterval(function () {
                                    // Get today's date and time
                                    var now = new Date().getTime();

                                    // Find the distance between now and the count down date
                                    var distance = countDownDate - now;

                                    // Time calculations for days, hours, minutes and seconds
                                    var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                                    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                                    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                                    var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                                    // Display the result in the element with id="demo"
                                    $('.pnTimeRemain_' + key).html(days + "d " + hours + "h " + minutes + "m " + seconds + "s ");

                                    // If the count down is finished, write some text


                                    if (distance < 0) {
                                        clearInterval(x);
                                        $('.pnTimeRemain_' + key).html("EXPIRED");
                                        $('[row=' + key + '] button[action=ChangeBooking]').remove()
                                        if (obj[key]) {
                                            GetDataFilter({
                                                OnSuccess: function () {
                                                    GetPanelFilter()
                                                }
                                            })
                                            pnTable_GetPanel({ idOrClass: '#pnTable' })
                                        }
                                    } else {
                                        obj[key] = true
                                    }
                                }, 1000);


                            }

                        })


                        $(_idOrClass_Pn + " a").click(function () {


                            // if($(this).attr('action') == 'connecttotms'){
                            //     var arrWhere={
                            //         strUserGUID:options.arrUser.strUserGUID
                            //         ,strBookingGUID: $(this).attr('guid')
                            //     }
                            //     png.post({
                            //         url: "api/booking/GetBookingTransferDataConfig", data: {strJson : JSON.stringify(arrWhere)}
                            //         ,OnSuccess: function (data) {
                            //             var arrTbl = JSON.parse(data);
                            //             var arrXml = {};
                            //             arrTbl.forEach(function(value,key) {
                            //                 arrXml['strXML'+(key+1)] = '';
                            //                 value.forEach(function(value2) {
                            //                     arrXml['strXML'+(key+1)]+=value2[Object.keys(value2)].replace(/\"/g,'"');
                            //                 });
                            //             });
                            //             //console.log(arrXml)
                            //             ConnectToTMS.post({
                            //                 strCompanyGUID:JSON.parse(png.ArrLS.CompanyFriend.get()).strCompanyGUID
                            //                 ,url:'api/appkeys/guide/AddOrUpdBookingFromB2BXML'
                            //                 ,data:{strWhere : JSON.stringify(arrXml)}
                            //                 ,OnSuccess:function(){
                            //                     $.Confirm({
                            //                         strContent: "ADD TO TMS SUCCESS"
                            //                     })
                            //                 }
                            //             });
                            //         }
                            //     })
                            // }

                            if ($(this).attr('action') == 'ViewVoucher') {

                                png.postListApiGetValue({
                                    objList_Api: ObjList_Api
                                    // ,objList_ComboValue: ObjList_ComboValue
                                    , objListApi_RtnVal: {
                                        'GetBookingItemForConfirmedCode': {
                                            objParams_Cus: {
                                                strConfirmedCode: $(this).attr('strConfirmedCode')
                                            },
                                            OnSuccess: function (data) {
                                                objDetailPost = JSON.parse(data)[0][0]   // Dữ liệu trả về từ dropdownlist trên

                                                if (objDetailPost["intCateID"] == 18 || objDetailPost["intCateID"] == 19 || objDetailPost["intCateID"] == 33)
                                                    $.ModulePage_BookingDetailMain_PopUpVoucherForTour({
                                                        strUserGUID: options.strUserGUID,
                                                        objDetailPost: objDetailPost,
                                                    })
                                                if (objDetailPost["intCateID"] == 1)
                                                    $.ModulePage_BookingDetailMain_PopUpVoucherForSupp({
                                                        strUserGUID: options.strUserGUID,
                                                        objDetailPost: objDetailPost,
                                                    })

                                            }
                                        },
                                    }
                                })
                            }

                            if ($(this).attr('action') == 'ListPaid') {

                                $.ModulePage_ListBookingMain_PopUpPaid({
                                    strUserGUID: options.strUserGUID
                                    , strCompanyGUID: null//options.strCompanyGUID
                                    , objBookingDetail: ArrListTbl[$(this).attr('data')]
                                    , OnSuccess: function () {
                                        pnTable_GetPanel({ idOrClass: '#pnTable' })
                                    }
                                })
                            }
                            if ($(this).attr('action') == 'ListBalance') {
                            }

                            if ($(this).attr('action') == 'ListPayable') {
                                $.ModulePage_ListBookingMain_PopUpPayable({
                                    strUserGUID: options.strUserGUID
                                    , strCompanyGUID: null//options.strCompanyGUID
                                    , objBookingDetail: ArrListTbl[$(this).attr('data')]
                                    , OnSuccess: function () {
                                        pnTable_GetPanel({ idOrClass: '#pnTable' })
                                    }
                                })
                            }


                            if ($(this).attr('action') == 'viewdetail') {
                                $.ModulePage_ListBookingMain_PopUpInfo({
                                    objBookingDetail: ArrListTbl[$(this).attr('intRowID')]
                                })
                            }
                        })


                        $(_idOrClass_Pn + " button").click(function () {
                            var action = $(this).attr('action')

                            if (action == 'ChangeBooking') {
                                var intRowID = $(this).attr('intRowID')

                                $.ModulePage_ListBookingMain_PopUpChangeBooking({
                                    strUserGUID: options.strUserGUID
                                    , strCompanyGUID: null//options.arrUser.strCompanyGUID
                                    , strBookingGUID: ArrListTbl[intRowID].strBookingGUID
                                    , objBookingDetail: ArrListTbl[intRowID]
                                    , OnSuccess: function () {
                                        GetDataFilter({
                                            OnSuccess: function () {
                                                GetPanelFilter()
                                            }
                                        })
                                        pnTable_GetPanel({ idOrClass: '#pnTable' })
                                    }
                                })

                            }
                        })



                    }
                    // ,changeInput:function(){}
                    , IsViewCheckBoxMain: false
                    , idOrClass: IdOrClass_Pn
                })
            }

        }

        coreSystem.getLoadPage({
            OnSuccess: function () {
                pngElm.getLangKey()

                $.ModulePage_UserDetail()
            }
        })

    </script>
</app-content-display>